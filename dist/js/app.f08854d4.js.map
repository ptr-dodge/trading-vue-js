{"version":3,"file":"js/app.f08854d4.js","mappings":"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","sources":["webpack://trading-vue-js/./src/App.vue","webpack://trading-vue-js/./src/TradingVue.vue","webpack://trading-vue-js/./src/stuff/constants.js","webpack://trading-vue-js/./src/components/Chart.vue","webpack://trading-vue-js/./src/stuff/context.js","webpack://trading-vue-js/./src/stuff/utils.js","webpack://trading-vue-js/./src/stuff/math.js","webpack://trading-vue-js/./src/components/js/layout_fn.js","webpack://trading-vue-js/./src/components/js/log_scale.js","webpack://trading-vue-js/./src/components/js/grid_maker.js","webpack://trading-vue-js/./src/components/js/layout.js","webpack://trading-vue-js/./src/components/js/updater.js","webpack://trading-vue-js/./src/components/Section.vue","webpack://trading-vue-js/./src/stuff/frame.js","webpack://trading-vue-js/./src/components/js/grid.js","webpack://trading-vue-js/./src/mixins/canvas.js","webpack://trading-vue-js/./src/mixins/uxlist.js","webpack://trading-vue-js/./src/components/js/crosshair.js","webpack://trading-vue-js/./src/components/Crosshair.vue","webpack://trading-vue-js/./src/components/Crosshair.vue?46b8","webpack://trading-vue-js/./src/components/KeyboardListener.vue","webpack://trading-vue-js/./src/components/KeyboardListener.vue?3b0d","webpack://trading-vue-js/./src/stuff/mouse.js","webpack://trading-vue-js/./src/mixins/overlay.js","webpack://trading-vue-js/./src/components/overlays/Spline.vue","webpack://trading-vue-js/./src/components/overlays/Spline.vue?209c","webpack://trading-vue-js/./src/components/overlays/Splines.vue","webpack://trading-vue-js/./src/components/overlays/Splines.vue?556a","webpack://trading-vue-js/./src/components/overlays/Range.vue","webpack://trading-vue-js/./src/components/overlays/Range.vue?162d","webpack://trading-vue-js/./src/components/overlays/Trades.vue","webpack://trading-vue-js/./src/components/overlays/Trades.vue?1383","webpack://trading-vue-js/./src/components/overlays/Channel.vue","webpack://trading-vue-js/./src/components/overlays/Channel.vue?7f56","webpack://trading-vue-js/./src/components/overlays/Segment.vue","webpack://trading-vue-js/./src/components/overlays/Segment.vue?c56c","webpack://trading-vue-js/./src/components/js/layout_cnv.js","webpack://trading-vue-js/./src/components/primitives/candle.js","webpack://trading-vue-js/./src/components/primitives/volbar.js","webpack://trading-vue-js/./src/components/primitives/price.js","webpack://trading-vue-js/./src/components/overlays/Candles.vue","webpack://trading-vue-js/./src/components/overlays/Candles.vue?5752","webpack://trading-vue-js/./src/components/overlays/Volume.vue","webpack://trading-vue-js/./src/components/overlays/Volume.vue?f282","webpack://trading-vue-js/./src/components/overlays/Splitters.vue","webpack://trading-vue-js/./src/components/overlays/Splitters.vue?36c2","webpack://trading-vue-js/./src/stuff/keys.js","webpack://trading-vue-js/./src/mixins/tool.js","webpack://trading-vue-js/./src/components/primitives/pin.js","webpack://trading-vue-js/./src/components/primitives/seg.js","webpack://trading-vue-js/./src/components/primitives/line.js","webpack://trading-vue-js/./src/components/primitives/ray.js","webpack://trading-vue-js/./src/components/overlays/LineTool.vue","webpack://trading-vue-js/./src/components/overlays/LineTool.vue?a81b","webpack://trading-vue-js/./src/components/overlays/RangeTool.vue","webpack://trading-vue-js/./src/components/overlays/RangeTool.vue?6e8c","webpack://trading-vue-js/./src/components/Grid.vue","webpack://trading-vue-js/./src/components/Grid.vue?f898","webpack://trading-vue-js/./src/components/js/sidebar.js","webpack://trading-vue-js/./src/components/Sidebar.vue","webpack://trading-vue-js/./src/components/Sidebar.vue?5d01","webpack://trading-vue-js/./src/components/Legend.vue","webpack://trading-vue-js/./src/components/ButtonGroup.vue","webpack://trading-vue-js/./src/components/LegendButton.vue","webpack://trading-vue-js/./src/components/LegendButton.vue?e434","webpack://trading-vue-js/./src/components/ButtonGroup.vue?3f36","webpack://trading-vue-js/./src/components/Spinner.vue","webpack://trading-vue-js/./src/components/Spinner.vue?1502","webpack://trading-vue-js/./src/components/Legend.vue?ec78","webpack://trading-vue-js/./src/mixins/shaders.js","webpack://trading-vue-js/./src/components/Section.vue?20bb","webpack://trading-vue-js/./src/components/js/botbar.js","webpack://trading-vue-js/./src/components/Botbar.vue","webpack://trading-vue-js/./src/components/Botbar.vue?fc59","webpack://trading-vue-js/./src/components/Keyboard.vue","webpack://trading-vue-js/./src/components/Keyboard.vue?1043","webpack://trading-vue-js/./src/mixins/datatrack.js","webpack://trading-vue-js/./src/components/js/ti_mapping.js","webpack://trading-vue-js/./src/components/Chart.vue?8709","webpack://trading-vue-js/./src/components/Toolbar.vue","webpack://trading-vue-js/./src/components/ToolbarItem.vue","webpack://trading-vue-js/./src/components/ItemList.vue","webpack://trading-vue-js/./src/components/ItemList.vue?94e6","webpack://trading-vue-js/./src/components/ToolbarItem.vue?d28a","webpack://trading-vue-js/./src/components/Toolbar.vue?65f7","webpack://trading-vue-js/./src/components/Widgets.vue","webpack://trading-vue-js/./src/components/Widgets.vue?de5a","webpack://trading-vue-js/./src/components/TheTip.vue","webpack://trading-vue-js/./src/components/TheTip.vue?bdb6","webpack://trading-vue-js/./src/mixins/xcontrol.js","webpack://trading-vue-js/./src/TradingVue.vue?cc93","webpack://trading-vue-js/./src/stuff/linreg.js","webpack://trading-vue-js/./src/helpers/script_utils.js","webpack://trading-vue-js/./src/helpers/sampler.js","webpack://trading-vue-js/./src/helpers/script_ts.js","webpack://trading-vue-js/./src/helpers/symbol.js","webpack://trading-vue-js/./src/helpers/script_std.js","webpack://trading-vue-js/./src/helpers/script_env.js","webpack://trading-vue-js/./src/helpers/symstd.js","webpack://trading-vue-js/./src/helpers/script_engine.js","webpack://trading-vue-js/./src/helpers/dataset.js","webpack://trading-vue-js/./src/helpers/script_ww.js","webpack://trading-vue-js/./src/helpers/script_ww_api.js","webpack://trading-vue-js/./src/helpers/dc_events.js","webpack://trading-vue-js/./src/helpers/dc_core.js","webpack://trading-vue-js/./src/helpers/sett_proxy.js","webpack://trading-vue-js/./src/helpers/agg_tool.js","webpack://trading-vue-js/./src/helpers/datacube.js","webpack://trading-vue-js/./src/App.vue?7ccd","webpack://trading-vue-js/./src/main.js","webpack://trading-vue-js/webpack/bootstrap","webpack://trading-vue-js/webpack/runtime/chunk loaded","webpack://trading-vue-js/webpack/runtime/compat get default export","webpack://trading-vue-js/webpack/runtime/define property getters","webpack://trading-vue-js/webpack/runtime/global","webpack://trading-vue-js/webpack/runtime/hasOwnProperty shorthand","webpack://trading-vue-js/webpack/runtime/jsonp chunk loading","webpack://trading-vue-js/webpack/startup"],"sourcesContent":["<template>\n<trading-vue :data=\"chart\" :width=\"this.width\" :height=\"this.height\"\n        :color-back=\"colors.colorBack\"\n        :color-grid=\"colors.colorGrid\"\n        :color-text=\"colors.colorText\">\n</trading-vue>\n</template>\n\n<script>\nimport TradingVue from './TradingVue.vue'\nimport Data from '../data/data.json'\nimport DataCube from '../src/helpers/datacube.js'\n\nexport default {\n    name: 'app',\n    components: {\n        TradingVue\n    },\n    methods: {\n        onResize() {\n            this.width = window.innerWidth\n            this.height = window.innerHeight\n        }\n    },\n    mounted() {\n        window.addEventListener('resize', this.onResize)\n        window.dc = this.chart\n    },\n    beforeDestroy() {\n        window.removeEventListener('resize', this.onResize)\n    },\n    data() {\n        return {\n            chart: new DataCube(Data),\n            width: window.innerWidth,\n            height: window.innerHeight,\n            colors: {\n                colorBack: '#fff',\n                colorGrid: '#eee',\n                colorText: '#333',\n            }\n        };\n    }\n};\n</script>\n\n<style>\nhtml,\nbody {\n    background-color: #000;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n</style>\n","\n<template>\n    <!-- Main component  -->\n    <div class=\"trading-vue\" v-bind:id=\"id\"\n        @mousedown=\"mousedown\" @mouseleave=\"mouseleave\"\n         :style=\"{\n            color: this.chart_props.colors.text,\n            font: this.font_comp,\n            width: this.width+'px',\n            height: this.height+'px'}\">\n        <toolbar v-if=\"toolbar\"\n            ref=\"toolbar\"\n            v-on:custom-event=\"custom_event\"\n            v-bind=\"chart_props\"\n            v-bind:config=\"chart_config\">\n        </toolbar>\n        <widgets v-if=\"controllers.length\"\n            ref=\"widgets\"\n            :map=\"ws\" :width=\"width\" :height=\"height\"\n            :tv=\"this\" :dc=\"data\">\n        </widgets>\n        <chart :key=\"reset\"\n            ref=\"chart\"\n            v-bind=\"chart_props\"\n            v-bind:tv_id=\"id\"\n            v-bind:config=\"chart_config\"\n            v-on:custom-event=\"custom_event\"\n            v-on:range-changed=\"range_changed\"\n            v-on:legend-button-click=\"legend_button\">\n        </chart>\n        <transition name=\"tvjs-drift\">\n            <the-tip :data=\"tip\" v-if=\"tip\"\n                @remove-me=\"tip = null\"/>\n        </transition>\n    </div>\n</template>\n\n<script>\n\nimport Const from './stuff/constants.js'\nimport Chart from './components/Chart.vue'\nimport Toolbar from './components/Toolbar.vue'\nimport Widgets from './components/Widgets.vue'\nimport TheTip from './components/TheTip.vue'\nimport XControl from './mixins/xcontrol.js'\n\nexport default {\n    name: 'TradingVue',\n    components: {\n        Chart, Toolbar, Widgets, TheTip\n    },\n    mixins: [ XControl ],\n    props: {\n        titleTxt: {\n            type: String,\n            default: 'TradingVue.js'\n        },\n        id: {\n            type: String,\n            default: 'trading-vue-js'\n        },\n        width: {\n            type: Number,\n            default: 800\n        },\n        height: {\n            type: Number,\n            default: 421\n        },\n        colorTitle: {\n            type: String,\n            default: '#42b883'\n        },\n        colorBack: {\n            type: String,\n            default: '#f5f5f5'\n        },\n        colorGrid: {\n            type: String,\n            default: '#2f3240'\n        },\n        colorText: {\n            type: String,\n            default: '#dedddd'\n        },\n        colorTextHL: {\n            type: String,\n            default: '#fff'\n        },\n        colorScale: {\n            type: String,\n            default: '#838383'\n        },\n        colorCross: {\n            type: String,\n            default: '#8091a0'\n        },\n        colorCandleUp: {\n            type: String,\n            default: '#23a776'\n        },\n        colorCandleDw: {\n            type: String,\n            default: '#e54150'\n        },\n        colorWickUp: {\n            type: String,\n            default: '#23a77688'\n        },\n        colorWickDw: {\n            type: String,\n            default: '#e5415088'\n        },\n        colorWickSm: {\n            type: String,\n            default: 'transparent' // deprecated\n        },\n        colorVolUp: {\n            type: String,\n            default: '#79999e42'\n        },\n        colorVolDw: {\n            type: String,\n            default: '#ef535042'\n        },\n        colorPanel: {\n            type: String,\n            default: '#565c68'\n        },\n        colorTbBack: {\n            type: String\n        },\n        colorTbBorder: {\n            type: String,\n            default: '#8282827d'\n        },\n        colors: {\n            type: Object\n        },\n        font: {\n            type: String,\n            default: Const.ChartConfig.FONT\n        },\n        toolbar: {\n            type: Boolean,\n            default: false\n        },\n        data: {\n            type: Object,\n            required: true\n        },\n        // Your overlay classes here\n        overlays: {\n            type: Array,\n            default: function () { return [] }\n        },\n        // Overwrites ChartConfig values,\n        // see constants.js\n        chartConfig: {\n            type: Object,\n            default: function () { return {} }\n        },\n        legendButtons: {\n            type: Array,\n            default: function () { return [] }\n        },\n        indexBased: {\n            type: Boolean,\n            default: false\n        },\n        extensions: {\n            type: Array,\n            default: function () { return [] }\n        },\n        xSettings: {\n            type: Object,\n            default: function () { return {} }\n        },\n        skin: {\n            type: String // Skin Name\n        },\n        timezone: {\n            type: Number,\n            default: 0\n        }\n    },\n    computed: {\n        // Copy a subset of TradingVue props\n        chart_props() {\n            let offset = this.$props.toolbar ?\n                this.chart_config.TOOLBAR : 0\n            let chart_props = {\n                title_txt: this.$props.titleTxt,\n                overlays: this.$props.overlays.concat(this.mod_ovs),\n                data: this.decubed,\n                width: this.$props.width - offset,\n                height: this.$props.height,\n                font: this.font_comp,\n                buttons: this.$props.legendButtons,\n                toolbar: this.$props.toolbar,\n                ib: this.$props.indexBased || this.index_based || false,\n                colors: Object.assign({}, this.$props.colors ||\n                    this.colorpack),\n                skin: this.skin_proto,\n                timezone: this.$props.timezone\n            }\n\n            this.parse_colors(chart_props.colors)\n            return chart_props\n        },\n        chart_config() {\n            return Object.assign({},\n                Const.ChartConfig,\n                this.$props.chartConfig,\n            )\n        },\n        decubed() {\n            let data = this.$props.data\n            if (data.data !== undefined) {\n                // DataCube detected\n                data.init_tvjs(this)\n                return data.data\n            } else {\n                return data\n            }\n        },\n        index_based() {\n            const base = this.$props.data\n            if (base.chart) {\n                return base.chart.indexBased\n            }\n            else if (base.data) {\n                return base.data.chart.indexBased\n            }\n            return false\n        },\n        mod_ovs() {\n            let arr = []\n            for (var x of this.$props.extensions) {\n                arr.push(...Object.values(x.overlays))\n            }\n            return arr\n        },\n        font_comp() {\n            return this.skin_proto && this.skin_proto.font ?\n                this.skin_proto.font : this.font\n        }\n    },\n    data() {\n        return { reset: 0, tip: null }\n    },\n    beforeDestroy() {\n        this.custom_event({ event: 'before-destroy' })\n        this.ctrl_destroy()\n    },\n    methods: {\n        // TODO: reset extensions?\n        resetChart(resetRange = true) {\n            this.reset++\n            let range = this.getRange()\n            if (!resetRange && range[0] && range[1]) {\n                this.$nextTick(() => this.setRange(...range))\n            }\n            this.$nextTick(() => this.custom_event({\n                event: 'chart-reset', args: []\n            }))\n        },\n        goto(t) {\n            // TODO: limit goto & setRange (out of data error)\n            if (this.chart_props.ib) {\n                const ti_map = this.$refs.chart.ti_map\n                t = ti_map.gt2i(t, this.$refs.chart.ohlcv)\n            }\n            this.$refs.chart.goto(t)\n        },\n        setRange(t1, t2) {\n            if (this.chart_props.ib) {\n                const ti_map = this.$refs.chart.ti_map\n                const ohlcv = this.$refs.chart.ohlcv\n                t1 = ti_map.gt2i(t1, ohlcv)\n                t2 = ti_map.gt2i(t2, ohlcv)\n            }\n            this.$refs.chart.setRange(t1, t2)\n        },\n        getRange() {\n            if (this.chart_props.ib) {\n                const ti_map = this.$refs.chart.ti_map\n                // Time range => index range\n                return this.$refs.chart.range\n                    .map(x => ti_map.i2t(x))\n            }\n            return this.$refs.chart.range\n        },\n        getCursor() {\n\n            let cursor = this.$refs.chart.cursor\n            if (this.chart_props.ib) {\n                const ti_map = this.$refs.chart.ti_map\n                let copy = Object.assign({}, cursor)\n                copy.i = copy.t\n                copy.t = ti_map.i2t(copy.t)\n                return copy\n            }\n            return cursor\n        },\n        showTheTip(text, color = \"orange\") {\n            this.tip = { text, color }\n        },\n        legend_button(event) {\n            this.custom_event({\n                event: 'legend-button-click', args: [event]\n            })\n        },\n        custom_event(d) {\n            if ('args' in d) {\n                this.$emit(d.event, ...d.args)\n            } else {\n                this.$emit(d.event)\n            }\n            let data = this.$props.data\n            let ctrl = this.controllers.length !== 0\n            if (ctrl) this.pre_dc(d)\n            if (data.tv) {\n                // If the data object is DataCube\n                data.on_custom_event(d.event, d.args)\n            }\n            if (ctrl) this.post_dc(d)\n        },\n        range_changed(r) {\n            if (this.chart_props.ib) {\n                const ti_map = this.$refs.chart.ti_map\n                r = r.map(x => ti_map.i2t(x))\n            }\n            this.$emit('range-changed', r)\n            this.custom_event(\n                {event: 'range-changed', args: [r]}\n            )\n            if (this.onrange) this.onrange(r)\n        },\n        set_loader(dc) {\n            this.onrange = r => {\n                let pf = this.chart_props.ib ? '_ms' : ''\n                let tf = this.$refs.chart['interval' + pf]\n                dc.range_changed(r, tf)\n            }\n        },\n        parse_colors(colors) {\n            for (var k in this.$props) {\n                if (k.indexOf('color') === 0 && k !== 'colors') {\n                    let k2 = k.replace('color', '')\n                    k2 = k2[0].toLowerCase() + k2.slice(1)\n                    if (colors[k2]) continue\n                    colors[k2] = this.$props[k]\n                }\n            }\n        },\n        mousedown() {\n            this.$refs.chart.activated = true\n        },\n        mouseleave() {\n            this.$refs.chart.activated = false\n        }\n    }\n}\n</script>\n<style>\n/* Anit-boostrap tactix */\n.trading-vue *, ::after, ::before {\n    box-sizing: content-box;\n}\n.trading-vue img {\n    vertical-align: initial;\n}\n</style>\n","\r\nconst SECOND = 1000\r\nconst MINUTE = SECOND * 60\r\nconst MINUTE3 = MINUTE * 3\r\nconst MINUTE5 = MINUTE * 5\r\nconst MINUTE15 = MINUTE * 15\r\nconst MINUTE30 = MINUTE * 30\r\nconst HOUR = MINUTE * 60\r\nconst HOUR4 = HOUR * 4\r\nconst HOUR12 = HOUR * 12\r\nconst DAY = HOUR * 24\r\nconst WEEK = DAY * 7\r\nconst MONTH = WEEK * 4\r\nconst YEAR = DAY * 365\r\n\r\nconst MONTHMAP = [\r\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n    \"May\", \"Jun\",\"Jul\", \"Aug\",\r\n    \"Sep\", \"Oct\",\"Nov\", \"Dec\"\r\n]\r\n\r\n// Grid time steps\r\nconst TIMESCALES = [\r\n    YEAR * 10, YEAR * 5, YEAR * 3, YEAR * 2, YEAR,\r\n    MONTH * 6, MONTH * 4, MONTH * 3, MONTH * 2, MONTH,\r\n    DAY * 15, DAY * 10, DAY * 7, DAY * 5, DAY * 3, DAY * 2, DAY,\r\n    HOUR * 12, HOUR * 6, HOUR * 3, HOUR * 1.5, HOUR,\r\n    MINUTE30, MINUTE15, MINUTE * 10, MINUTE5, MINUTE * 2, MINUTE\r\n]\r\n\r\n// Grid $ steps\r\nconst $SCALES = [0.05, 0.1, 0.2, 0.25, 0.5, 0.8, 1, 2, 5]\r\n\r\nconst ChartConfig = {\r\n    SBMIN: 60,       // Minimal sidebar px\r\n    SBMAX: Infinity, // Max sidebar, px\r\n    TOOLBAR: 57,     // Toolbar width px\r\n    TB_ICON: 25,     // Toolbar icon size px\r\n    TB_ITEM_M: 6,    // Toolbar item margin px\r\n    TB_ICON_BRI: 1,  // Toolbar icon brightness\r\n    TB_ICON_HOLD: 420, // ms, wait to expand\r\n    TB_BORDER: 1,    // Toolbar border px\r\n    TB_B_STYLE: 'dotted', // Toolbar border style\r\n    TOOL_COLL: 7,    // Tool collision threshold\r\n    EXPAND: 0.15,    // %/100 of range\r\n    CANDLEW: 0.6,    // %/100 of step\r\n    GRIDX: 100,      // px\r\n    GRIDY: 47,       // px\r\n    BOTBAR: 28,      // px\r\n    PANHEIGHT: 22,   // px\r\n    DEFAULT_LEN: 50, // candles\r\n    MINIMUM_LEN: 5,  // candles,\r\n    MIN_ZOOM: 25,    // candles\r\n    MAX_ZOOM: 1000,  // candles,\r\n    VOLSCALE: 0.15,  // %/100 of height\r\n    UX_OPACITY: 0.9, // Ux background opacity\r\n    ZOOM_MODE: 'tv', // 'tv' or 'tl'\r\n    L_BTN_SIZE: 21,  // Legend Button size, px\r\n    L_BTN_MARGIN: '-6px 0 -6px 0', // css margin\r\n    SCROLL_WHEEL: 'prevent', // 'pass', 'click'\r\n}\r\n\r\nChartConfig.FONT =\r\n    `11px -apple-system,BlinkMacSystemFont,\r\n    Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,\r\n    Fira Sans,Droid Sans,Helvetica Neue,\r\n    sans-serif`\r\n\r\nconst IB_TF_WARN =\r\n    `When using IB mode you should specify ` +\r\n    `timeframe ('tf' filed in 'chart' object),` +\r\n    `otherwise you can get an unexpected behaviour`\r\n\r\nconst MAP_UNIT = {\r\n  \"1s\": SECOND,\r\n  \"5s\": SECOND * 5,\r\n  \"10s\": SECOND * 10,\r\n  \"20s\": SECOND * 20,\r\n  \"30s\": SECOND * 30,\r\n  \"1m\": MINUTE,\r\n  \"3m\": MINUTE3,\r\n  \"5m\": MINUTE5,\r\n  \"15m\": MINUTE15,\r\n  \"30m\": MINUTE30,\r\n  \"1H\": HOUR,\r\n  \"2H\": HOUR * 2,\r\n  \"3H\": HOUR * 3,\r\n  \"4H\": HOUR4,\r\n  \"12H\": HOUR12,\r\n  \"1D\": DAY,\r\n  \"1W\": WEEK,\r\n  \"1M\": MONTH,\r\n  \"1Y\": YEAR\r\n}\r\n\r\nexport default {\r\n    SECOND: SECOND,\r\n    MINUTE: MINUTE,\r\n    MINUTE5: MINUTE5,\r\n    MINUTE15: MINUTE15,\r\n    MINUTE30: MINUTE30,\r\n    HOUR: HOUR,\r\n    HOUR4: HOUR4,\r\n    DAY: DAY,\r\n    WEEK: WEEK,\r\n    MONTH: MONTH,\r\n    YEAR: YEAR,\r\n    MONTHMAP: MONTHMAP,\r\n    TIMESCALES: TIMESCALES,\r\n    $SCALES: $SCALES,\r\n    ChartConfig: ChartConfig,\r\n    map_unit: MAP_UNIT,\r\n    IB_TF_WARN\r\n}\r\n","<template>\n    <!-- Chart components combined together -->\n    <div class=\"trading-vue-chart\" :style=\"styles\">\n        <keyboard ref=\"keyboard\"></keyboard>\n        <grid-section v-for=\"(grid, i) in this._layout.grids\"\n            :key=\"grid.id\" ref=\"sec\"\n            v-bind:common=\"section_props(i)\"\n            v-bind:grid_id=\"i\"\n            v-on:register-kb-listener=\"register_kb\"\n            v-on:remove-kb-listener=\"remove_kb\"\n            v-on:range-changed=\"range_changed\"\n            v-on:cursor-changed=\"cursor_changed\"\n            v-on:cursor-locked=\"cursor_locked\"\n            v-on:sidebar-transform=\"set_ytransform\"\n            v-on:layer-meta-props=\"layer_meta_props\"\n            v-on:custom-event=\"emit_custom_event\"\n            v-on:legend-button-click=\"legend_button_click\"\n            >\n        </grid-section>\n        <botbar v-bind=\"botbar_props\"\n            :shaders=\"shaders\" :timezone=\"timezone\">\n        </botbar>\n    </div>\n</template>\n\n<script>\n\nimport Context from '../stuff/context.js'\nimport Layout from './js/layout.js'\nimport Utils from '../stuff/utils.js'\nimport CursorUpdater from './js/updater.js'\nimport GridSection from './Section.vue'\nimport Botbar from './Botbar.vue'\nimport Keyboard from './Keyboard.vue'\nimport Shaders from '../mixins/shaders.js'\nimport DataTrack from '../mixins/datatrack.js'\nimport TI from './js/ti_mapping.js'\nimport Const from '../stuff/constants.js'\n\n\nexport default {\n    name: 'Chart',\n    props: [\n        'title_txt', 'data', 'width', 'height', 'font', 'colors',\n        'overlays', 'tv_id', 'config', 'buttons', 'toolbar', 'ib',\n        'skin', 'timezone'\n    ],\n    mixins: [Shaders, DataTrack],\n    components: {\n        GridSection,\n        Botbar,\n        Keyboard\n    },\n    mounted() {\n        // Debug: log ohlcv and sub data to verify chart data flow\n        // Remove this after debugging\n        // eslint-disable-next-line no-console\n        console.log('[Chart.vue] ohlcv:', this.ohlcv);\n        // eslint-disable-next-line no-console\n        console.log('[Chart.vue] sub:', this.sub);\n    },\n    created() {\n\n        // Context for text measurements\n        this.ctx = new Context(this.$props)\n\n        // Initial layout (All measurments for the chart)\n        this.init_range()\n        this.sub = this.subset()\n        Utils.overwrite(this.range, this.range) // Fix for IB mode\n        this._layout = new Layout(this)\n\n        // Updates current cursor values\n        this.updater = new CursorUpdater(this)\n\n        this.update_last_values()\n        this.init_shaders(this.skin)\n    },\n    methods: {\n        range_changed(r) {\n            // Overwite & keep the original references\n            // Quick fix for IB mode (switch 2 next lines)\n            // TODO: wtf?\n            var sub = this.subset(r)\n            Utils.overwrite(this.range, r)\n            Utils.overwrite(this.sub, sub)\n            this.update_layout()\n            this.$emit('range-changed', r)\n            if (this.$props.ib) this.save_data_t()\n        },\n        goto(t) {\n            const dt = this.range[1] - this.range[0]\n            this.range_changed([t - dt, t])\n        },\n        setRange(t1, t2) {\n            this.range_changed([t1, t2])\n        },\n        cursor_changed(e) {\n            if (e.mode) this.cursor.mode = e.mode\n            if (this.cursor.mode !== 'explore') {\n                this.updater.sync(e)\n            }\n            if (this._hook_xchanged) this.ce('?x-changed', e)\n        },\n        cursor_locked(state) {\n            if (this.cursor.scroll_lock && state) return\n            this.cursor.locked = state\n            if (this._hook_xlocked) this.ce('?x-locked', state)\n        },\n        calc_interval() {\n            let tf = Utils.parse_tf(this.forced_tf)\n            if (this.ohlcv.length < 2 && !tf) return\n            this.interval_ms = tf || Utils.detect_interval(this.ohlcv)\n            this.interval = this.$props.ib ? 1 : this.interval_ms\n            Utils.warn(\n                () => this.$props.ib && !this.chart.tf,\n                Const.IB_TF_WARN, Const.SECOND\n            )\n        },\n        set_ytransform(s) {\n            let obj = this.y_transforms[s.grid_id] || {}\n            Object.assign(obj, s)\n            // Vue 3: direct assignment is reactive\n            this.y_transforms[s.grid_id] = obj\n            this.update_layout()\n            Utils.overwrite(this.range, this.range)\n        },\n        default_range() {\n            const dl = this.$props.config.DEFAULT_LEN\n            const ml = this.$props.config.MINIMUM_LEN + 0.5\n            const l = this.ohlcv.length - 1\n\n            if (this.ohlcv.length < 2) return\n            if (this.ohlcv.length <= dl) {\n                var s = 0, d = ml\n            } else {\n                s = l - dl, d = 0.5\n            }\n            if (!this.$props.ib) {\n                Utils.overwrite(this.range, [\n                    this.ohlcv[s][0] - this.interval * d,\n                    this.ohlcv[l][0] + this.interval * ml\n                ])\n            } else {\n                Utils.overwrite(this.range, [\n                    s - this.interval * d,\n                    l + this.interval * ml\n                ])\n            }\n        },\n        subset(range = this.range) {\n            var [res, index] = this.filter(\n                this.ohlcv,\n                range[0] - this.interval,\n                range[1]\n            )\n            this.ti_map = new TI()\n            if (res) {\n                this.sub_start = index\n                this.ti_map.init(this, res)\n                if (!this.$props.ib) return res || []\n                return this.ti_map.sub_i\n            }\n            return []\n        },\n        common_props() {\n            return {\n                title_txt: this.chart.name || this.$props.title_txt,\n                layout: this._layout,\n                sub: this.sub,\n                range: this.range,\n                interval: this.interval,\n                cursor: this.cursor,\n                colors: this.$props.colors,\n                font: this.$props.font,\n                y_ts: this.y_transforms,\n                tv_id: this.$props.tv_id,\n                config: this.$props.config,\n                buttons: this.$props.buttons,\n                meta: this.meta,\n                skin: this.$props.skin\n            }\n        },\n        overlay_subset(source, side) {\n            return source.map((d, i) => {\n                let res = Utils.fast_filter(\n                    d.data, this.ti_map.i2t_mode(\n                        this.range[0] - this.interval,\n                        d.indexSrc\n                    ),\n                    this.ti_map.i2t_mode(this.range[1], d.indexSrc)\n                )\n                return {\n                    type: d.type,\n                    name: Utils.format_name(d),\n                    data: this.ti_map.parse(res[0] || [], d.indexSrc || 'map'),\n                    settings: d.settings || this.settings_ov,\n                    grid: d.grid || {},\n                    tf: Utils.parse_tf(d.tf),\n                    i0: res[1],\n                    loading: d.loading,\n                    last: (this.last_values[side] || [])[i]\n                }\n\n            })\n        },\n        section_props(i) {\n            return i === 0 ?\n                this.main_section : this.sub_section\n        },\n        init_range() {\n            this.calc_interval()\n            this.default_range()\n        },\n        layer_meta_props(d) {\n            // TODO: check reactivity when layout is changed\n            if (!(d.grid_id in this.layers_meta)) {\n                this.$set(this.layers_meta, d.grid_id, {})\n            }\n            this.$set(this.layers_meta[d.grid_id],\n                d.layer_id, d)\n\n            // Rerender\n            this.update_layout()\n        },\n        remove_meta_props(grid_id, layer_id) {\n            if (grid_id in this.layers_meta) {\n                this.$delete(this.layers_meta[grid_id],layer_id)\n            }\n        },\n        emit_custom_event(d) {\n            this.on_shader_event(d, 'botbar')\n            this.$emit('custom-event', d)\n            if (d.event === 'remove-layer-meta') {\n                this.remove_meta_props(...d.args)\n            }\n        },\n        update_layout(clac_tf) {\n            if (clac_tf) this.calc_interval()\n            const lay = new Layout(this)\n            Utils.copy_layout(this._layout, lay)\n            if (this._hook_update) this.ce('?chart-update', lay)\n        },\n        legend_button_click(event) {\n            this.$emit('legend-button-click', event)\n        },\n        register_kb(event) {\n            if (!this.$refs.keyboard) return\n            this.$refs.keyboard.register(event)\n        },\n        remove_kb(event) {\n            if (!this.$refs.keyboard) return\n            this.$refs.keyboard.remove(event)\n        },\n        update_last_values() {\n            this.last_candle = this.ohlcv ?\n                this.ohlcv[this.ohlcv.length - 1] : undefined\n            this.last_values = { onchart: [], offchart: [] }\n            this.onchart.forEach((x, i) => {\n                let d = x.data || []\n                this.last_values.onchart[i] = d[d.length - 1]\n            })\n            this.offchart.forEach((x, i) => {\n                let d = x.data || []\n                this.last_values.offchart[i] = d[d.length - 1]\n            })\n        },\n        // Hook events for extensions\n        ce(event, ...args) {\n            this.emit_custom_event({ event, args })\n        },\n        // Set hooks list (called from an extension)\n        hooks(...list) {\n            list.forEach(x => this[`_hook_${x}`] = true)\n        }\n    },\n    computed: {\n        // Component-specific props subsets:\n        main_section() {\n            let p = Object.assign({}, this.common_props())\n            p.data = this.overlay_subset(this.onchart, 'onchart')\n            p.data.push({\n                type: this.chart.type || 'Candles',\n                main: true,\n                data: this.sub,\n                i0: this.sub_start,\n                settings: this.chart.settings || this.settings_ohlcv,\n                grid: this.chart.grid || {},\n                last: this.last_candle\n            })\n            p.overlays = this.$props.overlays\n            return p\n        },\n        sub_section() {\n            let p = Object.assign({}, this.common_props())\n            p.data = this.overlay_subset(this.offchart, 'offchart')\n            p.overlays = this.$props.overlays\n            return p\n        },\n        botbar_props() {\n            let p = Object.assign({}, this.common_props())\n            p.width = p.layout.botbar.width\n            p.height = p.layout.botbar.height\n            p.rerender = this.rerender\n            return p\n        },\n        offsub() {\n             return this.overlay_subset(this.offchart, 'offchart')\n        },\n        // Datasets: candles, onchart, offchart indicators\n        ohlcv() {\n            // Always prefer chart.data, as DataCube moves ohlcv there\n            return (this.chart && this.chart.data) ? this.chart.data : (this.$props.data.ohlcv || [])\n        },\n        chart() {\n            return this.$props.data.chart || { grid: {} }\n        },\n        onchart() {\n            return this.$props.data.onchart || []\n        },\n        offchart() {\n            return this.$props.data.offchart || []\n        },\n        filter() {\n            return this.$props.ib ?\n                Utils.fast_filter_i : Utils.fast_filter\n        },\n        styles() {\n            let w = this.$props.toolbar ? this.$props.config.TOOLBAR : 0\n            return { 'margin-left': `${w}px` }\n        },\n        meta() {\n            return {\n                last: this.last_candle,\n                sub_start: this.sub_start,\n                activated: this.activated\n            }\n        },\n        forced_tf() {\n            return this.chart.tf\n        }\n    },\n    data() {\n        return {\n            // Current data slice\n            sub: [],\n\n            // Time range\n            range: [],\n\n            // Candlestick interval\n            interval: 0,\n\n            // Crosshair states\n            cursor: {\n                x: null, y: null, t: null, y$: null,\n                grid_id: null, locked: false, values: {},\n                scroll_lock: false, mode: Utils.xmode()\n            },\n\n            // A trick to re-render botbar\n            rerender: 0,\n\n            // Layers meta-props (changing behaviour)\n            layers_meta: {},\n\n            // Y-transforms (for y-zoom and -shift)\n            y_transforms: {},\n\n            // Default OHLCV settings (when using DataStructure v1.0)\n            settings_ohlcv: {},\n\n            // Default overlay settings\n            settings_ov: {},\n\n            // Meta data\n            last_candle: [],\n            last_values: {},\n            sub_start: undefined,\n            activated: false\n\n        }\n    },\n    watch: {\n        width() {\n            this.update_layout()\n            if (this._hook_resize) this.ce('?chart-resize')\n        },\n        height() {\n            this.update_layout()\n            if (this._hook_resize) this.ce('?chart-resize')\n        },\n        ib(nw) {\n            if (!nw) {\n                // Change range index => time\n                let t1 = this.ti_map.i2t(this.range[0])\n                let t2 = this.ti_map.i2t(this.range[1])\n                Utils.overwrite(this.range, [t1, t2])\n                this.interval = this.interval_ms\n            } else {\n                this.init_range() // TODO: calc index range instead\n                Utils.overwrite(this.range, this.range)\n                this.interval = 1\n            }\n            let sub = this.subset()\n            Utils.overwrite(this.sub, sub)\n            this.update_layout()\n        },\n        timezone() {\n            this.update_layout()\n        },\n        colors() {\n            Utils.overwrite(this.range, this.range)\n        },\n        forced_tf(n, p) {\n            this.update_layout(true)\n            this.ce('exec-all-scripts')\n        },\n        data: {\n            handler: function(n, p) {\n                if (!this.sub.length) this.init_range()\n                const sub = this.subset()\n                // Fixes Infinite loop warn, when the subset is empty\n                // TODO: Consider removing 'sub' from data entirely\n                if (this.sub.length || sub.length) {\n                    Utils.overwrite(this.sub, sub)\n                }\n                let nw = this.data_changed()\n                this.update_layout(nw)\n                Utils.overwrite(this.range, this.range)\n                this.cursor.scroll_lock = !!n.scrollLock\n                if (n.scrollLock && this.cursor.locked) {\n                    this.cursor.locked = false\n                }\n                if (this._hook_data) this.ce('?chart-data', nw)\n                this.update_last_values()\n                // TODO: update legend values for overalys\n                this.rerender++\n            },\n            deep: true\n        }\n    }\n}\n\n</script>\n","// Canvas context for text measurments\n\nfunction Context($p) {\n\n    let el = document.createElement('canvas')\n    let ctx = el.getContext(\"2d\")\n    ctx.font = $p.font\n\n    return ctx\n\n}\n\nexport default Context\n","\nimport IndexedArray from 'arrayslicer'\nimport Const from './constants.js'\n\nexport default {\n\n    clamp(num, min, max) {\n        return num <= min ? min : num >= max ? max : num\n    },\n\n    add_zero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i\n    },\n\n    // Start of the day (zero millisecond)\n    day_start(t) {\n        let start = new Date(t)\n        return start.setUTCHours(0,0,0,0)\n    },\n\n    // Start of the month\n    month_start(t) {\n        let date = new Date(t)\n        return Date.UTC(\n            date.getFullYear(),\n            date.getMonth(), 1\n        )\n    },\n\n    // Start of the year\n    year_start(t) {\n        return Date.UTC(new Date(t).getFullYear())\n    },\n\n    get_year(t) {\n        if (!t) return undefined\n        return new Date(t).getUTCFullYear()\n    },\n\n    get_month(t) {\n        if (!t) return undefined\n        return new Date(t).getUTCMonth()\n    },\n\n    // Nearest in array\n    nearest_a(x, array) {\n        let dist = Infinity\n        let val = null\n        let index = -1\n        for (var i = 0; i < array.length; i++) {\n            var xi = array[i]\n            if (Math.abs(xi - x) < dist) {\n                dist = Math.abs(xi - x)\n                val = xi\n                index = i\n            }\n        }\n        return [index, val]\n    },\n\n    round(num, decimals = 8) {\n        return parseFloat(num.toFixed(decimals))\n    },\n\n    // Strip? No, it's ugly floats in js\n    strip(number) {\n        return parseFloat(\n            parseFloat(number).toPrecision(12)\n        )\n    },\n\n    get_day(t) {\n        return t ? new Date(t).getDate() : null\n    },\n\n    // Update array keeping the same reference\n    overwrite(arr, new_arr) {\n        arr.splice(0, arr.length, ...new_arr)\n    },\n\n    // Copy layout in reactive way\n    copy_layout(obj, new_obj) {\n        for (var k in obj) {\n            if (Array.isArray(obj[k])) {\n                // (some offchart indicators are added/removed)\n                // we need to update layout in a reactive way\n                if (obj[k].length !== new_obj[k].length) {\n                    this.overwrite(obj[k], new_obj[k])\n                    continue\n                }\n                for (var m in obj[k]) {\n                    Object.assign(obj[k][m], new_obj[k][m])\n                }\n            } else {\n                Object.assign(obj[k], new_obj[k])\n            }\n        }\n    },\n\n    // Detects candles interval\n    detect_interval(ohlcv) {\n        let len = Math.min(ohlcv.length - 1, 99)\n        let min = Infinity\n        ohlcv.slice(0, len).forEach((x, i) => {\n            let d = ohlcv[i+1][0] - x[0]\n            if (d === d && d < min) min = d\n        })\n        // This saves monthly chart from being awkward\n        if (min >= Const.MONTH && min <= Const.DAY * 30) {\n            return Const.DAY * 31\n        }\n        return min\n    },\n\n    // Gets numberic part of overlay id (e.g 'EMA_1' = > 1)\n    get_num_id(id) {\n        return parseInt(id.split('_').pop())\n    },\n\n    // Fast filter. Really fast, like 10X\n    fast_filter(arr, t1, t2) {\n        if (!arr.length) return [arr, undefined]\n        try {\n            let ia = new IndexedArray(arr, \"0\")\n            let res = ia.getRange(t1, t2)\n            let i0 = ia.valpos[t1].next\n            return [res, i0]\n        } catch(e) {\n            // Something wrong with fancy slice lib\n            // Fast fix: fallback to filter\n            return [arr.filter(x =>\n                x[0] >= t1 && x[0] <= t2\n            ), 0]\n        }\n    },\n\n    // Fast filter (index-based)\n    fast_filter_i(arr, t1, t2) {\n        if (!arr.length) return [arr, undefined]\n        let i1 =  Math.floor(t1)\n        if (i1 < 0) i1 = 0\n        let i2 =  Math.floor(t2 + 1)\n        let res = arr.slice(i1, i2)\n        return [res, i1]\n    },\n\n    // Nearest indexes (left and right)\n    fast_nearest(arr, t1) {\n        let ia = new IndexedArray(arr, \"0\")\n        ia.fetch(t1)\n        return [ia.nextlow, ia.nexthigh]\n    },\n\n    now() { return (new Date()).getTime() },\n\n    pause(delay) {\n        return new Promise((rs, rj) => setTimeout(rs, delay))\n    },\n\n    // Limit crazy wheel delta values\n    smart_wheel(delta) {\n        let abs = Math.abs(delta)\n        if (abs > 500) {\n            return (200 + Math.log(abs)) * Math.sign(delta)\n        }\n        return delta\n    },\n\n    // Parse the original mouse event to find deltaX\n    get_deltaX(event) {\n        return event.originalEvent.deltaX / 12\n    },\n\n    // Parse the original mouse event to find deltaY\n    get_deltaY(event) {\n        return event.originalEvent.deltaY / 12\n    },\n\n    // Apply opacity to a hex color\n    apply_opacity(c, op) {\n        if (c.length === 7) {\n            let n = Math.floor(op * 255)\n            n = this.clamp(n, 0, 255)\n            c += n.toString(16)\n        }\n        return c\n    },\n\n    // Parse timeframe or return value in ms\n    parse_tf(smth) {\n        if (typeof smth === 'string') {\n            return Const.map_unit[smth]\n        } else {\n            return smth\n        }\n    },\n\n    // Detect index shift between the main data sub\n    // and the overlay's sub (for IB-mode)\n    index_shift(sub, data) {\n\n        // Find the second timestamp (by value)\n        if (!data.length) return 0\n        let first = data[0][0]\n        let second\n\n        for (var i = 1; i < data.length; i++) {\n            if (data[i][0] !== first) {\n                second = data[i][0]\n                break\n            }\n        }\n\n        for (var j = 0; j < sub.length; j++) {\n            if (sub[j][0] === second) {\n                return j - i\n            }\n        }\n\n        return 0\n    },\n\n    // Fallback fix for Brave browser\n    // https://github.com/brave/brave-browser/issues/1738\n    measureText(ctx, text, tv_id) {\n        let m = ctx.measureTextOrg(text)\n        if (m.width === 0) {\n            const doc = document\n            const id = 'tvjs-measure-text'\n            let el = doc.getElementById(id)\n            if (!el) {\n                let base = doc.getElementById(tv_id)\n                el = doc.createElement(\"div\")\n                el.id = id\n                el.style.position = 'absolute'\n                el.style.top = '-1000px'\n                base.appendChild(el)\n            }\n            if(ctx.font) el.style.font = ctx.font\n            el.innerText = text.replace(/ /g, '.');\n            return { width: el.offsetWidth }\n        } else {\n            return m\n        }\n    },\n\n    uuid(temp = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx') {\n        return temp\n            .replace(/[xy]/g, c => {\n            var r = Math.random() * 16 | 0, v = c == 'x' ?\n                r :\n                (r & 0x3 | 0x8)\n            return v.toString(16)\n        })\n    },\n\n    uuid2() {\n        return this.uuid('xxxxxxxxxxxx')\n    },\n\n    // Delayed warning, f = condition lambda fn\n    warn(f, text, delay = 0) {\n        setTimeout(() => {\n            if (f()) console.warn(text)\n        }, delay)\n    },\n\n    // Checks if script props updated\n    // (and not style settings or something else)\n    is_scr_props_upd(n, prev) {\n        let p = prev.find(x => x.v.$uuid === n.v.$uuid)\n        if (!p) return false\n\n        let props = n.p.settings.$props\n        if (!props) return false\n\n        return props.some(x => n.v[x] !== p.v[x])\n    },\n\n    // Checks if it's time to make a script update\n    // (based on execInterval in ms)\n    delayed_exec(v) {\n        if (!v.script || !v.script.execInterval)\n            return true\n        let t = this.now()\n        let dt = v.script.execInterval\n        if (!v.settings.$last_exec ||\n            t > v.settings.$last_exec + dt) {\n            v.settings.$last_exec = t\n            return true\n        }\n        return false\n    },\n\n    // Format names such 'RSI, $length', where\n    // length - is one of the settings\n    format_name(ov) {\n        if (!ov.name) return undefined\n\n        let name = ov.name\n\n        for (var k in ov.settings || {}) {\n            let val = ov.settings[k]\n            let reg = new RegExp(`\\\\$${k}`, 'g')\n            name = name.replace(reg, val)\n        }\n\n        return name\n    },\n\n    // Default cursor mode\n    xmode() {\n        return this.is_mobile ? 'explore' : 'default'\n    },\n\n    default_prevented(event) {\n        if (event.original) {\n            return event.original.defaultPrevented\n        }\n        return event.defaultPrevented\n    },\n\n    // WTF with modern web development\n    is_mobile: (w => 'onorientationchange' in w &&\n       (!!navigator.maxTouchPoints ||\n        !!navigator.msMaxTouchPoints ||\n        ('ontouchstart' in w ||\n        (w.DocumentTouch &&\n        document instanceof w.DocumentTouch))))\n        (typeof window !== 'undefined' ? window : {})\n\n}\n","\n// Math/Geometry\n\nexport default {\n\n    // Distance from point to line\n    // p1 = point, (p2, p3) = line\n    point2line(p1, p2, p3) {\n\n        let { area, base } = this.tri(p1, p2, p3)\n        return Math.abs(this.tri_h(area, base))\n    },\n\n    // Distance from point to segment\n    // p1 = point, (p2, p3) = segment\n    point2seg(p1, p2, p3) {\n\n        let { area, base } = this.tri(p1, p2, p3)\n        // Vector projection\n        let proj = this.dot_prod(p1, p2, p3) / base\n        // Distance from left pin\n        let l1 = Math.max(-proj, 0)\n        // Distance from right pin\n        let l2 = Math.max(proj - base, 0)\n        // Normal\n        let h = Math.abs(this.tri_h(area, base))\n        return Math.max(h, l1, l2)\n    },\n\n    // Distance from point to ray\n    // p1 = point, (p2, p3) = ray\n    point2ray(p1, p2, p3) {\n\n        let { area, base } = this.tri(p1, p2, p3)\n        // Vector projection\n        let proj = this.dot_prod(p1, p2, p3) / base\n        // Distance from left pin\n        let l1 = Math.max(-proj, 0)\n        // Normal\n        let h = Math.abs(this.tri_h(area, base))\n        return Math.max(h, l1)\n    },\n\n    tri(p1, p2, p3) {\n        let area = this.area(p1, p2, p3)\n        let dx = p3[0] - p2[0]\n        let dy = p3[1] - p2[1]\n        let base = Math.sqrt(dx * dx + dy * dy)\n        return { area, base }\n    },\n\n    /* Area of triangle:\n            p1\n          /    \\\n        p2  _  p3\n    */\n    area (p1, p2, p3) {\n\t     return (\n             p1[0] * (p2[1] - p3[1]) +\n             p2[0] * (p3[1] - p1[1]) +\n             p3[0] * (p1[1] - p2[1])\n         )\n    },\n\n    // Triangle height\n    tri_h(area, base) {\n\t    return area / base\n    },\n\n    // Dot product of (p2, p3) and (p2, p1)\n    dot_prod(p1, p2, p3) {\n        let v1 = [p3[0] - p2[0], p3[1] - p2[1]]\n        let v2 = [p1[0] - p2[0], p1[1] - p2[1]]\n        return v1[0] * v2[0] + v1[1] * v2[1]\n    },\n\n    // Symmetrical log\n    log(x) {\n        // TODO: log for small values\n        return Math.sign(x) * Math.log(Math.abs(x) + 1)\n    },\n\n    // Symmetrical exp\n    exp(x) {\n        return Math.sign(x) * (Math.exp(Math.abs(x)) - 1)\n    },\n\n    // Middle line on log scale based on range & px height\n    log_mid(r, h) {\n        let log_hi = this.log(r[0])\n        let log_lo = this.log(r[1])\n        let px = h / 2\n        let gx = log_hi -  px * (log_hi - log_lo) / h\n        return this.exp(gx)\n    },\n\n    // Return new adjusted range, based on the previous\n    // range, new $_hi, target middle line\n    re_range(r1, hi2, mid) {\n        let log_hi1 = this.log(r1[0])\n        let log_lo1 = this.log(r1[1])\n        let log_hi2 = this.log(hi2)\n        let log_$ = this.log(mid)\n\n        let W = (log_hi2 - log_$) * (log_hi1 - log_lo1) /\n                (log_hi1 - log_$)\n\n        return this.exp(log_hi2 - W)\n\n    },\n\n    // Return new adjusted range, based on the previous\n    // range, new $_hi, target middle line + dy (shift)\n    // WASTE\n    /*range_shift(r1, hi2, mid, dy, h) {\n        let log_hi1 = this.log(r1[0])\n        let log_lo1 = this.log(r1[1])\n        let log_hi2 = this.log(hi2)\n        let log_$ = this.log(mid)\n\n        let W = h * (log_hi2 - log_$) /\n                (h * (log_hi1 - log_$) / (log_hi1 - log_lo1) + dy)\n\n        return this.exp(log_hi2 - W)\n\n    }*/\n\n}\n","// Layout functional interface\n\nimport Utils from '../../stuff/utils.js'\nimport math from '../../stuff/math.js'\n\nexport default function(self, range) {\n\n    const ib = self.ti_map.ib\n    const dt = range[1] - range[0]\n    const r = self.spacex / dt\n    const ls = self.grid.logScale || false\n\n    Object.assign(self, {\n        // Time to screen coordinates\n        t2screen: t => {\n            if (ib) t = self.ti_map.smth2i(t)\n            return Math.floor((t - range[0]) * r) - 0.5\n        },\n        // $ to screen coordinates\n        $2screen: y => {\n            if (ls) y = math.log(y)\n            return Math.floor(y * self.A + self.B) - 0.5\n        },\n        // Time-axis nearest step\n        t_magnet: t => {\n            if (ib) t = self.ti_map.smth2i(t)\n            const cn = self.candles || self.master_grid.candles\n            const arr = cn.map(x => x.raw[0])\n            const i = Utils.nearest_a(t, arr)[0]\n            if (!cn[i]) return\n            return Math.floor(cn[i].x) - 0.5\n        },\n        // Screen-Y to dollar value (or whatever)\n        screen2$: y => {\n            if (ls) return math.exp((y - self.B) / self.A)\n            return (y - self.B) / self.A\n        },\n        // Screen-X to timestamp\n        screen2t: x => {\n            // TODO: most likely Math.floor not needed\n            // return Math.floor(range[0] + x / r)\n            return range[0] + x / r\n        },\n        // $-axis nearest step\n        $_magnet: price => { },\n        // Nearest candlestick\n        c_magnet: t => {\n            const cn = self.candles || self.master_grid.candles\n            const arr = cn.map(x => x.raw[0])\n            const i = Utils.nearest_a(t, arr)[0]\n            return cn[i]\n        },\n        // Nearest data points\n        data_magnet: t => {  /* TODO: implement */ }\n    })\n\n    return self\n\n}\n","\n// Log-scale mode helpers\n\n// TODO: all-negative numbers (sometimes wrong scaling)\n\nimport math from '../../stuff/math.js'\n\nexport default {\n\n    candle(self, mid, p, $p) {\n        return {\n            x: mid,\n            w: self.px_step * $p.config.CANDLEW,\n            o: Math.floor(math.log(p[1]) * self.A + self.B),\n            h: Math.floor(math.log(p[2]) * self.A + self.B),\n            l: Math.floor(math.log(p[3]) * self.A + self.B),\n            c: Math.floor(math.log(p[4]) * self.A + self.B),\n            raw: p\n        }\n    },\n\n    expand(self, height) {\n        // expand log scale\n        let A = - height / (math.log(self.$_hi) - math.log(self.$_lo))\n        let B = - math.log(self.$_hi) * A\n\n        let top = -height * 0.1\n        let bot = height * 1.1\n\n        self.$_hi = math.exp((top - B) / A)\n        self.$_lo = math.exp((bot - B) / A)\n    }\n\n}\n","import Const from '../../stuff/constants.js'\nimport Utils from '../../stuff/utils.js'\nimport math from '../../stuff/math.js'\n\nimport layout_fn from './layout_fn.js'\nimport log_scale from './log_scale.js'\n\nconst { TIMESCALES, $SCALES, WEEK, MONTH, YEAR, HOUR, DAY } = Const\nconst MAX_INT = Number.MAX_SAFE_INTEGER\n\n\n// master_grid - ref to the master grid\nfunction GridMaker(id, params, master_grid = null) {\n\n\n    let {\n        sub, interval, range, ctx, $p, layers_meta, height, y_t, ti_map,\n        grid, timezone\n    } = params\n\n    var self = { ti_map }\n    var lm = layers_meta[id]\n    var y_range_fn = null\n    var ls = grid.logScale\n\n    if (lm && Object.keys(lm).length) {\n        // Gets last y_range fn()\n        let yrs = Object.values(lm).filter(x => x.y_range)\n        // The first y_range() determines the range\n        if (yrs.length) y_range_fn = yrs[0].y_range\n    }\n\n    // Calc vertical ($/₿) range\n    function calc_$range() {\n        if (!master_grid) {\n            // $ candlestick range\n            if (y_range_fn) {\n                var [hi, lo] = y_range_fn(hi, lo)\n            } else {\n                hi = -Infinity, lo = Infinity\n                for (var i = 0, n = sub.length; i < n; i++) {\n                    let x = sub[i]\n                    if (x[2] > hi) hi = x[2]\n                    if (x[3] < lo) lo = x[3]\n                }\n            }\n        } else {\n            // Offchart indicator range\n            hi = -Infinity, lo = Infinity\n            for (var i = 0; i < sub.length; i++) {\n                for (var j = 1; j < sub[i].length; j++) {\n                    let v = sub[i][j]\n                    if (v > hi) hi = v\n                    if (v < lo) lo = v\n                }\n            }\n            if (y_range_fn) { var [hi, lo, exp] = y_range_fn(hi, lo) }\n        }\n\n        // Fixed y-range in non-auto mode\n        if (y_t && !y_t.auto && y_t.range) {\n            self.$_hi = y_t.range[0]\n            self.$_lo = y_t.range[1]\n        } else {\n            if (!ls) {\n                exp = exp === false ? 0 : 1\n                self.$_hi = hi + (hi - lo) * $p.config.EXPAND * exp\n                self.$_lo = lo - (hi - lo) * $p.config.EXPAND * exp\n            } else {\n                self.$_hi = hi\n                self.$_lo = lo\n                log_scale.expand(self, height)\n            }\n\n            if (self.$_hi === self.$_lo) {\n                if (!ls) {\n                    self.$_hi *= 1.05  // Expand if height range === 0\n                    self.$_lo *= 0.95\n                } else {\n                    log_scale.expand(self, height)\n                }\n            }\n        }\n\n    }\n\n    function calc_sidebar() {\n\n        if (sub.length < 2) {\n            self.prec = 0\n            self.sb = $p.config.SBMIN\n            return\n        }\n\n        // TODO: improve sidebar width calculation\n        // at transition point, when one precision is\n        // replaced with another\n\n        // Gets formated levels (their lengths),\n        // calculates max and measures the sidebar length\n        // from it:\n\n        // TODO: add custom formatter f()\n\n        self.prec = calc_precision(sub)\n        let lens = []\n        lens.push(self.$_hi.toFixed(self.prec).length)\n        lens.push(self.$_lo.toFixed(self.prec).length)\n        let str = '0'.repeat(Math.max(...lens)) + '    '\n        self.sb = ctx.measureText(str).width\n        self.sb = Math.max(Math.floor(self.sb), $p.config.SBMIN)\n        self.sb = Math.min(self.sb, $p.config.SBMAX)\n\n    }\n\n    // Calculate $ precision for the Y-axis\n    function calc_precision(data) {\n\n        var max_r = 0, max_l = 0\n\n        let min = Infinity\n        let max = -Infinity\n\n        // Speed UP\n        for (var i = 0, n = data.length; i < n; i++) {\n            let x = data[i]\n            if (x[1] > max) max = x[1]\n            else if (x[1] < min) min = x[1]\n        }\n        // Get max lengths of integer and fractional parts\n        [min, max].forEach(x => {\n            // Fix undefined bug\n            var str = x != null ? x.toString() : ''\n            if (x < 0.000001) {\n                // Parsing the exponential form. Gosh this\n                // smells trickily\n                var [ls, rs] = str.split('e-')\n                var [l, r] = ls.split('.')\n                if (!r) r = ''\n                r = { length: r.length + parseInt(rs) || 0 }\n            } else {\n                var [l, r] = str.split('.')\n            }\n            if (r && r.length > max_r) {\n                max_r = r.length\n            }\n            if (l && l.length > max_l) {\n                max_l = l.length\n            }\n        })\n\n        // Select precision scheme depending\n        // on the left and right part lengths\n        //\n        let even = max_r - max_r % 2 + 2\n\n        if (max_l === 1) {\n            return Math.min(8, Math.max(2, even))\n        }\n        if (max_l <= 2) {\n            return Math.min(4, Math.max(2, even))\n        }\n\n        return 2\n\n    }\n\n    function calc_positions() {\n\n        if (sub.length < 2) return\n\n        let dt = range[1] - range[0]\n\n        // A pixel space available to draw on (x-axis)\n        self.spacex = $p.width - self.sb\n\n        // Candle capacity\n        let capacity = dt / interval\n        self.px_step = self.spacex / capacity\n\n        // px / time ratio\n        let r = self.spacex / dt\n        self.startx = (sub[0][0] - range[0]) * r\n\n        // Candle Y-transform: (A = scale, B = shift)\n        if (!grid.logScale) {\n            self.A = - height / (self.$_hi - self.$_lo)\n            self.B = - self.$_hi * self.A\n        } else {\n            self.A = - height / (math.log(self.$_hi) -\n                       math.log(self.$_lo))\n            self.B = - math.log(self.$_hi) * self.A\n        }\n\n    }\n\n    // Select nearest good-loking t step (m is target scale)\n    function time_step() {\n        let k = ti_map.ib ? 60000 : 1\n        let xrange = (range[1] - range[0]) * k\n        let m = xrange * ($p.config.GRIDX / $p.width)\n        let s = TIMESCALES\n        return Utils.nearest_a(m, s)[1] / k\n    }\n\n    // Select nearest good-loking $ step (m is target scale)\n    function dollar_step() {\n        let yrange = self.$_hi - self.$_lo\n        let m = yrange * ($p.config.GRIDY / height)\n        let p = parseInt(yrange.toExponential().split('e')[1])\n        let d = Math.pow(10, p)\n        let s = $SCALES.map(x => x * d)\n\n        // TODO: center the range (look at RSI for example,\n        // it looks ugly when \"80\" is near the top)\n        return Utils.strip(Utils.nearest_a(m, s)[1])\n    }\n\n    function dollar_mult() {\n        let mult_hi = dollar_mult_hi()\n        let mult_lo = dollar_mult_lo()\n        return Math.max(mult_hi, mult_lo)\n    }\n\n    // Price step multiplier (for the log-scale mode)\n    function dollar_mult_hi() {\n\n        let h = Math.min(self.B, height)\n        if (h < $p.config.GRIDY) return 1\n        let n = h / $p.config.GRIDY // target grid N\n        let yrange = self.$_hi\n        if (self.$_lo > 0) {\n            var yratio = self.$_hi / self.$_lo\n        } else {\n            yratio = self.$_hi / 1 // TODO: small values\n        }\n        let m = yrange * ($p.config.GRIDY / h)\n        let p = parseInt(yrange.toExponential().split('e')[1])\n        return Math.pow(yratio, 1/n)\n    }\n\n    function dollar_mult_lo() {\n\n        let h = Math.min(height - self.B, height)\n        if (h < $p.config.GRIDY) return 1\n        let n = h / $p.config.GRIDY // target grid N\n        let yrange = Math.abs(self.$_lo)\n        if (self.$_hi < 0 && self.$_lo < 0) {\n            var yratio = Math.abs(self.$_lo / self.$_hi)\n        } else {\n            yratio = Math.abs(self.$_lo) / 1\n        }\n        let m = yrange * ($p.config.GRIDY / h)\n        let p = parseInt(yrange.toExponential().split('e')[1])\n        return Math.pow(yratio, 1/n)\n    }\n\n    function grid_x() {\n\n        // If this is a subgrid, no need to calc a timeline,\n        // we just borrow it from the master_grid\n        if (!master_grid) {\n\n            self.t_step = time_step()\n            self.xs = []\n            const dt = range[1] - range[0]\n            const r = self.spacex / dt\n\n            /* TODO: remove the left-side glitch\n\n            let year_0 = Utils.get_year(sub[0][0])\n            for (var t0 = year_0; t0 < range[0]; t0 += self.t_step) {}\n\n            let m0 = Utils.get_month(t0)*/\n\n            for (var i = 0; i < sub.length; i++) {\n                let p = sub[i]\n                let prev = sub[i-1] || []\n                let prev_xs = self.xs[self.xs.length - 1] || [0,[]]\n                let x = Math.floor((p[0] - range[0]) * r)\n\n                insert_line(prev, p, x)\n\n                // Filtering lines that are too near\n                let xs = self.xs[self.xs.length - 1] || [0, []]\n\n                if (prev_xs === xs) continue\n\n                if (xs[1][0] - prev_xs[1][0] < self.t_step * 0.8) {\n\n                    // prev_xs is a higher \"rank\" label\n                    if (xs[2] <= prev_xs[2]) {\n                        self.xs.pop()\n                    } else {\n                        // Otherwise\n                        self.xs.splice(self.xs.length - 2, 1)\n                    }\n                }\n            }\n\n            // TODO: fix grid extension for bigger timeframes\n            if (interval < WEEK && r > 0) {\n                extend_left(dt, r)\n                extend_right(dt, r)\n            }\n\n        } else {\n\n            self.t_step = master_grid.t_step\n            self.px_step = master_grid.px_step\n            self.startx = master_grid.startx\n            self.xs = master_grid.xs\n\n        }\n    }\n\n    function insert_line(prev, p, x, m0) {\n\n        let prev_t = ti_map.ib ? ti_map.i2t(prev[0]) : prev[0]\n        let p_t = ti_map.ib ? ti_map.i2t(p[0]) : p[0]\n\n        if (ti_map.tf < DAY) {\n            prev_t += timezone * HOUR\n            p_t += timezone * HOUR\n        }\n        let d = timezone * HOUR\n\n        // TODO: take this block =========> (see below)\n        if ((prev[0] || interval === YEAR) &&\n            Utils.get_year(p_t) !== Utils.get_year(prev_t)) {\n            self.xs.push([x, p, YEAR]) // [px, [...], rank]\n        }\n        else if (prev[0] &&\n            Utils.get_month(p_t) !== Utils.get_month(prev_t)) {\n            self.xs.push([x, p, MONTH])\n        }\n        // TODO: should be added if this day !== prev day\n        // And the same for 'botbar.js', TODO(*)\n        else if (Utils.day_start(p_t) === p_t) {\n            self.xs.push([x, p, DAY])\n        }\n        else if (p[0] % self.t_step === 0) {\n            self.xs.push([x, p, interval])\n        }\n    }\n\n    function extend_left(dt, r) {\n\n        if (!self.xs.length || !isFinite(r)) return\n\n        let t = self.xs[0][1][0]\n        while (true) {\n            t -= self.t_step\n            let x = Math.floor((t  - range[0]) * r)\n            if (x < 0) break\n            // TODO: ==========> And insert it here somehow\n            if (t % interval === 0) {\n                self.xs.unshift([x,[t], interval])\n            }\n        }\n    }\n\n    function extend_right(dt, r) {\n\n        if (!self.xs.length || !isFinite(r)) return\n\n        let t = self.xs[self.xs.length - 1][1][0]\n        while (true) {\n            t += self.t_step\n            let x = Math.floor((t  - range[0]) * r)\n            if (x > self.spacex) break\n            if (t % interval === 0) {\n                self.xs.push([x,[t], interval])\n            }\n        }\n    }\n\n    function grid_y() {\n\n        // Prevent duplicate levels\n        let m = Math.pow(10, -self.prec)\n        self.$_step = Math.max(m, dollar_step())\n        self.ys = []\n\n        let y1 = self.$_lo - self.$_lo % self.$_step\n\n        for (var y$ = y1; y$ <= self.$_hi; y$ += self.$_step) {\n            let y = Math.floor(y$ * self.A + self.B)\n            if (y > height) continue\n            self.ys.push([y, Utils.strip(y$)])\n        }\n\n    }\n\n    function grid_y_log() {\n\n        // TODO: Prevent duplicate levels, is this even\n        // a problem here ?\n        self.$_mult = dollar_mult()\n        self.ys = []\n\n        if (!sub.length) return\n\n        let v = Math.abs(sub[sub.length - 1][1] || 1)\n        let y1 = search_start_pos(v)\n        let y2 = search_start_neg(-v)\n        let yp = -Infinity // Previous y value\n        let n = height / $p.config.GRIDY // target grid N\n\n        let q = 1 + (self.$_mult - 1) / 2\n\n        // Over 0\n        for (var y$ = y1; y$ > 0; y$ /= self.$_mult) {\n            y$ = log_rounder(y$, q)\n            let y = Math.floor(math.log(y$) * self.A + self.B)\n            self.ys.push([y, Utils.strip(y$)])\n            if (y > height) break\n            if (y - yp < $p.config.GRIDY * 0.7) break\n            if (self.ys.length > n + 1) break\n            yp = y\n        }\n\n        // Under 0\n        yp = Infinity\n        for (var y$ = y2; y$ < 0; y$ /= self.$_mult) {\n            y$ = log_rounder(y$, q)\n            let y = Math.floor(math.log(y$) * self.A + self.B)\n            if (yp - y < $p.config.GRIDY * 0.7) break\n            self.ys.push([y, Utils.strip(y$)])\n            if (y < 0) break\n            if (self.ys.length > n * 3 + 1) break\n            yp = y\n        }\n\n        // TODO: remove lines near to 0\n\n    }\n\n    // Search a start for the top grid so that\n    // the fixed value always included\n    function search_start_pos(value) {\n        let N = height / $p.config.GRIDY // target grid N\n        var y = Infinity, y$ = value, count = 0\n        while (y > 0) {\n            y = Math.floor(math.log(y$) * self.A + self.B)\n            y$ *= self.$_mult\n            if (count++ > N * 3) return 0 // Prevents deadloops\n        }\n        return y$\n    }\n\n    function search_start_neg(value) {\n        let N = height / $p.config.GRIDY // target grid N\n        var y = -Infinity, y$ = value, count = 0\n        while (y < height) {\n            y = Math.floor(math.log(y$) * self.A + self.B)\n            y$ *= self.$_mult\n            if (count++ > N * 3) break // Prevents deadloops\n        }\n        return y$\n    }\n\n    // Make log scale levels look great again\n    function log_rounder(x, quality) {\n        let s = Math.sign(x)\n        x = Math.abs(x)\n        if (x > 10) {\n            for (var div = 10; div < MAX_INT; div *= 10) {\n                let nice = Math.floor(x / div) * div\n                if (x / nice > quality) {  // More than 10% off\n                    break\n                }\n            }\n            div /= 10\n            return s * Math.floor(x / div) * div\n        } else if (x < 1) {\n            for (var ro = 10; ro >= 1; ro--) {\n                let nice = Utils.round(x, ro)\n                if (x / nice > quality) {  // More than 10% off\n                    break\n                }\n            }\n            return s * Utils.round(x, ro + 1)\n        } else {\n            return s * Math.floor(x)\n        }\n    }\n\n    function apply_sizes() {\n        self.width = $p.width - self.sb\n        self.height = height\n    }\n\n    calc_$range()\n    calc_sidebar()\n\n    return {\n        // First we need to calculate max sidebar width\n        // (among all grids). Then we can actually make\n        // them\n        create: () => {\n            calc_positions()\n            grid_x()\n            if (grid.logScale) {\n                grid_y_log()\n            } else {\n                grid_y()\n            }\n            apply_sizes()\n\n            // Link to the master grid (candlesticks)\n            if (master_grid) {\n                self.master_grid = master_grid\n            }\n\n            self.grid = grid // Grid params\n\n            // Here we add some helpful functions for\n            // plugin creators\n            return layout_fn(self, range)\n\n        },\n        get_layout: () => self,\n        set_sidebar: v => self.sb = v,\n        get_sidebar: () => self.sb,\n    }\n}\n\nexport default GridMaker\n","// Calculates all necessary s*it to build the chart\n// Heights, widths, transforms, ... = everything\n// Why such a mess you ask? Well, that's because\n// one components size can depend on other component\n// data formatting (e.g. grid width depends on sidebar precision)\n// So it's better to calc all in one place.\n\nimport GridMaker from './grid_maker.js'\nimport Utils from '../../stuff/utils.js'\nimport math from '../../stuff/math.js'\nimport log_scale from './log_scale.js'\n\nfunction Layout(params) {\n\n    let {\n        chart, sub, offsub, interval, range, ctx, layers_meta,\n        ti_map, $props:$p, y_transforms: y_ts\n    } = params\n\n    let mgrid = chart.grid || {}\n\n    offsub = offsub.filter((x, i) => {\n        // Skip offchart overlays with custom grid id,\n        // because they will be mergred with the existing grids\n        return !(x.grid && x.grid.id)\n    })\n\n    // Splits space between main chart\n    // and offchart indicator grids\n    function grid_hs() {\n\n        const height = $p.height - $p.config.BOTBAR\n\n        // When at least one height defined (default = 1),\n        // Pxs calculated as: (sum of weights) / number\n        if (mgrid.height || offsub.find(x => x.grid.height)) {\n            return weighted_hs(mgrid, height)\n        }\n\n        const n = offsub.length\n        const off_h = (2 * Math.sqrt(n) / 7) / (n || 1)\n\n        // Offchart grid height\n        const px = Math.floor(height * off_h)\n\n        // Main grid height\n        const m = height - px * n\n        return [m].concat(Array(n).fill(px))\n\n    }\n\n    function weighted_hs(grid, height) {\n        let hs = [{grid}, ...offsub].map(x => x.grid.height || 1)\n        let sum = hs.reduce((a, b) => a + b, 0)\n        hs = hs.map(x => Math.floor((x / sum) * height))\n\n        // Refine the height if Math.floor decreased px sum\n        sum = hs.reduce((a, b) => a + b, 0)\n        for (var i = 0; i < height - sum; i++) hs[i % hs.length]++\n        return hs\n    }\n\n    function candles_n_vol() {\n\n        self.candles = []\n        self.volume = []\n\n        let maxv = Math.max(...sub.map(x => x[5]))\n        let vs = $p.config.VOLSCALE * $p.height / maxv\n        var x1, x2, mid, prev = undefined\n\n        let splitter = self.px_step > 5 ? 1 : 0\n        let hf_px_step = self.px_step * 0.5\n\n        for (var i = 0; i < sub.length; i++) {\n            let p = sub[i]\n            mid = self.t2screen(p[0]) + 0.5\n            self.candles.push(mgrid.logScale ?\n                log_scale.candle(self, mid, p, $p): {\n                x: mid,\n                w: self.px_step * $p.config.CANDLEW,\n                o: Math.floor(p[1] * self.A + self.B),\n                h: Math.floor(p[2] * self.A + self.B),\n                l: Math.floor(p[3] * self.A + self.B),\n                c: Math.floor(p[4] * self.A + self.B),\n                raw: p\n            })\n            // Clear volume bar if there is a time gap\n            if (sub[i-1] && p[0] - sub[i-1][0] > interval) {\n                prev = null\n            }\n            x1 = prev || Math.floor(mid - hf_px_step)\n            x2 = Math.floor(mid + hf_px_step) - 0.5\n            self.volume.push({\n                x1: x1,\n                x2: x2,\n                h: p[5] * vs,\n                green: p[4] >= p[1],\n                raw: p\n            })\n            prev = x2 + splitter\n        }\n    }\n\n    // Main grid\n    const hs = grid_hs()\n    let specs = {\n        sub, interval, range, ctx, $p, layers_meta,\n        ti_map, height: hs[0], y_t: y_ts[0],\n        grid: mgrid, timezone: $p.timezone\n    }\n    let gms = [new GridMaker(0, specs)]\n\n    // Sub grids\n    for (var [i, { data, grid }] of offsub.entries()) {\n        specs.sub = data\n        specs.height = hs[i + 1]\n        specs.y_t = y_ts[i + 1]\n        specs.grid = grid || {}\n        gms.push(new GridMaker(i + 1, specs, gms[0].get_layout()))\n    }\n\n    // Max sidebar among all grinds\n    let sb = Math.max(...gms.map(x => x.get_sidebar()))\n\n    let grids = [], offset = 0\n\n    for (i = 0; i < gms.length; i++) {\n        gms[i].set_sidebar(sb)\n        grids.push(gms[i].create())\n        grids[i].id = i\n        grids[i].offset = offset\n        offset += grids[i].height\n    }\n\n    let self = grids[0]\n\n    candles_n_vol()\n\n    return {\n        grids: grids,\n        botbar: {\n            width: $p.width,\n            height: $p.config.BOTBAR,\n            offset: offset,\n            xs: grids[0] ? grids[0].xs : []\n        }\n    }\n}\n\nexport default Layout\n","// Cursor updater: calculates current values for\n// OHLCV and all other indicators\n\nimport Utils from '../../stuff/utils.js'\n\nclass CursorUpdater {\n\n    constructor(comp) {\n        this.comp = comp, this.grids = comp._layout.grids,\n        this.cursor = comp.cursor\n    }\n\n    sync(e) {\n        // TODO: values not displaying if a custom grid id is set:\n        // grid: { id: N }\n        this.cursor.grid_id = e.grid_id\n        let once = true\n        for (var grid of this.grids) {\n            const c = this.cursor_data(grid, e)\n            if (!this.cursor.locked) {\n                // TODO: find a better fix to invisible cursor prob\n                if (once) {\n                    this.cursor.t = this.cursor_time(grid, e, c)\n                    if (this.cursor.t) once = false\n                }\n                if(c.values) {\n                    this.cursor.values[grid.id] = c.values\n                }\n            }\n            if (grid.id !== e.grid_id) continue\n            this.cursor.x = grid.t2screen(this.cursor.t)\n            this.cursor.y = c.y\n            this.cursor.y$ = c.y$\n        }\n    }\n\n    overlay_data(grid, e) {\n\n        const s = grid.id === 0 ? 'main_section' : 'sub_section'\n        let data = this.comp[s].data\n\n        // Split offchart data between offchart grids\n        if (grid.id > 0) {\n            // Sequential grids\n            let d = data.filter(x => x.grid.id === undefined)\n            // grids with custom ids (for merging)\n            let m = data.filter(x => x.grid.id === grid.id)\n            data = [d[grid.id - 1], ...m]\n        }\n\n        const t = grid.screen2t(e.x)\n        let ids = {}, res = {}\n        for (var d of data) {\n            let ts = d.data.map(x => x[0])\n            let i = Utils.nearest_a(t, ts)[0]\n            d.type in ids ? (ids[d.type]++) : (ids[d.type] = 0)\n            res[`${d.type}_${ids[d.type]}`] = d.data[i]\n        }\n        return res\n\n    }\n\n    // Nearest datapoints\n    cursor_data(grid, e) {\n\n        const data = this.comp.main_section.sub\n\n        let xs = data.map(x => grid.t2screen(x[0]) + 0.5)\n        let i = Utils.nearest_a(e.x, xs)[0]\n        if (!xs[i]) return {}\n        return {\n            x: Math.floor(xs[i]) - 0.5,\n            y: Math.floor(e.y - 2) - 0.5 - grid.offset,\n            y$: grid.screen2$(e.y - 2 - grid.offset),\n            t: (data[i] || [])[0],\n            values: Object.assign({\n                ohlcv: grid.id === 0 ? data[i] : undefined\n            },\n            this.overlay_data(grid, e))\n        }\n    }\n\n    // Get cursor t-position (extended)\n    cursor_time(grid, mouse, candle) {\n        let t = grid.screen2t(mouse.x)\n        let r = Math.abs((t - candle.t) / this.comp.interval)\n        let sign = Math.sign(t - candle.t)\n        if (r >= 0.5) {\n            // Outside the data range\n            let n = Math.round(r)\n            return candle.t + n * this.comp.interval * sign\n        }\n        // Inside the data range\n        return candle.t\n    }\n\n}\n\nexport default CursorUpdater\n","<template>\n    <!-- Horizontal section: (grid + sidebar) -->\n    <div class=\"trading-vue-section\">\n        <chart-legend ref=\"legend\"\n            v-bind:values=\"section_values\"\n            v-bind:grid_id=\"grid_id\"\n            v-bind:common=\"legend_props\"\n            v-bind:meta_props=\"get_meta_props\"\n            v-on:legend-button-click=\"button_click\">\n        </chart-legend>\n        <grid v-bind=\"grid_props\" ref=\"grid\"\n            v-bind:grid_id=\"grid_id\"\n             v-on:register-kb-listener=\"register_kb\"\n             v-on:remove-kb-listener=\"remove_kb\"\n             v-on:range-changed=\"range_changed\"\n             v-on:cursor-changed=\"cursor_changed\"\n             v-on:cursor-locked=\"cursor_locked\"\n             v-on:layer-meta-props=\"emit_meta_props\"\n             v-on:custom-event=\"emit_custom_event\"\n             v-on:sidebar-transform=\"sidebar_transform\"\n             v-on:rezoom-range=\"rezoom_range\">\n        </grid>\n        <sidebar\n            :ref=\"'sb-' + grid_id\"\n            v-bind=\"sidebar_props\"\n            v-bind:grid_id=\"grid_id\"\n            v-bind:rerender=\"rerender\"\n            v-on:sidebar-transform=\"sidebar_transform\">\n        </sidebar>\n    </div>\n</template>\n\n<script>\n\nimport Grid from './Grid.vue'\nimport Sidebar from './Sidebar.vue'\nimport ChartLegend from './Legend.vue'\nimport Shaders from '../mixins/shaders.js'\n\nexport default {\n    name: 'GridSection',\n    props: ['common', 'grid_id'],\n    mixins: [Shaders],\n    components: {\n        Grid,\n        Sidebar,\n        ChartLegend\n    },\n    mounted() {\n        this.init_shaders(this.$props.common.skin)\n    },\n    methods: {\n        range_changed(r) {\n            this.$emit('range-changed', r)\n        },\n        cursor_changed(c) {\n            c.grid_id = this.$props.grid_id\n            this.$emit('cursor-changed', c)\n        },\n        cursor_locked(state) {\n            this.$emit('cursor-locked', state)\n        },\n        sidebar_transform(s) {\n            this.$emit('sidebar-transform', s)\n        },\n        emit_meta_props(d) {\n            this.$set(this.meta_props, d.layer_id, d)\n            this.$emit('layer-meta-props', d)\n        },\n        emit_custom_event(d) {\n            this.on_shader_event(d, 'sidebar')\n            this.$emit('custom-event', d)\n        },\n        button_click(event) {\n            this.$emit('legend-button-click', event)\n        },\n        register_kb(event) {\n            this.$emit('register-kb-listener', event)\n        },\n        remove_kb(event) {\n            this.$emit('remove-kb-listener', event)\n        },\n        rezoom_range(event) {\n            let id = 'sb-' + event.grid_id\n            if (this.$refs[id]) {\n                this.$refs[id].renderer.rezoom_range(\n                    event.z, event.diff1, event.diff2\n                )\n            }\n        },\n        ghash(val) {\n            // Measures grid heights configuration\n            let hs = val.layout.grids.map(x => x.height)\n            return hs.reduce((a, b) => a + b, '')\n        }\n    },\n    computed: {\n        // Component-specific props subsets:\n        grid_props() {\n            const id = this.$props.grid_id\n            let p = Object.assign({}, this.$props.common)\n\n            // Split offchart data between offchart grids\n            if (id > 0) {\n                let all = p.data\n                p.data = [p.data[id - 1]]\n                // Merge offchart overlays with custom ids with\n                // the existing onse (by comparing the grid ids)\n                p.data.push(...all.filter(\n                    x => x.grid && x.grid.id === id))\n            }\n\n            p.width = p.layout.grids[id].width\n            p.height = p.layout.grids[id].height\n            p.y_transform = p.y_ts[id]\n            p.shaders = this.grid_shaders\n            return p\n        },\n        sidebar_props() {\n            const id = this.$props.grid_id\n            let p = Object.assign({}, this.$props.common)\n            p.width = p.layout.grids[id].sb\n            p.height = p.layout.grids[id].height\n            p.y_transform = p.y_ts[id]\n            p.shaders = this.sb_shaders\n            return p\n        },\n        section_values() {\n            const id = this.$props.grid_id\n            let p = Object.assign({}, this.$props.common)\n            p.width = p.layout.grids[id].width\n            return p.cursor.values[id]\n        },\n        legend_props() {\n            const id = this.$props.grid_id\n            let p = Object.assign({}, this.$props.common)\n\n            // Split offchart data between offchart grids\n            if (id > 0) {\n                let all = p.data\n                p.offchart = all\n                p.data = [p.data[id - 1]]\n                p.data.push(...all.filter(\n                    x => x.grid && x.grid.id === id))\n            }\n            return p\n        },\n        get_meta_props() {\n            return this.meta_props\n        },\n        grid_shaders() {\n            return this.shaders.filter(x => x.target === 'grid')\n        },\n        sb_shaders() {\n            return this.shaders.filter(x => x.target === 'sidebar')\n        }\n    },\n    watch: {\n        common: {\n            handler: function (val, old_val) {\n                let newhash = this.ghash(val)\n                if (newhash !== this.last_ghash) {\n                    this.rerender++\n                }\n\n                if(val.data.length !== old_val.data.length) {\n                    // Look at this nasty trick!\n                    this.rerender++\n                }\n                 this.last_ghash = newhash\n            },\n            deep: true\n        }\n    },\n    data() {\n        return {\n            meta_props: {},\n            rerender: 0,\n            last_ghash: ''\n        }\n    }\n}\n</script>\n<style>\n.trading-vue-section {\n    height: 0;\n    position: absolute;\n}\n</style>\n","\n// Annimation frame with a fallback for\n// slower devices\n\nimport Utils from './utils.js'\n\nexport default class FrameAnimation {\n    constructor(cb) {\n\n        this.t0 = this.t = Utils.now()\n        this.id = setInterval(() => {\n            // The prev frame took too long\n            if (Utils.now() - this.t > 100) return\n            if (Utils.now() - this.t0 > 1200) {\n                this.stop()\n            }\n            if (this.id) cb(this)\n            this.t = Utils.now()\n        }, 16)\n    }\n    stop() {\n        clearInterval(this.id)\n        this.id = null\n    }\n}\n","// Grid.js listens to various user-generated events,\n// emits Vue-events if something has changed (e.g. range)\n// Think of it as an I/O system for Grid.vue\n\nimport FrameAnimation from '../../stuff/frame.js'\nimport * as Hammer from 'hammerjs'\nimport Hamster from 'hamsterjs'\nimport Utils from '../../stuff/utils.js'\nimport math from '../../stuff/math.js'\n\n// Grid is good.\nexport default class Grid {\n\n    constructor(canvas, comp) {\n\n        this.MIN_ZOOM = comp.config.MIN_ZOOM\n        this.MAX_ZOOM = comp.config.MAX_ZOOM\n\n        if (Utils.is_mobile) this.MIN_ZOOM *= 0.5\n\n        this.canvas = canvas\n        this.ctx = canvas.getContext('2d')\n        this.comp = comp\n        this.$p = comp.$props\n        this.data = this.$p.sub\n        this.range = this.$p.range\n        this.id = this.$p.grid_id\n        this.layout = this.$p.layout.grids[this.id]\n        this.interval = this.$p.interval\n        this.cursor = comp.$props.cursor\n        this.offset_x = 0\n        this.offset_y = 0\n        this.deltas = 0 // Wheel delta events\n        this.wmode = this.$p.config.SCROLL_WHEEL\n\n        this.listeners()\n        this.overlays = []\n\n    }\n\n    listeners() {\n\n        this.hm = Hamster(this.canvas)\n        this.hm.wheel((event, delta) => this.mousezoom(-delta * 50, event))\n\n        let mc = this.mc = new Hammer.Manager(this.canvas)\n        let T = Utils.is_mobile ? 10 : 0\n        mc.add(new Hammer.Pan({ threshold: T}))\n        mc.add(new Hammer.Tap())\n        mc.add(new Hammer.Pinch({ threshold: 0}))\n        mc.get('pinch').set({ enable: true })\n        if (Utils.is_mobile) mc.add(new Hammer.Press())\n\n        mc.on('panstart', event => {\n            if (this.cursor.scroll_lock) return\n            if (this.cursor.mode === 'aim') {\n                return this.emit_cursor_coord(event)\n            }\n            let tfrm = this.$p.y_transform\n            this.drug = {\n                x: event.center.x + this.offset_x,\n                y: event.center.y + this.offset_y,\n                r: this.range.slice(),\n                t: this.range[1] - this.range[0],\n                o: tfrm ?\n                    (tfrm.offset || 0) : 0,\n                y_r: tfrm && tfrm.range ?\n                    tfrm.range.slice() : undefined,\n                B: this.layout.B,\n                t0: Utils.now()\n            }\n            this.comp.$emit('cursor-changed', {\n                grid_id: this.id,\n                x: event.center.x + this.offset_x,\n                y: event.center.y + this.offset_y\n            })\n            this.comp.$emit('cursor-locked', true)\n        })\n\n        mc.on('panmove', event => {\n            if (Utils.is_mobile) {\n                this.calc_offset()\n                this.propagate('mousemove', this.touch2mouse(event))\n            }\n            if (this.drug) {\n                this.mousedrag(\n                    this.drug.x + event.deltaX,\n                    this.drug.y + event.deltaY,\n                )\n                this.comp.$emit('cursor-changed', {\n                    grid_id: this.id,\n                    x: event.center.x + this.offset_x,\n                    y: event.center.y + this.offset_y\n                })\n            } else if (this.cursor.mode === 'aim') {\n                this.emit_cursor_coord(event)\n            }\n        })\n\n        mc.on('panend', event => {\n            if (Utils.is_mobile && this.drug) {\n                this.pan_fade(event)\n            }\n            this.drug = null\n            this.comp.$emit('cursor-locked', false)\n        })\n\n        mc.on('tap', event => {\n            if (!Utils.is_mobile) return\n            this.sim_mousedown(event)\n            if (this.fade) this.fade.stop()\n            this.comp.$emit('cursor-changed', {})\n            this.comp.$emit('cursor-changed', {\n                /*grid_id: this.id,\n                x: undefined,//event.center.x + this.offset_x,\n                y: undefined,//event.center.y + this.offset_y,*/\n                mode: 'explore'\n            })\n            this.update()\n        })\n\n        mc.on('pinchstart', () =>  {\n            this.drug = null\n            this.pinch = {\n                t: this.range[1] - this.range[0],\n                r: this.range.slice()\n            }\n        })\n\n        mc.on('pinchend', () =>  {\n            this.pinch = null\n        })\n\n        mc.on('pinch', event => {\n            if (this.pinch) this.pinchzoom(event.scale)\n        })\n\n        mc.on('press', event => {\n            if (!Utils.is_mobile) return\n            if (this.fade) this.fade.stop()\n            this.calc_offset()\n            this.emit_cursor_coord(event, { mode: 'aim' })\n            setTimeout(() => this.update())\n            this.sim_mousedown(event)\n        })\n\n        let add = addEventListener\n        add(\"gesturestart\", this.gesturestart)\n        add(\"gesturechange\", this.gesturechange)\n        add(\"gestureend\", this.gestureend)\n\n    }\n\n    gesturestart(event) { event.preventDefault() }\n    gesturechange(event) { event.preventDefault() }\n    gestureend(event) { event.preventDefault() }\n\n    mousemove(event) {\n        if (Utils.is_mobile) return\n        this.comp.$emit('cursor-changed', {\n            grid_id: this.id,\n            x: event.layerX,\n            y: event.layerY + this.layout.offset\n        })\n        this.calc_offset()\n        this.propagate('mousemove', event)\n    }\n\n    mouseout(event) {\n        if (Utils.is_mobile) return\n        this.comp.$emit('cursor-changed', {})\n        this.propagate('mouseout', event)\n    }\n\n    mouseup(event) {\n        this.drug = null\n        this.comp.$emit('cursor-locked', false)\n        this.propagate('mouseup', event)\n    }\n\n    mousedown(event) {\n        if (Utils.is_mobile) return\n        this.propagate('mousedown', event)\n        this.comp.$emit('cursor-locked', true)\n        if (event.defaultPrevented) return\n        this.comp.$emit('custom-event', {\n            event: 'grid-mousedown', args: [this.id, event]\n        })\n    }\n\n    // Simulated mousedown (for mobile)\n    sim_mousedown(event) {\n        if (event.srcEvent.defaultPrevented) return\n        this.comp.$emit('custom-event', {\n            event: 'grid-mousedown',\n            args: [this.id, event]\n        })\n        this.propagate('mousemove', this.touch2mouse(event))\n        this.update()\n        this.propagate('mousedown', this.touch2mouse(event))\n        setTimeout(() => {\n            this.propagate('click', this.touch2mouse(event))\n        })\n    }\n\n    // Convert touch to \"mouse\" event\n    touch2mouse(e) {\n        this.calc_offset()\n        return {\n            original: e.srcEvent,\n            layerX: e.center.x + this.offset_x,\n            layerY: e.center.y + this.offset_y,\n            preventDefault: function() {\n                this.original.preventDefault()\n            }\n        }\n    }\n\n    click(event) {\n        this.propagate('click', event)\n    }\n\n    emit_cursor_coord(event, add = {}) {\n        this.comp.$emit('cursor-changed', Object.assign({\n            grid_id: this.id,\n            x: event.center.x + this.offset_x,\n            y: event.center.y + this.offset_y + this.layout.offset\n        }, add))\n    }\n\n    pan_fade(event) {\n        let dt = Utils.now() - this.drug.t0\n        let dx = this.range[1] - this.drug.r[1]\n        let v = 42 * dx / dt\n        let v0 = Math.abs(v * 0.01)\n        if (dt > 500) return\n        if (this.fade) this.fade.stop()\n        this.fade = new FrameAnimation(self => {\n            v *= 0.85\n            if (Math.abs(v) < v0) {\n                self.stop()\n            }\n            this.range[0] += v\n            this.range[1] += v\n            this.change_range()\n        })\n    }\n\n    calc_offset() {\n        let rect = this.canvas.getBoundingClientRect()\n        this.offset_x = -rect.x\n        this.offset_y = -rect.y\n    }\n\n    new_layer(layer) {\n        if (layer.name === 'crosshair') {\n            this.crosshair = layer\n        } else {\n            this.overlays.push(layer)\n        }\n        this.update()\n    }\n\n    del_layer(id) {\n        this.overlays = this.overlays.filter(x => x.id !== id)\n        this.update()\n    }\n\n    show_hide_layer(event) {\n        let l = this.overlays.filter(x => x.id === event.id)\n        if (l.length) l[0].display = event.display\n    }\n\n    update() {\n        // Update reference to the grid\n        // TODO: check what happens if data changes interval\n        this.layout = this.$p.layout.grids[this.id]\n        this.interval = this.$p.interval\n\n        if (!this.layout) return\n\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        if (this.$p.shaders.length) this.apply_shaders()\n\n        this.grid()\n\n        let overlays = []\n        overlays.push(...this.overlays)\n\n        // z-index sorting\n        overlays.sort((l1, l2) => l1.z - l2.z)\n\n        overlays.forEach(l => {\n            if (!l.display) return\n            this.ctx.save()\n            let r = l.renderer\n            if (r.pre_draw) r.pre_draw(this.ctx)\n            r.draw(this.ctx)\n            if (r.post_draw) r.post_draw(this.ctx)\n            this.ctx.restore()\n        })\n\n        if (this.crosshair) {\n            this.crosshair.renderer.draw(this.ctx)\n        }\n    }\n\n    apply_shaders() {\n        let layout = this.$p.layout.grids[this.id]\n        let props = {\n            layout: layout,\n            range: this.range,\n            interval: this.interval,\n            tf: layout.ti_map.tf,\n            cursor: this.cursor,\n            colors: this.$p.colors,\n            sub: this.data,\n            font: this.$p.font,\n            config: this.$p.config,\n            meta: this.$p.meta\n        }\n        for (var s of this.$p.shaders) {\n            this.ctx.save()\n            s.draw(this.ctx, props)\n            this.ctx.restore()\n        }\n    }\n\n    // Actually draws the grid (for real)\n    grid() {\n\n        this.ctx.strokeStyle = this.$p.colors.grid\n        this.ctx.beginPath()\n\n        const ymax = this.layout.height\n        for (var [x, p] of this.layout.xs) {\n\n            this.ctx.moveTo(x - 0.5, 0)\n            this.ctx.lineTo(x - 0.5, ymax)\n\n        }\n\n        for (var [y, y$] of this.layout.ys) {\n\n            this.ctx.moveTo(0, y - 0.5)\n            this.ctx.lineTo(this.layout.width, y - 0.5)\n\n        }\n\n        this.ctx.stroke()\n\n        if (this.$p.grid_id) this.upper_border()\n\n    }\n\n    upper_border() {\n        this.ctx.strokeStyle = this.$p.colors.scale\n        this.ctx.beginPath()\n        this.ctx.moveTo(0, 0.5)\n        this.ctx.lineTo(this.layout.width, 0.5)\n        this.ctx.stroke()\n    }\n\n    mousezoom(delta, event) {\n\n        // TODO: for mobile\n        if (this.wmode !== 'pass') {\n            if (this.wmode === 'click' && !this.$p.meta.activated) {\n                return\n            }\n            event.originalEvent.preventDefault()\n            event.preventDefault()\n        }\n\n        event.deltaX = event.deltaX || Utils.get_deltaX(event)\n        event.deltaY = event.deltaY || Utils.get_deltaY(event)\n\n        if (Math.abs(event.deltaX) > 0) {\n            this.trackpad = true\n            if (Math.abs(event.deltaX) >= Math.abs(event.deltaY)) {\n                delta *= 0.1\n            }\n            this.trackpad_scroll(event)\n        }\n\n        if (this.trackpad) delta *= 0.032\n\n        delta = Utils.smart_wheel(delta)\n\n        // TODO: mouse zooming is a little jerky,\n        // needs to follow f(mouse_wheel_speed) and\n        // if speed is low, scroll shoud be slower\n        if (delta < 0 && this.data.length <= this.MIN_ZOOM) return\n        if (delta > 0 && this.data.length > this.MAX_ZOOM) return\n        let k = this.interval / 1000\n        let diff = delta * k * this.data.length\n        let tl = this.comp.config.ZOOM_MODE === 'tl'\n        if (event.originalEvent.ctrlKey || tl) {\n            let offset = event.originalEvent.offsetX\n            let diff1 = offset / (this.canvas.width-1) * diff\n            let diff2 = diff - diff1\n            this.range[0] -= diff1\n            this.range[1] += diff2\n        } else {\n            this.range[0] -= diff\n        }\n\n        if (tl) {\n            let offset = event.originalEvent.offsetY\n            let diff1 = offset / (this.canvas.height-1) * 2\n            let diff2 = 2 - diff1\n            let z = diff / (this.range[1] - this.range[0])\n            //rezoom_range(z, diff_x, diff_y)\n            this.comp.$emit('rezoom-range', {\n                grid_id: this.id, z, diff1, diff2\n            })\n        }\n\n        this.change_range()\n\n    }\n\n    mousedrag(x, y) {\n\n        let dt = this.drug.t * (this.drug.x - x) / this.layout.width\n\n        let d$ = this.layout.$_hi - this.layout.$_lo\n        d$ *= (this.drug.y - y) / this.layout.height\n        let offset = this.drug.o + d$\n\n        let ls = this.layout.grid.logScale\n\n        if (ls && this.drug.y_r) {\n            let dy = this.drug.y - y\n            var range = this.drug.y_r.slice()\n            range[0] = math.exp((0 - this.drug.B + dy) /\n                this.layout.A)\n            range[1] = math.exp(\n                (this.layout.height - this.drug.B + dy) /\n                this.layout.A)\n        }\n\n        if (this.drug.y_r && this.$p.y_transform &&\n            !this.$p.y_transform.auto) {\n            this.comp.$emit('sidebar-transform', {\n                grid_id: this.id,\n                range: ls ? (range || this.drug.y_r) : [\n                    this.drug.y_r[0] - offset,\n                    this.drug.y_r[1] - offset,\n                ]\n            })\n        }\n\n        this.range[0] = this.drug.r[0] + dt\n        this.range[1] = this.drug.r[1] + dt\n\n        this.change_range()\n\n    }\n\n    pinchzoom(scale) {\n\n        if (scale > 1 && this.data.length <= this.MIN_ZOOM) return\n        if (scale < 1 && this.data.length > this.MAX_ZOOM) return\n\n        let t = this.pinch.t\n        let nt = t * 1 / scale\n\n        this.range[0] = this.pinch.r[0] - (nt - t) * 0.5\n        this.range[1] = this.pinch.r[1] + (nt - t) * 0.5\n\n        this.change_range()\n\n    }\n\n    trackpad_scroll(event) {\n\n        let dt = this.range[1] - this.range[0]\n\n        this.range[0] += event.deltaX * dt * 0.011\n        this.range[1] += event.deltaX * dt * 0.011\n\n        this.change_range()\n\n\n    }\n\n    change_range() {\n\n        // TODO: better way to limit the view. Problem:\n        // when you are at the dead end of the data,\n        // and keep scrolling,\n        // the chart continues to scale down a little.\n        // Solution: I don't know yet\n\n        if (!this.range.length || this.data.length < 2) return\n\n        let l = this.data.length - 1\n        let data = this.data\n        let range = this.range\n\n        range[0] = Utils.clamp(\n            range[0],\n            -Infinity, data[l][0] - this.interval * 5.5,\n        )\n\n        range[1] = Utils.clamp(\n            range[1],\n            data[0][0] + this.interval * 5.5, Infinity\n        )\n\n        // TODO: IMPORTANT scrolling is jerky The Problem caused\n        // by the long round trip of 'range-changed' event.\n        // First it propagates up to update layout in Chart.vue,\n        // then it moves back as watch() update. It takes 1-5 ms.\n        // And because the delay is different each time we see\n        // the lag. No smooth movement and it's annoying.\n        // Solution: we could try to calc the layout immediatly\n        // somewhere here. Still will hurt the sidebar & bottombar\n        this.comp.$emit('range-changed', range)\n    }\n\n    // Propagate mouse event to overlays\n    propagate(name, event) {\n        for (var layer of this.overlays) {\n            if (layer.renderer[name]) {\n                layer.renderer[name](event)\n            }\n            const mouse = layer.renderer.mouse\n            const keys = layer.renderer.keys\n            if (mouse.listeners) {\n                mouse.emit(name, event)\n            }\n            if (keys && keys.listeners) {\n                keys.emit(name, event)\n            }\n        }\n    }\n\n    destroy() {\n        let rm = removeEventListener\n        rm(\"gesturestart\", this.gesturestart)\n        rm(\"gesturechange\", this.gesturechange)\n        rm(\"gestureend\", this.gestureend)\n        if (this.mc) this.mc.destroy()\n        if (this.hm) this.hm.unwheel()\n    }\n}\n","// Interactive canvas-based component\nimport { h } from 'vue'\n// Should implement: mousemove, mouseout, mouseup, mousedown, click\n\nimport Utils from '../stuff/utils.js'\n\nexport default {\n    methods: {\n        setup() {\n            const id = `${this.$props.tv_id}-${this._id}-canvas`\n            const canvas = document.getElementById(id)\n            if (!canvas) return; // Prevent runtime error if not found\n            let dpr = window.devicePixelRatio || 1\n            canvas.style.width = `${this._attrs.width}px`\n            canvas.style.height = `${this._attrs.height}px`\n            if (dpr < 1) dpr = 1 // Realy ? That's it? Issue #63\n            this.$nextTick(() => {\n                var rect = canvas.getBoundingClientRect()\n                canvas.width = rect.width * dpr\n                canvas.height = rect.height * dpr\n                const ctx = canvas.getContext('2d', {\n                    // TODO: test the boost:\n                    //alpha: false,\n                    //desynchronized: true,\n                    //preserveDrawingBuffer: false\n                })\n                ctx.scale(dpr, dpr)\n                this.redraw()\n                // Fallback fix for Brave browser\n                // https://github.com/brave/brave-browser/issues/1738\n                if (!ctx.measureTextOrg) {\n                    ctx.measureTextOrg = ctx.measureText\n                }\n                ctx.measureText = text =>\n                    Utils.measureText(ctx, text, this.$props.tv_id)\n            })\n        },\n        create_canvas(id, props) {\n            this._id = id\n            this._attrs = props.attrs\n            // Vue 3: use import { h } from 'vue' and call h directly\n            return h('div', {\n                class: `trading-vue-${id}`,\n                style: {\n                    left: props.position.x + 'px',\n                    top: props.position.y + 'px',\n                    position: 'absolute',\n                }\n            }, [\n                h('canvas', {\n                    onMousemove: e => this.renderer.mousemove(e),\n                    onMouseout: e => this.renderer.mouseout(e),\n                    onMouseup: e => this.renderer.mouseup(e),\n                    onMousedown: e => this.renderer.mousedown(e),\n                    id: `${this.$props.tv_id}-${id}-canvas`,\n                    ref: 'canvas',\n                    style: props.style,\n                    ...props.attrs\n                })\n            ].concat(props.hs || []))\n        },\n        redraw() {\n            if (!this.renderer) return\n            this.renderer.update()\n        }\n    },\n    watch: {\n        width(val) {\n            this._attrs.width = val\n            this.setup()\n        },\n        height(val) {\n            this._attrs.height = val\n            this.setup()\n        }\n    }\n}\n","\n// Manager for Inteerface objects\n\nexport default {\n    methods: {\n        on_ux_event(d, target) {\n            if (d.event === 'new-interface') {\n                if (d.args[0].target === target) {\n                    d.args[0].vars = d.args[0].vars || {}\n                    d.args[0].grid_id = d.args[1]\n                    d.args[0].overlay_id = d.args[2]\n                    this.uxs.push(d.args[0])\n                    // this.rerender++\n                }\n            }\n            else if (d.event === 'close-interface') {\n                this.uxs = this.uxs\n                    .filter(x => x.uuid !== d.args[0])\n            }\n            else if (d.event === 'modify-interface') {\n                let ux = this.uxs\n                    .filter(x => x.uuid === d.args[0])\n\n                if (ux.length) {\n                    this.modify(ux[0], d.args[1])\n                }\n            }\n            else if (d.event === 'hide-interface') {\n                let ux = this.uxs\n                    .filter(x => x.uuid === d.args[0])\n\n                if (ux.length) {\n                    ux[0].hidden = true\n                    this.modify(ux[0], { hidden: true })\n                }\n            }\n            else if (d.event === 'show-interface') {\n                let ux = this.uxs\n                    .filter(x => x.uuid === d.args[0])\n\n                if (ux.length) {\n                    this.modify(ux[0], { hidden: false })\n                }\n            }\n            else {\n                return d\n            }\n        },\n        modify(ux, obj = {}) {\n            for (var k in obj) {\n                if (k in ux) {\n                    this.$set(ux, k, obj[k])\n                }\n            }\n        },\n        // Remove all UXs for a given overlay id\n        remove_all_ux(id) {\n            this.uxs = this.uxs.filter(\n                x => x.overlay.id !== id)\n        }\n    },\n    data() { return { uxs: [] } }\n}\n","\n\nexport default class Crosshair {\n\n    constructor(comp) {\n\n        this.comp = comp\n        this.$p = comp.$props\n        this.data = this.$p.sub\n        this._visible = false\n        this.locked = false\n        this.layout = this.$p.layout\n\n    }\n\n    draw(ctx) {\n        // Update reference to the grid\n        this.layout = this.$p.layout\n\n        const cursor = this.comp.$props.cursor\n        if (!this.visible && cursor.mode === 'explore') return\n\n        this.x = this.$p.cursor.x\n        this.y = this.$p.cursor.y\n\n        ctx.save()\n        ctx.strokeStyle = this.$p.colors.cross\n        ctx.beginPath()\n        ctx.setLineDash([5])\n\n        // H\n        if (this.$p.cursor.grid_id === this.layout.id) {\n            ctx.moveTo(0, this.y)\n            ctx.lineTo(this.layout.width - 0.5, this.y)\n        }\n\n        // V\n        ctx.moveTo(this.x, 0)\n        ctx.lineTo(this.x, this.layout.height)\n        ctx.stroke()\n        ctx.restore()\n\n    }\n\n    hide() {\n        this.visible = false\n        this.x = undefined\n        this.y = undefined\n    }\n\n    get visible() {\n        return this._visible\n    }\n\n    set visible(val) {\n        this._visible = val\n    }\n\n}\n","<script>\n\nimport Crosshair from './js/crosshair.js'\nimport Utils from '../stuff/utils.js'\n\nexport default {\n    name: 'Crosshair',\n    props: [ 'cursor', 'colors', 'layout', 'sub' ],\n    methods: {\n        create() {\n            this.ch = new Crosshair(this)\n\n            // New grid overlay-renderer descriptor.\n            // Should implement draw() (see Spline.vue)\n            this.$emit('new-grid-layer', {\n                name: 'crosshair',\n                renderer: this.ch\n            })\n        }\n    },\n    watch: {\n        cursor: {\n            handler: function() {\n\n                if (!this.ch) this.create()\n\n                // Explore = default mode on mobile\n                const cursor = this.$props.cursor\n                const explore = cursor.mode === 'explore'\n\n                if (!cursor.x || !cursor.y) {\n                    this.ch.hide()\n                    this.$emit('redraw-grid')\n                    return\n                }\n                this.ch.visible = !explore\n            },\n            deep: true\n        }\n    },\n    render(h) { return h() }\n}\n</script>\n","import script from \"./Crosshair.vue?vue&type=script&lang=js\"\nexport * from \"./Crosshair.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","\n<!-- Waits for an event from Keyboard.vue\n     and converts it to a Vue.js event -->\n\n<script>\n\nexport default {\n    name: 'KeyboardListener',\n    render(h) { return h() },\n    created: function () {\n        this.$emit('register-kb-listener', {\n            id: this._uid,\n            keydown: this.keydown,\n            keyup: this.keyup,\n            keypress: this.keypress\n        })\n    },\n    beforeDestroy: function () {\n        this.$emit('remove-kb-listener', {\n            id: this._uid\n        })\n    },\n    methods: {\n        keydown (event) {\n            this.$emit('keydown', event)\n        },\n        keyup (event) {\n            this.$emit('keyup', event)\n        },\n        keypress (event) {\n            this.$emit('keypress', event)\n        },\n    }\n}\n\n</script>\n","import script from \"./KeyboardListener.vue?vue&type=script&lang=js\"\nexport * from \"./KeyboardListener.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Mouse event handler for overlay\n\nexport default class Mouse {\n\n    constructor(comp) {\n        this.comp = comp\n        this.map = {}\n        this.listeners = 0\n        this.pressed = false\n        this.x = comp.$props.cursor.x\n        this.y = comp.$props.cursor.y\n        this.t = comp.$props.cursor.t\n        this.y$ = comp.$props.cursor.y$\n    }\n\n    // You can choose where to place the handler\n    // (beginning or end of the queue)\n    on(name, handler, dir = \"unshift\") {\n        if (!handler) return\n        this.map[name] = this.map[name] || []\n        this.map[name][dir](handler)\n        this.listeners++\n    }\n\n    off(name, handler) {\n        if (!this.map[name]) return\n        let i = this.map[name].indexOf(handler)\n        if (i < 0) return\n        this.map[name].splice(i, 1)\n        this.listeners--\n    }\n\n    // Called by grid.js\n    emit(name, event) {\n        const l = this.comp.layout\n        if (name in this.map) {\n            for (var f of this.map[name]) {\n                f(event)\n            }\n        }\n        if (name === 'mousemove') {\n            this.x = event.layerX\n            this.y = event.layerY\n            this.t = l.screen2t(this.x)\n            this.y$ = l.screen2$(this.y)\n        }\n        if (name === 'mousedown') {\n            this.pressed = true\n        }\n        if (name === 'mouseup') {\n            this.pressed = false\n        }\n    }\n\n}\n","\n// Usuful stuff for creating overlays. Include as mixin\n\nimport Mouse from '../stuff/mouse.js'\n\nexport default {\n    props: [\n        'id', 'num', 'interval', 'cursor', 'colors',\n        'layout', 'sub', 'data', 'settings', 'grid_id',\n        'font', 'config', 'meta', 'tf', 'i0', 'last'\n    ],\n    mounted() {\n        // TODO(1): when hot reloading, dynamicaly changed mixins\n        // dissapear (cuz it's a hack), the only way for now\n        // is to reload the browser\n        if (!this.draw) {\n            this.draw = ctx => {\n                let text = 'EARLY ADOPTER BUG: reload the browser & enjoy'\n                console.warn(text)\n            }\n        }\n        // Main chart?\n        let main = this.$props.sub === this.$props.data\n\n        this.meta_info()\n\n        // TODO(1): quick fix for vue2, in vue3 we use 3rd party emit\n        try {\n            new Function('return ' + this.$emit)()\n            this._$emit = this.$emit\n            this.$emit = this.custom_event\n        } catch(e) {\n            return\n        }\n\n        this._$emit('new-grid-layer', {\n            name: this.$options.name,\n            id: this.$props.id,\n            renderer: this,\n            display: 'display' in this.$props.settings ?\n               this.$props.settings['display'] : true,\n            z: this.$props.settings['z-index'] ||\n               this.$props.settings['zIndex'] || (main ? 0 : -1),\n        })\n\n        // Overlay meta-props (adjusting behaviour)\n        this._$emit('layer-meta-props', {\n            grid_id: this.$props.grid_id,\n            layer_id: this.$props.id,\n            legend: this.legend,\n            data_colors: this.data_colors,\n            y_range: this.y_range\n        })\n        this.exec_script()\n        this.mouse = new Mouse(this)\n        if (this.init_tool) this.init_tool()\n        if (this.init) this.init()\n    },\n    beforeDestroy() {\n        if (this.destroy) this.destroy()\n        this._$emit('delete-grid-layer', this.$props.id)\n    },\n    methods: {\n        use_for() {\n            /* override it (mandatory) */\n            console.warn('use_for() should be implemented')\n            console.warn(\n            `Format: use_for() {\n                  return ['type1', 'type2', ...]\n            }`)\n        },\n        meta_info() {\n            /* override it (optional) */\n            let id = this.$props.id\n            console.warn(\n                `${id} meta_info() is req. for publishing`)\n            console.warn(\n            `Format: meta_info() {\n                author: 'Satoshi Smith',\n                version: '1.0.0',\n                contact (opt) '<email>'\n                github: (opt) '<GitHub Page>',\n            }`)\n        },\n        custom_event(event, ...args) {\n            if (event.split(':')[0] === 'hook') return\n            if (event === 'change-settings' ||\n                event === 'object-selected' ||\n                event === 'new-shader' ||\n                event === 'new-interface' ||\n                event === 'remove-tool') {\n                args.push(this.grid_id, this.id)\n                if (this.$props.settings.$uuid) {\n                    args.push(this.$props.settings.$uuid)\n                }\n            }\n            if (event === 'new-interface') {\n                args[0].overlay = this\n                args[0].uuid = this.last_ux_id =\n                    `${this.grid_id}-${this.id}-${this.uxs_count++}`\n            }\n            // TODO: add a namespace to the event name\n            // TODO(2): this prevents call overflow, but\n            // the root of evil is in (1)\n            if (event === 'custom-event') return\n            this._$emit('custom-event', {event, args})\n        },\n        // TODO: the event is not firing when the same\n        // overlay type is added to the offchart[]\n        exec_script() {\n            if (this.calc) this.$emit('exec-script', {\n                grid_id: this.$props.grid_id,\n                layer_id: this.$props.id,\n                src: this.calc(),\n                use_for: this.use_for()\n            })\n        }\n    },\n    watch: {\n        settings: {\n            handler: function(n, p) {\n                if (this.watch_uuid) this.watch_uuid(n, p)\n                this._$emit('show-grid-layer', {\n                    id: this.$props.id,\n                    display: 'display' in this.$props.settings ?\n                        this.$props.settings['display'] : true,\n                })\n            },\n            deep: true\n        }\n    },\n    data() { return { uxs_count: 0, last_ux_id: null } },\n    render(h) { return h() }\n}\n","<script>\n// Spline renderer. (SMAs, EMAs, TEMAs...\n// you know what I mean)\n// TODO: make a real spline, not a bunch of lines...\n\n// Adds all necessary stuff for you.\nimport Overlay from '../../mixins/overlay.js'\n\nexport default {\n    name: 'Spline',\n    mixins: [Overlay],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.1.2' }\n        },\n        // Here goes your code. You are provided with:\n        // { All stuff is reactive }\n        // $props.layout -> positions of all chart elements +\n        //  some helper functions (see layout_fn.js)\n        // $props.interval -> candlestick time interval\n        // $props.sub -> current subset of candlestick data\n        // $props.data -> your indicator's data subset.\n        //  Comes \"as is\", should have the following format:\n        //  [[<timestamp>, ... ], ... ]\n        // $props.colors -> colors (see TradingVue.vue)\n        // $props.cursor -> current position of crosshair\n        // $props.settings -> indicator's custom settings\n        //  E.g. colors, line thickness, etc. You define it.\n        // $props.num -> indicator's layer number (of All\n        // layers in the current grid)\n        // $props.id -> indicator's id (e.g. EMA_0)\n        // ~\n        // Finally, let's make the canvas dirty!\n        draw(ctx) {\n            ctx.lineWidth = this.line_width\n            ctx.strokeStyle = this.color\n            ctx.beginPath()\n\n            const layout = this.$props.layout\n            const i = this.data_index\n            const data = this.$props.data\n\n            if (!this.skip_nan) {\n                for (var k = 0, n = data.length; k < n; k++) {\n                    let p = data[k]\n                    let x = layout.t2screen(p[0])\n                    let y = layout.$2screen(p[i])\n                    ctx.lineTo(x, y)\n                }\n            } else {\n                var skip = false\n                for (var k = 0, n = data.length; k < n; k++) {\n                    let p = data[k]\n                    let x = layout.t2screen(p[0])\n                    let y = layout.$2screen(p[i])\n                    if (p[i] == null || y !== y) {\n                        skip = true\n                    } else {\n                        if (skip) ctx.moveTo(x, y)\n                        ctx.lineTo(x, y)\n                        skip = false\n                    }\n                }\n            }\n            ctx.stroke()\n        },\n\n        // For all data with these types overlay will be\n        // added to the renderer list. And '$props.data'\n        // will have the corresponding values. If you want to\n        // redefine the default behviour for a prticular\n        // indicator (let's say EMA),\n        // just create a new overlay with the same type:\n        // e.g. use_for() { return ['EMA'] }.\n        use_for() { return ['Spline', 'EMA', 'SMA'] },\n\n        // Colors for the legend, should have the\n        // same dimention as a data point (excl. timestamp)\n        data_colors() { return [this.color] }\n    },\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        line_width() {\n            return this.sett.lineWidth || 0.75\n        },\n        color() {\n            const n = this.$props.num % 5\n            return this.sett.color || this.COLORS[n]\n        },\n        data_index() {\n            return this.sett.dataIndex || 1\n        },\n        // Don't connect separate parts if true\n        skip_nan() {\n            return this.sett.skipNaN\n        }\n    },\n    data() {\n        return {\n            COLORS:\n            [\n                '#42b28a', '#5691ce', '#612ff9',\n                '#d50b90', '#ff2316'\n            ]\n        }\n    }\n\n}\n</script>\n","import script from \"./Spline.vue?vue&type=script&lang=js\"\nexport * from \"./Spline.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n// Channel renderer. (Keltner, Bollinger)\nimport Overlay from '../../mixins/overlay.js'\n\nexport default {\n    name: 'Splines',\n    mixins: [Overlay],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.1.0' }\n        },\n        draw(ctx) {\n            for (var i = 0; i < this.lines_num; i++) {\n                let _i = i % this.clrx.length\n                ctx.strokeStyle = this.clrx[_i]\n                ctx.lineWidth = this.widths[i] || this.line_width\n                ctx.beginPath()\n                this.draw_spline(ctx, i)\n                ctx.stroke()\n            }\n        },\n        draw_spline(ctx, i) {\n            const layout = this.$props.layout\n            const data = this.$props.data\n            if (!this.skip_nan) {\n                for (var k = 0, n = data.length; k < n; k++) {\n                    let p = data[k]\n                    let x = layout.t2screen(p[0])\n                    let y = layout.$2screen(p[i+1])\n                    ctx.lineTo(x, y)\n                }\n            } else {\n                var skip = false\n                for (var k = 0, n = data.length; k < n; k++) {\n                    let p = data[k]\n                    let x = layout.t2screen(p[0])\n                    let y = layout.$2screen(p[i+1])\n                    if (p[i+1] == null || y !== y) {\n                        skip = true\n                    } else {\n                        if (skip) ctx.moveTo(x, y)\n                        ctx.lineTo(x, y)\n                        skip = false\n                    }\n                }\n            }\n        },\n        use_for() { return ['Splines', 'DMI'] },\n        data_colors() { return this.clrx }\n    },\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        line_width() {\n            return this.sett.lineWidth || 0.75\n        },\n        widths() {\n            return this.sett.lineWidths || []\n        },\n        clrx() {\n            let colors = this.sett.colors || []\n            let n = this.$props.num\n            if (!colors.length) {\n                for (var i = 0; i < this.lines_num; i++) {\n                    colors.push(this.COLORS[(n + i) % 5])\n                }\n            }\n            return colors\n        },\n        lines_num() {\n            if (!this.$props.data[0]) return 0\n            return this.$props.data[0].length - 1\n        },\n        // Don't connect separate parts if true\n        skip_nan() {\n            return this.sett.skipNaN\n        }\n    },\n    data() {\n        return {\n            COLORS:\n            [\n                '#42b28a', '#5691ce', '#612ff9',\n                '#d50b90', '#ff2316'\n            ]\n        }\n    }\n}\n\n</script>\n","import script from \"./Splines.vue?vue&type=script&lang=js\"\nexport * from \"./Splines.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n// R S I . Because we love it\n\n// Adds all necessary stuff for you.\nimport Overlay from '../../mixins/overlay.js'\n\nexport default {\n    name: 'Range',\n    mixins: [Overlay],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.0.1' }\n        },\n        // Here goes your code. You are provided with:\n        // { All stuff is reactive }\n        // $props.layout -> positions of all chart elements +\n        //  some helper functions (see layout_fn.js)\n        // $props.interval -> candlestick time interval\n        // $props.sub -> current subset of candlestick data\n        // $props.data -> your indicator's data subset.\n        //  Comes \"as is\", should have the following format:\n        //  [[<timestamp>, ... ], ... ]\n        // $props.colors -> colors (see TradingVue.vue)\n        // $props.cursor -> current position of crosshair\n        // $props.settings -> indicator's custom settings\n        //  E.g. colors, line thickness, etc. You define it.\n        // $props.num -> indicator's layer number (of All\n        // layers in the current grid)\n        // $props.id -> indicator's id (e.g. EMA_0)\n        // ~\n        // Finally, let's make the canvas dirty!\n        draw(ctx) {\n\n            const layout = this.$props.layout\n            const upper = layout.$2screen(this.sett.upper || 70)\n            const lower = layout.$2screen(this.sett.lower || 30)\n            const data = this.$props.data\n\n            // RSI values\n\n            ctx.lineWidth = this.line_width\n            ctx.strokeStyle = this.color\n            ctx.beginPath()\n\n            for (var k = 0, n = data.length; k < n; k++) {\n                let p = data[k]\n                let x = layout.t2screen(p[0])\n                let y = layout.$2screen(p[1])\n                ctx.lineTo(x, y)\n            }\n\n            ctx.stroke()\n\n            ctx.strokeStyle = this.band_color\n            ctx.setLineDash([5]) // Will be removed after draw()\n            ctx.beginPath()\n\n            // Fill the area between the bands\n            ctx.fillStyle = this.back_color\n            ctx.fillRect(0, upper, layout.width, lower - upper)\n\n            // Upper band\n            ctx.moveTo(0, upper)\n            ctx.lineTo(layout.width, upper)\n\n            // Lower band\n            ctx.moveTo(0, lower)\n            ctx.lineTo(layout.width, lower)\n\n            ctx.stroke()\n        },\n\n        // For all data with these types overlay will be\n        // added to the renderer list. And '$props.data'\n        // will have the corresponding values. If you want to\n        // redefine the default behviour for a prticular\n        // indicator (let's say EMA),\n        // just create a new overlay with the same type:\n        // e.g. use_for() { return ['EMA'] }.\n        use_for() { return ['Range', 'RSI'] },\n\n        // Colors for the legend, should have the\n        // same dimention as a data point (excl. timestamp)\n        data_colors() { return [this.color] },\n\n        // Y-Range tansform. For example you need a fixed\n        // Y-range for an indicator, you can do it here!\n        // Gets estimated range, @return you favorite range\n        y_range(hi, lo) {\n            return [\n                Math.max(hi, this.sett.upper || 70),\n                Math.min(lo, this.sett.lower || 30)\n            ]\n        }\n    },\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        line_width() {\n            return this.sett.lineWidth || 0.75\n        },\n        color() {\n            return this.sett.color || '#ec206e'\n        },\n        band_color() {\n            return this.sett.bandColor || '#ddd'\n        },\n        back_color() {\n            return this.sett.backColor || '#381e9c16'\n        }\n    }\n\n}\n</script>\n","import script from \"./Range.vue?vue&type=script&lang=js\"\nexport * from \"./Range.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n\nimport Overlay from '../../mixins/overlay.js'\n\nexport default {\n    name: 'Trades',\n    mixins: [Overlay],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.0.2' }\n        },\n        draw(ctx) {\n            const layout = this.$props.layout\n            const data = this.$props.data\n            ctx.lineWidth = 1.5\n            ctx.strokeStyle = 'black'\n            for (var k = 0, n = data.length; k < n; k++) {\n                let p = data[k]\n                ctx.fillStyle = p[1] ? this.buy_color : this.sell_color\n                ctx.beginPath()\n                let x = layout.t2screen(p[0]) // x - Mapping\n                let y = layout.$2screen(p[2]) // y - Mapping\n                ctx.arc(x, y, this.marker_size + 0.5, 0, Math.PI * 2, true)\n                ctx.fill()\n                ctx.stroke()\n\n                if (this.show_label && p[3]) {\n                    this.draw_label(ctx, x, y, p)\n                }\n            }\n        },\n\n        draw_label(ctx, x, y, p) {\n\n            ctx.fillStyle = this.label_color\n            ctx.font = this.new_font\n            ctx.textAlign = 'center'\n            ctx.fillText(p[3], x, y - 25)\n        },\n        use_for() { return ['Trades'] },\n\n        // Defines legend format (values & colors)\n        legend(values) {\n            switch (values[1]) {\n                case 0:\n                    var pos = 'Sell'\n                    break\n                case 1:\n                    pos = 'Buy'\n                    break\n                default:\n                    pos = 'Unknown'\n            }\n\n            return [\n                {\n                    value: pos\n                },\n                {\n                    value: values[2].toFixed(4),\n                    color: this.$props.colors.text\n                }\n            ].concat(values[3] ? [\n                {\n                    value: values[3]\n                }\n            ] : [])\n        }\n\n\n    },\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        default_font() {\n            return '12px ' + this.$props.font.split('px').pop()\n        },\n        buy_color() {\n            return this.sett.buyColor || '#63df89'\n        },\n        sell_color() {\n            return this.sett.sellColor || '#ec4662'\n        },\n        label_color() {\n            return this.sett.labelColor || '#999'\n        },\n        marker_size() {\n            return this.sett.markerSize || 5\n        },\n        show_label() {\n            return this.sett.showLabel !== false\n        },\n        new_font() {\n            return this.sett.font || this.default_font\n        }\n    }\n}\n</script>\n","import script from \"./Trades.vue?vue&type=script&lang=js\"\nexport * from \"./Trades.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n// Channel renderer. (Keltner, Bollinger)\n// TODO: allow color transparency\n// TODO: improve performance: draw in one solid chunk\nimport Overlay from '../../mixins/overlay.js'\n\nexport default {\n    name: 'Channel',\n    mixins: [Overlay],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.0.1' }\n        },\n        /*draw(ctx) {\n            ctx.lineWidth = this.line_width\n            ctx.strokeStyle = this.color\n            ctx.fillStyle = this.back_color\n\n            for (var i = 0; i < this.$props.data.length - 1; i++) {\n\n\n                let p1 = this.mapp(this.$props.data[i])\n                let p2 = this.mapp(this.$props.data[i+1])\n\n                if (!p2) continue\n                if (p1.y1 !== p1.y1) continue // Fix NaN\n\n                // Background\n                ctx.beginPath()\n                ctx.moveTo(p1.x, p1.y1)\n                ctx.lineTo(p2.x + 0.1, p2.y1)\n                ctx.lineTo(p2.x + 0.1, p2.y3)\n                ctx.lineTo(p1.x, p1.y3)\n                ctx.fill()\n\n                // Lines\n                ctx.beginPath()\n                ctx.moveTo(p1.x, p1.y1)\n                ctx.lineTo(p2.x, p2.y1)\n                if (this.show_mid) {\n                    ctx.moveTo(p1.x, p1.y2)\n                    ctx.lineTo(p2.x, p2.y2)\n                }\n                ctx.moveTo(p1.x, p1.y3)\n                ctx.lineTo(p2.x, p2.y3)\n                ctx.stroke()\n\n            }\n        },*/\n\n        draw(ctx) {\n            // Background\n            const data = this.data\n            const layout = this.layout\n            ctx.beginPath()\n            ctx.fillStyle = this.back_color\n            for (var i = 0; i < data.length; i++) {\n                let p = data[i]\n                let x = layout.t2screen(p[0])\n                let y = layout.$2screen(p[1] || undefined)\n                ctx.lineTo(x, y)\n            }\n            for (var i = data.length - 1; i >= 0; i--) {\n                let p = data[i]\n                let x = layout.t2screen(p[0])\n                let y = layout.$2screen(p[3] || undefined)\n                ctx.lineTo(x, y)\n            }\n            ctx.fill()\n\n            // Lines\n            ctx.lineWidth = this.line_width\n            ctx.strokeStyle = this.color\n\n            // Top line\n            ctx.beginPath()\n            for (var i = 0; i < data.length; i++) {\n                let p = data[i]\n                let x = layout.t2screen(p[0])\n                let y = layout.$2screen(p[1] || undefined)\n                ctx.lineTo(x, y)\n            }\n            ctx.stroke()\n            // Bottom line\n            ctx.beginPath()\n            for (var i = 0; i < data.length; i++) {\n                let p = data[i]\n                let x = layout.t2screen(p[0])\n                let y = layout.$2screen(p[3] || undefined)\n                ctx.lineTo(x, y)\n            }\n            ctx.stroke()\n            // Middle line\n            if (!this.show_mid) return\n            ctx.beginPath()\n            for (var i = 0; i < data.length; i++) {\n                let p = data[i]\n                let x = layout.t2screen(p[0])\n                let y = layout.$2screen(p[2] || undefined)\n                ctx.lineTo(x, y)\n            }\n            ctx.stroke()\n        },\n\n        mapp(p) {\n            const layout = this.$props.layout\n            return p && {\n                x:  layout.t2screen(p[0]),\n                y1: layout.$2screen(p[1]),\n                y2: layout.$2screen(p[2]),\n                y3: layout.$2screen(p[3])\n            }\n        },\n        use_for() { return ['Channel', 'KC', 'BB'] },\n        data_colors() { return [this.color, this.color, this.color] }\n    },\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        line_width() {\n            return this.sett.lineWidth || 0.75\n        },\n        color() {\n            const n = this.$props.num % 5\n            return this.sett.color || this.COLORS[n]\n        },\n        show_mid() {\n            return 'showMid' in this.sett ? this.sett.showMid : true\n        },\n        back_color() {\n            return this.sett.backColor || this.color + '11'\n        }\n    },\n    data() {\n        return {\n            COLORS:\n            [\n                '#42b28a', '#5691ce', '#612ff9',\n                '#d50b90', '#ff2316'\n            ]\n        }\n    }\n\n}\n</script>\n","import script from \"./Channel.vue?vue&type=script&lang=js\"\nexport * from \"./Channel.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n// Segment renderer.\n\nimport Overlay from '../../mixins/overlay.js'\n\nexport default {\n    name: 'Segment',\n    mixins: [Overlay],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.0.0' }\n        },\n        draw(ctx) {\n\n            if (!this.p1 || !this.p2) return\n\n            ctx.lineWidth = this.line_width\n            ctx.strokeStyle = this.color\n            ctx.beginPath()\n\n            const layout = this.$props.layout\n\n            let x1 = layout.t2screen(this.p1[0])\n            let y1 = layout.$2screen(this.p1[1])\n            ctx.moveTo(x1, y1)\n\n            let x2 = layout.t2screen(this.p2[0])\n            let y2 = layout.$2screen(this.p2[1])\n            ctx.lineTo(x2, y2)\n\n            ctx.stroke()\n        },\n        use_for() { return ['Segment'] },\n        data_colors() { return [this.color] }\n    },\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        p1() {\n            return this.$props.settings.p1\n        },\n        p2() {\n            return this.$props.settings.p2\n        },\n        line_width() {\n            return this.sett.lineWidth || 0.9\n        },\n        color() {\n            const n = this.$props.num % 5\n            return this.sett.color || this.COLORS[n]\n        }\n    },\n    data() {\n        return {\n            COLORS:\n            [\n                '#42b28a', '#5691ce', '#612ff9',\n                '#d50b90', '#ff2316'\n            ]\n        }\n    }\n\n}\n</script>\n","import script from \"./Segment.vue?vue&type=script&lang=js\"\nexport * from \"./Segment.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Claculates postions and sizes for candlestick\n// and volume bars for the given subset of data\n\nimport Utils from '../../stuff/utils.js'\n\nexport function layout_cnv(self) {\n\n    let $p = self.$props\n    let sub = $p.data\n    let t2screen = $p.layout.t2screen\n    let layout = $p.layout\n\n    let candles = []\n    let volume = []\n\n    // The volume bar height is determined as a percentage of\n    // the chart's height (VOLSCALE)\n    let maxv = Math.max(...sub.map(x => x[5]))\n    let vs =  $p.config.VOLSCALE * layout.height / maxv\n    var x1, x2, w, avg_w, mid, prev = undefined\n\n    // Subset interval against main interval\n    var [interval2, ratio] = new_interval(layout, $p, sub)\n    let px_step2 = layout.px_step * ratio\n\n    let splitter = px_step2 > 5 ? 1 : 0\n\n    // A & B are current chart tranformations:\n    // A === scale,  B === Y-axis shift\n    for (var i = 0; i < sub.length; i++) {\n        let p = sub[i]\n        mid = t2screen(p[0]) + 1\n\n        // Clear volume bar if there is a time gap\n        if (sub[i-1] && p[0] - sub[i-1][0] > interval2) {\n            prev = null\n        }\n\n        x1 = prev || Math.floor(mid - px_step2 * 0.5)\n        x2 = Math.floor(mid + px_step2 * 0.5) - 0.5\n\n        // TODO: add log scale support\n        candles.push({\n            x: mid,\n            w: layout.px_step * $p.config.CANDLEW * ratio,\n            o: Math.floor(p[1] * layout.A + layout.B),\n            h: Math.floor(p[2] * layout.A + layout.B),\n            l: Math.floor(p[3] * layout.A + layout.B),\n            c: Math.floor(p[4] * layout.A + layout.B),\n            raw: p\n        })\n\n        volume.push({\n            x1: x1,\n            x2: x2,\n            h: p[5] * vs,\n            green: p[4] >= p[1],\n            raw: p\n        })\n        prev = x2 + splitter\n    }\n\n    return { candles, volume }\n\n}\n\nexport function layout_vol(self) {\n\n    let $p = self.$props\n    let sub = $p.data\n    let t2screen = $p.layout.t2screen\n    let layout = $p.layout\n\n    let volume = []\n\n    // Detect data second dimention size:\n    let dim = sub[0] ? sub[0].length : 0\n\n    // Support special volume data (see API book), or OHLCV\n    // Data indices:\n    self._i1 = dim < 6 ? 1 : 5\n    self._i2 = dim < 6 ? (p => p[2]) : (p => p[4] >= p[1])\n\n    let maxv = Math.max(...sub.map(x => x[self._i1]))\n    let volscale = self.volscale || $p.config.VOLSCALE\n    let vs = volscale * layout.height / maxv\n    var x1, x2, mid, prev = undefined\n\n    // Subset interval against main interval\n    var [interval2, ratio] = new_interval(layout, $p, sub)\n    let px_step2 = layout.px_step * ratio\n\n    let splitter = px_step2 > 5 ? 1 : 0\n\n    // A & B are current chart tranformations:\n    // A === scale,  B === Y-axis shift\n    for (var i = 0; i < sub.length; i++) {\n        let p = sub[i]\n        mid = t2screen(p[0]) + 1\n\n        // Clear volume bar if there is a time gap\n        if (sub[i-1] && p[0] - sub[i-1][0] > interval2) {\n            prev = null\n        }\n        x1 = prev || Math.floor(mid - px_step2 * 0.5)\n        x2 = Math.floor(mid + px_step2 * 0.5) - 0.5\n\n        volume.push({\n            x1: x1,\n            x2: x2,\n            h: p[self._i1] * vs,\n            green: self._i2(p),\n            raw: p\n        })\n        prev = x2 + splitter\n    }\n    return volume\n\n}\n\nfunction new_interval(layout, $p, sub) {\n    // Subset interval against main interval\n    if (!layout.ti_map.ib) {\n        var interval2 = $p.tf || Utils.detect_interval(sub)\n        var ratio = interval2 / $p.interval\n    } else {\n        if ($p.tf) {\n            var ratio = $p.tf / layout.ti_map.tf\n            var interval2 = ratio\n        } else {\n            var interval2 = Utils.detect_interval(sub)\n            var ratio = interval2 / $p.interval\n        }\n    }\n    return [interval2, ratio]\n}\n","\n// Candle object for Candles overlay\n\nexport default class CandleExt {\n\n    constructor(overlay, ctx, data) {\n        this.ctx = ctx\n        this.self = overlay\n        this.style = data.raw[6] || this.self\n        this.draw(data)\n    }\n\n    draw(data) {\n        const green = data.raw[4] >= data.raw[1]\n        const body_color = green ?\n            this.style.colorCandleUp :\n            this.style.colorCandleDw\n\n        const wick_color = green ?\n            this.style.colorWickUp :\n            this.style.colorWickDw\n\n        let w = Math.max(data.w, 1)\n        let hw = Math.max(Math.floor(w * 0.5), 1)\n        let h = Math.abs(data.o - data.c)\n        let max_h = data.c === data.o ? 1 : 2\n        let x05 = Math.floor(data.x) - 0.5\n\n        this.ctx.strokeStyle = wick_color\n\n        this.ctx.beginPath()\n        this.ctx.moveTo(x05, Math.floor(data.h))\n        this.ctx.lineTo(x05, Math.floor(data.l))\n\n        this.ctx.stroke()\n\n        if (data.w > 1.5) {\n\n            this.ctx.fillStyle = body_color\n            // TODO: Move common calculations to layout.js\n            let s = green ? 1 : -1\n            this.ctx.fillRect(\n                Math.floor(data.x - hw -1),\n                data.c,\n                Math.floor(hw * 2 + 1),\n                s * Math.max(h, max_h),\n            )\n\n        } else {\n\n            this.ctx.strokeStyle = body_color\n\n            this.ctx.beginPath()\n            this.ctx.moveTo(\n                x05,\n                Math.floor(Math.min(data.o, data.c)),\n            )\n            this.ctx.lineTo(\n                x05,\n                Math.floor(Math.max(data.o, data.c)) +\n                    (data.o === data.c ? 1 : 0)\n            )\n\n            this.ctx.stroke()\n\n        }\n\n    }\n\n}\n","\nexport default class VolbarExt {\n\n    constructor(overlay, ctx, data) {\n        this.ctx = ctx\n        this.$p = overlay.$props\n        this.self = overlay\n        this.style = data.raw[6] || this.self\n        this.draw(data)\n    }\n\n    draw(data) {\n        let y0 = this.$p.layout.height\n        let w = data.x2 - data.x1\n        let h = Math.floor(data.h)\n\n        this.ctx.fillStyle = data.green ?\n            this.style.colorVolUp :\n            this.style.colorVolDw\n\n        this.ctx.fillRect(\n            Math.floor(data.x1),\n            Math.floor(y0 - h - 0.5),\n            Math.floor(w),\n            Math.floor(h + 1)\n        )\n\n    }\n\n}\n","\n// Price bar & price line (shader)\n\nexport default class Price {\n\n    constructor(comp) {\n        this.comp = comp\n    }\n\n    // Defines an inline shader (has access to both\n    // target & overlay's contexts)\n    init_shader() {\n\n        let layout = this.comp.$props.layout\n        let config = this.comp.$props.config\n        let comp = this.comp\n        let last_bar = () => this.last_bar()\n\n        this.comp.$emit('new-shader', {\n            target: 'sidebar', draw: ctx => {\n\n                let bar = last_bar()\n                if (!bar) return\n\n                let w = ctx.canvas.width\n                let h = config.PANHEIGHT\n                let lbl = bar.price.toFixed(layout.prec)\n                ctx.fillStyle = bar.color\n\n                let x = - 0.5\n                let y = bar.y - h * 0.5 - 0.5\n                let a = 7\n                ctx.fillRect(x - 0.5, y, w + 1, h)\n                ctx.fillStyle = comp.$props.colors.textHL\n                ctx.textAlign = 'left'\n                ctx.fillText(lbl, a, y + 15)\n\n            }\n        })\n        this.shader = true\n    }\n\n    // Regular draw call for overaly\n    draw(ctx) {\n        if (!this.comp.$props.meta.last) return\n        if (!this.shader) this.init_shader()\n\n        let layout = this.comp.$props.layout\n        let last = this.comp.$props.last\n\n        let dir = last[4] >= last[1]\n        let color = dir ? this.green() : this.red()\n        let y = layout.$2screen(last[4]) + (dir ? 1 : 0)\n\n        ctx.strokeStyle = color\n        ctx.setLineDash([1, 1])\n        ctx.beginPath()\n        ctx.moveTo(0, y)\n        ctx.lineTo(layout.width, y)\n        ctx.stroke()\n        ctx.setLineDash([])\n    }\n\n    last_bar() {\n\n        if (!this.comp.data.length) return undefined\n        let layout = this.comp.$props.layout\n        let last = this.comp.data[this.comp.data.length - 1]\n        let y = layout.$2screen(last[4])\n        //let cndl = layout.c_magnet(last[0])\n        return {\n            y: y, //Math.floor(cndl.c) - 0.5,\n            price: last[4],\n            color: last[4] >= last[1] ? this.green() : this.red()\n        }\n    }\n\n    last_price() {\n        return this.comp.$props.meta.last ?\n            this.comp.$props.meta.last[4] : undefined\n    }\n\n    green() {\n        return this.comp.colorCandleUp\n    }\n\n    red() {\n        return this.comp.colorCandleDw\n    }\n\n}\n","<script>\n// Renedrer for candlesticks + volume (optional)\n// It can be used as the main chart or an indicator\n\nimport Overlay from '../../mixins/overlay.js'\nimport { layout_cnv } from '../js/layout_cnv.js'\nimport Candle from '../primitives/candle.js'\nimport Volbar from '../primitives/volbar.js'\nimport Price from '../primitives/price.js'\n\nexport default {\n    name: 'Candles',\n    mixins: [Overlay],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.2.1' }\n        },\n        init() {\n            this.price = new Price(this)\n        },\n        draw(ctx) {\n\n            // If data === main candlestick data\n            // render as main chart:\n            if (this.$props.sub === this.$props.data) {\n                var cnv = {\n                    candles: this.$props.layout.candles,\n                    volume: this.$props.layout.volume,\n                }\n            // Else, as offchart / onchart indicator:\n            } else {\n                cnv = layout_cnv(this)\n            }\n\n            if (this.show_volume) {\n                var cv = cnv.volume\n                for (var i = 0, n = cv.length; i < n; i++) {\n                    new Volbar(this, ctx, cv[i])\n                }\n            }\n\n            var cc = cnv.candles\n            for (var i = 0, n = cc.length; i < n; i++) {\n                new Candle(this, ctx, cc[i])\n            }\n\n            if (this.price_line) this.price.draw(ctx)\n        },\n        use_for() { return ['Candles'] },\n\n        // In case it's added as offchart overlay\n        y_range() {\n            var hi = -Infinity, lo = Infinity\n            for (var i = 0, n = this.sub.length; i < n; i++) {\n                let x = this.sub[i]\n                if (x[2] > hi) hi = x[2]\n                if (x[3] < lo) lo = x[3]\n            }\n            return [hi, lo]\n        }\n    },\n\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        show_volume() {\n            return 'showVolume' in this.sett ?\n                this.sett.showVolume : true\n        },\n        price_line() {\n            return 'priceLine' in this.sett ?\n                this.sett.priceLine : true\n        },\n        colorCandleUp() {\n            return this.sett.colorCandleUp ||\n            this.$props.colors.candleUp\n        },\n        colorCandleDw() {\n            return this.sett.colorCandleDw ||\n            this.$props.colors.candleDw\n        },\n        colorWickUp() {\n            return this.sett.colorWickUp ||\n            this.$props.colors.wickUp\n        },\n        colorWickDw() {\n            return this.sett.colorWickDw ||\n            this.$props.colors.wickDw\n        },\n        colorWickSm() {\n            return this.sett.colorWickSm ||\n            this.$props.colors.wickSm\n        },\n        colorVolUp() {\n            return this.sett.colorVolUp ||\n            this.$props.colors.volUp\n        },\n        colorVolDw() {\n            return this.sett.colorVolDw ||\n            this.$props.colors.volDw\n        }\n    },\n    data() {\n        return { price: {} }\n    }\n\n}\n</script>\n","import script from \"./Candles.vue?vue&type=script&lang=js\"\nexport * from \"./Candles.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n// Standalone renedrer for the volume\n\nimport Overlay from '../../mixins/overlay.js'\nimport { layout_vol } from '../js/layout_cnv.js'\nimport Volbar from '../primitives/volbar.js'\n\nexport default {\n    name: 'Volume',\n    mixins: [Overlay],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.1.0' }\n        },\n\n        draw(ctx) {\n\n            // TODO: volume average\n            // TODO: Y-axis scaling\n\n            for (var v of layout_vol(this)) {\n                new Volbar(this, ctx, v)\n            }\n\n        },\n        use_for() { return ['Volume'] },\n\n        // Defines legend format (values & colors)\n        // _i2 - detetected data index (see layout_cnv)\n        legend(values) {\n\n            let flag = this._i2 ?\n                this._i2(values) : values[2]\n\n            const color = flag ?\n                this.colorVolUpLegend :\n                this.colorVolDwLegend\n\n            return [{\n                value: values[this._i1 || 1], color\n            }]\n        },\n        // When added as offchart overlay\n        // If data is OHLCV => recalc y-range\n        // _i1 - detetected data index (see layout_cnv)\n        y_range(hi, lo) {\n            if (this._i1 === 5) {\n                let sub = this.$props.sub\n                return [\n                    Math.max(...sub.map(x => x[this._i1])),\n                    Math.min(...sub.map(x => x[this._i1]))\n                ]\n            } else {\n                return [hi, lo]\n            }\n        }\n    },\n\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        colorVolUp() {\n            return this.sett.colorVolUp ||\n            this.$props.colors.volUp\n        },\n        colorVolDw() {\n            return this.sett.colorVolDw ||\n            this.$props.colors.volDw\n        },\n        colorVolUpLegend() {\n            return this.sett.colorVolUpLegend ||\n            this.$props.colors.candleUp\n        },\n        colorVolDwLegend() {\n            return this.sett.colorVolDwLegend ||\n            this.$props.colors.candleDw\n        },\n        volscale() {\n            return this.sett.volscale ||\n            this.$props.grid_id > 0 ? 0.85 :\n            this.$props.config.VOLSCALE\n        }\n    },\n    data() {\n        return {}\n    }\n\n}\n</script>\n","import script from \"./Volume.vue?vue&type=script&lang=js\"\nexport * from \"./Volume.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n\n// Data section splitters (with labels)\n\nimport Overlay from '../../mixins/overlay.js'\n\nexport default {\n    name: 'Splitters',\n    mixins: [Overlay],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.0.1' }\n        },\n        draw(ctx) {\n            let layout = this.$props.layout\n            ctx.lineWidth = this.line_width\n            ctx.strokeStyle = this.line_color\n\n            this.$props.data.forEach((p, i) => {\n                ctx.beginPath()\n                let x = layout.t2screen(p[0]) // x - Mapping\n                ctx.setLineDash([10, 10])\n                ctx.moveTo(x, 0)\n                ctx.lineTo(x, this.layout.height)\n                ctx.stroke()\n                if (p[1]) this.draw_label(ctx, x, p)\n            })\n        },\n\n        draw_label(ctx, x, p) {\n\n            let side = p[2] ? 1 : -1\n            x += 2.5 * side\n\n            ctx.font = this.new_font\n\n            let pos = p[4] || this.y_position\n            let w = ctx.measureText(p[1]).width + 10\n            let y = this.layout.height * (1.0 - pos)\n\n            y = Math.floor(y)\n\n            ctx.fillStyle = p[3] || this.flag_color\n\n            ctx.beginPath()\n            ctx.moveTo(x, y)\n            ctx.lineTo(x + 10 * side, y - 10 * side)\n            ctx.lineTo(x + (w + 10) * side, y - 10 * side)\n            ctx.lineTo(x + (w + 10) * side, y + 10 * side)\n            ctx.lineTo(x + 10 * side, y + 10 * side)\n            ctx.closePath()\n            ctx.fill()\n\n            ctx.fillStyle = this.label_color\n            ctx.textAlign = side < 0 ? 'right' : 'left'\n            ctx.fillText(p[1], x + 15 * side, y + 4)\n        },\n        use_for() { return ['Splitters'] }\n\n    },\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        new_font() {\n            return this.sett.font ||\n            '12px ' + this.$props.font.split('px').pop()\n        },\n        flag_color() {\n            return this.sett.flagColor || '#4285f4'\n        },\n        label_color() {\n            return this.sett.labelColor || '#fff'\n        },\n        line_color() {\n            return this.sett.lineColor || '#4285f4'\n        },\n        line_width() {\n            return this.sett.lineWidth || 1.0\n        },\n        y_position() {\n            return this.sett.yPosition || 0.9\n        }\n    },\n    data() {\n        return {}\n    }\n}\n\n</script>\n","import script from \"./Splitters.vue?vue&type=script&lang=js\"\nexport * from \"./Splitters.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Keyboard event handler for overlay\n\nexport default class Keys {\n\n    constructor(comp) {\n        this.comp = comp\n        this.map = {}\n        this.listeners = 0\n        this.keymap = {}\n    }\n\n    on(name, handler) {\n        if (!handler) return\n        this.map[name] = this.map[name] || []\n        this.map[name].push(handler)\n        this.listeners++\n    }\n\n    // Called by grid.js\n    emit(name, event) {\n        if (name in this.map) {\n            for (var f of this.map[name]) {\n                f(event)\n            }\n        }\n        if (name === 'keydown') {\n            if (!this.keymap[event.key]) {\n                this.emit(event.key)\n            }\n            this.keymap[event.key] = true\n        }\n        if (name === 'keyup') {\n            this.keymap[event.key] = false\n        }\n    }\n\n    pressed(key) {\n        return this.keymap[key]\n    }\n\n}\n","\n// Usuful stuff for creating tools. Include as mixin\n\nimport Keys from '../stuff/keys.js'\nimport Utils from '../stuff/utils.js'\n\nexport default {\n    methods: {\n        init_tool() {\n            // Collision functions (float, float) => bool,\n            this.collisions = []\n            this.pins = []\n            this.mouse.on('mousemove', e => {\n                if (this.collisions.some(f => f(\n                    this.mouse.x, this.mouse.y,\n                ))) {\n                    this.show_pins = true\n                } else {\n                    this.show_pins = false\n                }\n                if (this.drag) this.drag_update()\n            })\n\n            this.mouse.on('mousedown', e => {\n                if (Utils.default_prevented(e)) return\n                if (this.collisions.some(f => f(\n                    this.mouse.x, this.mouse.y,\n                ))) {\n                    if (!this.selected) {\n                        this.$emit('object-selected')\n                    }\n                    this.start_drag()\n                    e.preventDefault()\n                    this.pins.forEach(x => x.mousedown(e, true))\n                }\n            })\n            this.mouse.on('mouseup', e => {\n                this.drag = null\n                this.$emit('scroll-lock', false)\n            })\n\n            this.keys = new Keys(this)\n            this.keys.on('Delete', this.remove_tool)\n            this.keys.on('Backspace', this.remove_tool)\n\n            this.show_pins = false\n            this.drag = null\n        },\n        render_pins(ctx) {\n            if (this.selected || this.show_pins) {\n                this.pins.forEach(x => x.draw(ctx))\n            }\n        },\n        set_state(name) {\n            this.$emit('change-settings', {\n                 $state: name\n            })\n        },\n        watch_uuid(n, p) {\n            // If layer $uuid is changed, then re-init\n            // pins & collisions\n            if (n.$uuid !== p.$uuid) {\n                for (var p of this.pins) p.re_init()\n                this.collisions = []\n                this.show_pins = false\n                this.drag = null\n            }\n        },\n        pre_draw() {\n            // Delete all collision functions before\n            // the draw() call and let primitives set\n            // them again\n            this.collisions = []\n        },\n        remove_tool() {\n            if (this.selected) this.$emit('remove-tool')\n        },\n        start_drag() {\n            this.$emit('scroll-lock', true)\n            let cursor = this.$props.cursor\n            this.drag = { t: cursor.t, y$: cursor.y$ }\n            this.pins.forEach(x => x.rec_position())\n        },\n        drag_update() {\n            let dt = this.$props.cursor.t - this.drag.t\n            let dy = this.$props.cursor.y$ - this.drag.y$\n            this.pins.forEach(x => x.update_from(\n                [x.t1 + dt, x.y$1 + dy], true\n            ))\n        }\n    },\n    computed: {\n        // Settings starting with $ are reserved\n        selected() {\n            return this.$props.settings.$selected\n        },\n        state() {\n            return this.$props.settings.$state\n        },\n    }\n}\n","// Semi-automatic pin object. For stretching things.\n\nimport Utils from '../../stuff/utils.js'\n\nexport default class Pin {\n\n    // (Comp reference, a name in overlay settings,\n    // pin parameters)\n    constructor(comp, name, params = {}) {\n\n        this.RADIUS = comp.$props.config.PIN_RADIUS || 5.5\n        this.RADIUS_SQ = Math.pow(this.RADIUS + 7, 2)\n\n        if (Utils.is_mobile) {\n            this.RADIUS += 2\n            this.RADIUS_SQ *= 2.5\n        }\n\n        this.COLOR_BACK = comp.$props.colors.back\n        this.COLOR_BR = comp.$props.colors.text\n\n        this.comp = comp\n        this.layout = comp.layout\n        this.mouse = comp.mouse\n        this.name = name\n        this.state = params.state || 'settled'\n        this.hidden = params.hidden || false\n\n        this.mouse.on('mousemove', e => this.mousemove(e))\n        this.mouse.on('mousedown', e => this.mousedown(e))\n        this.mouse.on('mouseup', e => this.mouseup(e))\n\n        if (comp.state === 'finished') {\n            this.state = 'settled'\n            this.update_from(comp.$props.settings[name])\n        } else {\n            this.update()\n        }\n\n        if (this.state !== 'settled') {\n            this.comp.$emit('scroll-lock', true)\n        }\n    }\n\n    re_init() {\n        this.update_from(\n            this.comp.$props.settings[this.name]\n        )\n    }\n\n    draw(ctx) {\n        if (this.hidden) return\n        switch (this.state) {\n            case 'tracking':\n                break\n            case 'dragging':\n                if (!this.moved) this.draw_circle(ctx)\n                break\n            case 'settled':\n                this.draw_circle(ctx)\n                break\n        }\n    }\n\n    draw_circle(ctx) {\n\n        this.layout = this.comp.layout\n        if (this.comp.selected) {\n            var r = this.RADIUS, lw = 1.5\n        } else {\n            var r = this.RADIUS * 0.95, lw = 1\n        }\n\n        ctx.lineWidth = lw\n        ctx.strokeStyle = this.COLOR_BR\n        ctx.fillStyle = this.COLOR_BACK\n        ctx.beginPath()\n        ctx.arc(\n            this.x = this.layout.t2screen(this.t),\n            this.y = this.layout.$2screen(this.y$),\n            r + 0.5, 0, Math.PI * 2, true)\n        ctx.fill()\n        ctx.stroke()\n    }\n\n    update() {\n\n        this.y$ = this.comp.$props.cursor.y$\n        this.y =  this.comp.$props.cursor.y\n        this.t = this.comp.$props.cursor.t\n        this.x =  this.comp.$props.cursor.x\n\n        // Save pin as time in IB mode\n        //if (this.layout.ti_map.ib) {\n        //    this.t = this.layout.ti_map.i2t(this.t )\n        //}\n\n        // Reset the settings attahed to the pin (position)\n        this.comp.$emit('change-settings', {\n             [this.name]: [this.t, this.y$]\n        })\n    }\n\n    update_from(data, emit = false) {\n\n        if (!data) return\n        this.layout = this.comp.layout\n\n        this.y$ = data[1]\n        this.y = this.layout.$2screen(this.y$)\n        this.t = data[0]\n        this.x = this.layout.t2screen(this.t)\n\n        // TODO: Save pin as time in IB mode\n        //if (this.layout.ti_map.ib) {\n        //    this.t = this.layout.ti_map.i2t(this.t )\n        //}\n\n        if (emit) this.comp.$emit('change-settings', {\n             [this.name]: [this.t, this.y$]\n        })\n\n    }\n\n    rec_position() {\n        this.t1 = this.t\n        this.y$1 = this.y$\n    }\n\n    mousemove(event) {\n\n        switch(this.state) {\n            case 'tracking':\n            case 'dragging':\n                this.moved = true\n                this.update()\n                break\n        }\n\n\n    }\n\n    mousedown(event, force = false) {\n        if (Utils.default_prevented(event) && !force) return\n        switch (this.state) {\n            case 'tracking':\n                this.state = 'settled'\n                if (this.on_settled) this.on_settled()\n                this.comp.$emit('scroll-lock', false)\n                break\n            case 'settled':\n                if (this.hidden) return\n                if (this.hover()) {\n                    this.state = 'dragging'\n                    this.moved = false\n                    this.comp.$emit('scroll-lock', true)\n                    this.comp.$emit('object-selected')\n                }\n                break\n        }\n        if (this.hover()) {\n            event.preventDefault()\n        }\n    }\n\n    mouseup(event) {\n        switch (this.state) {\n            case 'dragging':\n                this.state = 'settled'\n                if (this.on_settled) this.on_settled()\n                this.comp.$emit('scroll-lock', false)\n                break\n        }\n    }\n\n    on(name, handler) {\n        switch (name) {\n            case 'settled':\n                this.on_settled = handler\n                break\n        }\n    }\n\n    hover() {\n        let x = this.x\n        let y = this.y\n        return (\n            (x - this.mouse.x) * (x - this.mouse.x) +\n            (y - this.mouse.y) * (y - this.mouse.y)\n        ) < this.RADIUS_SQ\n    }\n\n}\n","\n// Draws a segment, adds corresponding collision f-n\n\nimport Math2 from '../../stuff/math.js'\nimport Utils from '../../stuff/utils.js'\n\nexport default class Seg {\n\n    // Overlay ref, canvas ctx\n    constructor(overlay, ctx) {\n        this.ctx = ctx\n        this.comp = overlay\n        this.T = overlay.$props.config.TOOL_COLL\n        if (Utils.is_mobile) this.T *= 2\n    }\n\n    // p1[t, $], p2[t, $] (time-price coordinates)\n    draw(p1, p2) {\n\n        const layout = this.comp.$props.layout\n\n        let x1 = layout.t2screen(p1[0])\n        let y1 = layout.$2screen(p1[1])\n        let x2 = layout.t2screen(p2[0])\n        let y2 = layout.$2screen(p2[1])\n\n        this.ctx.moveTo(x1, y1)\n        this.ctx.lineTo(x2, y2)\n\n        this.comp.collisions.push(\n            this.make([x1, y1], [x2, y2])\n        )\n    }\n\n    // Collision function. x, y - mouse coord.\n    make(p1, p2) {\n        return (x, y) => {\n            return Math2.point2seg(\n                [x, y], p1, p2\n            ) < this.T\n        }\n    }\n}\n","\n// Draws a line, adds corresponding collision f-n\n\nimport Math2 from '../../stuff/math.js'\nimport Utils from '../../stuff/utils.js'\n\nexport default class Line {\n\n    // Overlay ref, canvas ctx\n    constructor(overlay, ctx) {\n        this.ctx = ctx\n        this.comp = overlay\n        this.T = overlay.$props.config.TOOL_COLL\n        if (Utils.is_mobile) this.T *= 2\n    }\n\n    // p1[t, $], p2[t, $] (time-price coordinates)\n    draw(p1, p2) {\n\n        const layout = this.comp.$props.layout\n\n        let x1 = layout.t2screen(p1[0])\n        let y1 = layout.$2screen(p1[1])\n        let x2 = layout.t2screen(p2[0])\n        let y2 = layout.$2screen(p2[1])\n\n        this.ctx.moveTo(x1, y1)\n        this.ctx.lineTo(x2, y2)\n\n        let w = layout.width\n        let h = layout.height\n        // TODO: transform k (angle) to screen ratio\n        // (this requires a new a2screen function)\n        let k = (y2 - y1) / (x2 - x1)\n        let s = Math.sign(x2 - x1 || y2 - y1)\n        let dx = w * s * 2\n        let dy = w * k * s * 2\n        if (dy === Infinity) { dx = 0, dy = h * s}\n\n        this.ctx.moveTo(x2, y2)\n        this.ctx.lineTo(x2 + dx, y2 + dy)\n        if (!this.ray) {\n            this.ctx.moveTo(x1, y1)\n            this.ctx.lineTo(x1 - dx, y1 - dy)\n        }\n\n        this.comp.collisions.push(\n            this.make([x1, y1], [x2, y2])\n        )\n    }\n\n    // Collision function. x, y - mouse coord.\n    make(p1, p2) {\n        let f = this.ray ?\n            Math2.point2ray.bind(Math2) :\n            Math2.point2line.bind(Math2)\n        return (x, y) => {\n            return f(\n                [x, y], p1, p2\n            ) < this.T\n        }\n    }\n}\n","\n// Draws a ray, adds corresponding collision f-n\n\nimport Line from './line.js'\n\nexport default class Ray extends Line {\n    constructor(overlay, ctx) {\n        super(overlay, ctx)\n        this.ray = true\n    }\n}\n","<script>\n// Line drawing tool\n// TODO: make an angle-snap when \"Shift\" is pressed\n\nimport Overlay from '../../mixins/overlay.js'\nimport Tool from '../../mixins/tool.js'\nimport Icons from '../../stuff/icons.json'\nimport Pin from '../primitives/pin.js'\nimport Seg from '../primitives/seg.js'\nimport Line from '../primitives/line.js'\nimport Ray from '../primitives/ray.js'\n\nexport default {\n    name: 'LineTool',\n    mixins: [Overlay, Tool],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '1.1.0' }\n        },\n        tool() {\n            return {\n                // Descriptor for the tool\n                group: 'Lines', icon: Icons['segment.png'],\n                type: 'Segment',\n                hint: 'This hint will be shown on hover',\n                data: [],     // Default data\n                settings: {}, // Default settings\n                // Modifications\n                mods: {\n                    'Extended': {\n                        // Rewrites the default setting fields\n                        settings: { extended: true },\n                        icon: Icons['extended.png']\n                    },\n                    'Ray': {\n                        // Rewrites the default setting fields\n                        settings: { ray: true },\n                        icon: Icons['ray.png']\n                    }\n                }\n            }\n        },\n        // Called after overlay mounted\n        init() {\n            // First pin is settled at the mouse position\n            this.pins.push(new Pin(this, 'p1'))\n            // Second one is following mouse until it clicks\n            this.pins.push(new Pin(this, 'p2', {\n                state: 'tracking'\n            }))\n            this.pins[1].on('settled', () => {\n                // Call when current tool drawing is finished\n                // (Optionally) reset the mode back to 'Cursor'\n                this.set_state('finished')\n                this.$emit('drawing-mode-off')\n            })\n        },\n        draw(ctx) {\n            if (!this.p1 || !this.p2) return\n\n            ctx.lineWidth = this.line_width\n            ctx.strokeStyle = this.color\n            ctx.beginPath()\n\n            if (this.sett.ray) {\n                new Ray(this, ctx).draw(this.p1, this.p2)\n            } else if (this.sett.extended) {\n                new Line(this, ctx).draw(this.p1, this.p2)\n            } else {\n                new Seg(this, ctx).draw(this.p1, this.p2)\n            }\n\n            ctx.stroke()\n            this.render_pins(ctx)\n\n        },\n        use_for() { return ['LineTool'] },\n        data_colors() { return [this.color] }\n    },\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        p1() {\n            return this.$props.settings.p1\n        },\n        p2() {\n            return this.$props.settings.p2\n        },\n        line_width() {\n            return this.sett.lineWidth || 0.9\n        },\n        color() {\n            return this.sett.color || '#42b28a'\n        }\n    },\n    data() {\n        return {}\n    }\n\n}\n</script>\n","import script from \"./LineTool.vue?vue&type=script&lang=js\"\nexport * from \"./LineTool.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n// Price/Time measurment tool\n\nimport Overlay from '../../mixins/overlay.js'\nimport Tool from '../../mixins/tool.js'\nimport Icons from '../../stuff/icons.json'\nimport Pin from '../primitives/pin.js'\nimport Seg from '../primitives/seg.js'\n\nexport default {\n    name: 'RangeTool',\n    mixins: [Overlay, Tool],\n    methods: {\n        meta_info() {\n            return { author: 'C451', version: '2.0.1' }\n        },\n        tool() {\n            return {\n                // Descriptor for the tool\n                group: 'Measurements', icon: Icons['price_range.png'],\n                type: 'Price',\n                hint: 'Price Range',\n                data: [],     // Default data\n                settings: {}, // Default settings\n                mods: {\n                    'Time': {\n                        // Rewrites the default setting fields\n                        icon: Icons['time_range.png'],\n                        settings: { price: false, time: true }\n                    },\n                    'PriceTime': {\n                        // Rewrites the default setting fields\n                        icon: Icons['price_time.png'],\n                        settings: { price: true, time: true }\n                    },\n                    'ShiftMode': {\n                        // Rewrites the default setting fields\n                        settings: {\n                            price: true, time: true,\n                            shiftMode: true\n                        },\n                        hidden: true\n                    }\n                }\n            }\n        },\n        // Called after overlay mounted\n        init() {\n            // First pin is settled at the mouse position\n            this.pins.push(new Pin(this, 'p1', {\n                hidden: this.shift\n            }))\n            // Second one is following mouse until it clicks\n            this.pins.push(new Pin(this, 'p2', {\n                state: 'tracking',\n                hidden: this.shift\n            }))\n            this.pins[1].on('settled', () => {\n                // Call when current tool drawing is finished\n                // (Optionally) reset the mode back to 'Cursor'\n                this.set_state('finished')\n                this.$emit('drawing-mode-off')\n                // Deselect the tool in shiftMode\n                if (this.shift) this._$emit('custom-event', {\n                    event: 'object-selected', args: []\n                })\n            })\n        },\n        draw(ctx) {\n            if (!this.p1 || !this.p2) return\n\n            const dir = Math.sign(this.p2[1] - this.p1[1])\n            const layout = this.$props.layout\n            const xm = layout.t2screen((this.p1[0] + this.p2[0]) * 0.5)\n\n            ctx.lineWidth = this.line_width\n            ctx.strokeStyle = this.color\n\n            // Background\n            ctx.fillStyle = this.back_color\n            let x1 = layout.t2screen(this.p1[0])\n            let y1 = layout.$2screen(this.p1[1])\n            let x2 = layout.t2screen(this.p2[0])\n            let y2 = layout.$2screen(this.p2[1])\n            ctx.fillRect(x1, y1, x2 - x1, y2 - y1)\n\n            if (this.price) this.vertical(ctx, x1, y1, x2, y2, xm)\n            if (this.time) this.horizontal(ctx, x1, y1, x2, y2, xm)\n\n            this.draw_value(ctx, dir, xm, y2)\n\n            this.render_pins(ctx)\n\n        },\n        vertical(ctx, x1, y1, x2, y2, xm) {\n\n            const layout = this.$props.layout\n            const dir = Math.sign(this.p2[1] - this.p1[1])\n\n            ctx.beginPath()\n\n            if (!this.shift) {\n                // Top\n                new Seg(this, ctx).draw(\n                    [this.p1[0], this.p2[1]],  [this.p2[0], this.p2[1]]\n                )\n                // Bottom\n                new Seg(this, ctx).draw(\n                    [this.p1[0], this.p1[1]],  [this.p2[0], this.p1[1]]\n                )\n            }\n\n            // Vertical Arrow\n            ctx.moveTo(xm - 4, y2 + 5 * dir)\n            ctx.lineTo(xm, y2)\n            ctx.lineTo(xm + 4, y2 + 5 * dir)\n\n            ctx.stroke()\n\n            // Vertical Line\n            ctx.beginPath()\n            ctx.setLineDash([5, 5])\n            new Seg(this, ctx).draw(\n                [(this.p1[0] + this.p2[0]) * 0.5,  this.p2[1]],\n                [(this.p1[0] + this.p2[0]) * 0.5,  this.p1[1]]\n            )\n            ctx.stroke()\n            ctx.setLineDash([])\n\n        },\n        horizontal(ctx, x1, y1, x2, y2, xm) {\n\n            const layout = this.$props.layout\n            const xdir = Math.sign(this.p2[0] - this.p1[0])\n            const ym = (\n                layout.$2screen(this.p1[1]) +\n                layout.$2screen(this.p2[1])\n            ) / 2\n\n            ctx.beginPath()\n\n            if (!this.shift) {\n                // Left\n                new Seg(this, ctx).draw(\n                    [this.p1[0], this.p1[1]],  [this.p1[0], this.p2[1]]\n                )\n                // Right\n                new Seg(this, ctx).draw(\n                    [this.p2[0], this.p1[1]],  [this.p2[0], this.p2[1]]\n                )\n            }\n\n            // Horizontal Arrow\n            ctx.moveTo(x2 - 5 * xdir, ym - 4)\n            ctx.lineTo(x2, ym)\n            ctx.lineTo(x2 - 5 * xdir, ym + 4)\n\n            ctx.stroke()\n\n            // Horizontal Line\n            ctx.beginPath()\n            ctx.setLineDash([5, 5])\n            ctx.moveTo(x1, ym)\n            ctx.lineTo(x2, ym)\n            ctx.stroke()\n            ctx.setLineDash([])\n\n        },\n        // WTF? I know dude, a lot of shitty code here\n        draw_value(ctx, dir, xm, y) {\n            ctx.font = this.new_font\n            // Price delta (anf percent)\n            let d$ = (this.p2[1] - this.p1[1]).toFixed(this.prec)\n            let p = (100 * (this.p2[1] / this.p1[1] - 1)).toFixed(this.prec)\n            // Map interval to the actual tf (in ms)\n            let f = t => this.layout.ti_map.smth2t(t)\n            let dt = f(this.p2[0]) - f(this.p1[0])\n            let tf = this.layout.ti_map.tf\n            // Bars count (through the candle index)\n            let f2 = t => {\n                let c = this.layout.c_magnet(t)\n                let cn = this.layout.candles ||\n                    this.layout.master_grid.candles\n                return cn.indexOf(c)\n            }\n            // Bars count (and handling the negative values)\n            let b = f2(this.p2[0]) - f2(this.p1[0])\n            // Format time delta\n            // Format time delta\n            let dtstr = this.t2str(dt)\n            let text = []\n            if (this.price) text.push(`${d$}  (${p}%)`)\n            if (this.time) text.push(`${b} bars, ${dtstr}`)\n            text = text.join('\\n')\n            // \"Multiple\" fillText\n            let lines = text.split('\\n')\n            let w = Math.max(\n                ...lines.map(x => ctx.measureText(x).width + 20),\n                100)\n            let n = lines.length\n            let h = 20 * n\n            ctx.fillStyle = this.value_back\n            ctx.fillRect(xm - w * 0.5, y - (10+h) * dir, w, h * dir)\n            ctx.fillStyle = this.value_color\n            ctx.textAlign = 'center'\n            lines.forEach((l, i) => {\n                ctx.fillText(l, xm, y + (dir > 0 ? 20*i-20*n+5 : 20*i+25))\n            })\n        },\n        // Formats time from ms to `1D 12h` for example\n        t2str(t) {\n            let sign = Math.sign(t)\n            let abs = Math.abs(t)\n            let tfs = [\n                [1000, 's', 60],\n                [60000, 'm', 60],\n                [3600000, 'h', 24],\n                [86400000, 'D', 7],\n                [604800000, 'W', 4],\n                [2592000000, 'M', 12],\n                [31536000000, 'Y', Infinity],\n                [Infinity, 'Eternity', Infinity]\n            ]\n            for (var i = 0; i < tfs.length; i++) {\n                tfs[i][0] = Math.floor(abs / tfs[i][0])\n                if (tfs[i][0] === 0) {\n                    let p1 = tfs[i - 1]\n                    let p2 = tfs[i - 2]\n                    let txt = sign < 0 ? '-' : ''\n                    if (p1) {\n                        txt += p1.slice(0,2).join('')\n                    }\n                    let n2 = p2 ? p2[0] - p1[0] * p2[2] : 0\n                    if (p2 && n2) {\n                        txt += ' '\n                        txt += `${n2}${p2[1]}`\n                    }\n                    return txt\n                }\n            }\n        },\n        use_for() { return ['RangeTool'] },\n        data_colors() { return [this.color] }\n    },\n    // Define internal setting & constants here\n    computed: {\n        sett() {\n            return this.$props.settings\n        },\n        p1() {\n            return this.$props.settings.p1\n        },\n        p2() {\n            return this.$props.settings.p2\n        },\n        line_width() {\n            return this.sett.lineWidth || 0.9\n        },\n        color() {\n            return this.sett.color ||\n                this.$props.colors.cross\n        },\n        back_color() {\n            return this.sett.backColor || '#9b9ba316'\n        },\n        value_back() {\n            return this.sett.valueBack || '#9b9ba316'\n        },\n        value_color() {\n            return this.sett.valueColor ||\n                this.$props.colors.text\n        },\n        prec() {\n            return this.sett.precision || 2\n        },\n        new_font() {\n            return '12px ' + this.$props.font.split('px').pop()\n        },\n        price() {\n            return 'price' in this.sett ? this.sett.price : true\n        },\n        time() {\n            return 'time' in this.sett ? this.sett.time : false\n        },\n        shift() {\n            return this.sett.shiftMode\n        }\n    },\n    data() {\n        return {}\n    }\n\n}\n</script>\n","import script from \"./RangeTool.vue?vue&type=script&lang=js\"\nexport * from \"./RangeTool.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n// Sets up all layers/overlays for the grid with 'grid_id'\n\nimport Grid from './js/grid.js'\nimport { h } from 'vue'\nimport Canvas from '../mixins/canvas.js'\nimport UxList from '../mixins/uxlist.js'\nimport Crosshair from './Crosshair.vue'\nimport KeyboardListener from './KeyboardListener.vue'\nimport UxLayer from './UxLayer.vue'\n\nimport Spline from \"./overlays/Spline.vue\"\nimport Splines from \"./overlays/Splines.vue\"\nimport Range from \"./overlays/Range.vue\"\nimport Trades from \"./overlays/Trades.vue\"\nimport Channel from \"./overlays/Channel.vue\"\nimport Segment from \"./overlays/Segment.vue\"\nimport Candles from \"./overlays/Candles.vue\"\nimport Volume from \"./overlays/Volume.vue\"\nimport Splitters from \"./overlays/Splitters.vue\"\nimport LineTool from \"./overlays/LineTool.vue\"\nimport RangeTool from \"./overlays/RangeTool.vue\"\n\n\nexport default {\n    name: 'Grid',\n    props: [\n        'sub', 'layout', 'range', 'interval', 'cursor', 'colors', 'overlays',\n        'width', 'height', 'data', 'grid_id', 'y_transform', 'font', 'tv_id',\n        'config', 'meta', 'shaders'\n    ],\n    mixins: [Canvas, UxList],\n    components: { Crosshair, KeyboardListener },\n    created() {\n        // List of all possible overlays (builtin + custom)\n        this._list = [\n            Spline, Splines, Range, Trades, Channel, Segment,\n            Candles, Volume, Splitters, LineTool, RangeTool\n        ]\n        .concat(this.$props.overlays)\n        this._registry = {}\n\n        // We need to know which components we will use.\n        // Custom overlay components overwrite built-ins:\n        var tools = []\n        this._list.forEach((x, i) => {\n            let use_for = x.methods.use_for()\n            if (x.methods.tool) tools.push({\n                use_for, info: x.methods.tool()\n            })\n            use_for.forEach(indicator => {\n                this._registry[indicator] = i\n            })\n        })\n        this.$emit('custom-event', {\n            event: 'register-tools', args: tools\n        })\n        // Vue 3: Use an event bus or provide/inject for cross-component events.\n        // If this is only for parent-child, parent should listen with @custom-event.\n        // Remove this.$on usage for Vue 3 compatibility.\n    },\n    beforeDestroy () {\n        if (this.renderer) this.renderer.destroy()\n    },\n    mounted() {\n        const el = this.$refs['canvas']\n        this.renderer = new Grid(el, this)\n        this.setup()\n        this.$nextTick(() => this.redraw())\n\n    },\n    render() {\n        const id = this.$props.grid_id\n        const layout = this.$props.layout.grids[id]\n        return this.create_canvas(\n            `grid-${id}`,\n            {\n                position: {\n                    x: 0,\n                    y: layout.offset || 0\n                },\n                attrs: {\n                    width: layout.width,\n                    height: layout.height,\n                    overflow: 'hidden'\n                },\n                style: {\n                    backgroundColor: this.$props.colors.back\n                },\n                hs: []\n            }\n        )\n    },\n    methods: {\n        new_layer(layer) {\n            this.$nextTick(() => this.renderer.new_layer(layer))\n        },\n        del_layer(layer) {\n            this.$nextTick(() => this.renderer.del_layer(layer))\n            const grid_id = this.$props.grid_id\n            this.$emit('custom-event', {\n                event: 'remove-shaders',\n                args: [grid_id, layer]\n            })\n            // TODO: close all interfaces\n            this.$emit('custom-event', {\n                event: 'remove-layer-meta',\n                args: [grid_id, layer]\n            })\n            this.remove_all_ux(layer)\n        },\n        get_overlays(h) {\n            // Distributes overlay data & settings according\n            // to this._registry; returns compo list\n            let comp_list = [], count = {}\n\n            for (var d of this.$props.data) {\n                let comp = this._list[this._registry[d.type]]\n                if (comp) {\n                    if(comp.methods.calc) {\n                        comp = this.inject_renderer(comp)\n                    }\n                    comp_list.push({\n                        cls: comp,\n                        type: d.type,\n                        data: d.data,\n                        settings: d.settings,\n                        i0: d.i0,\n                        tf: d.tf,\n                        last: d.last\n                    })\n                    count[d.type] = 0\n                }\n            }\n            return comp_list.map((x, i) => h(x.cls, {\n                    on: this.layer_events,\n                    attrs: Object.assign(this.common_props(), {\n                        id: `${x.type}_${count[x.type]++}`,\n                        type: x.type,\n                        data: x.data,\n                        settings: x.settings,\n                        i0: x.i0,\n                        tf: x.tf,\n                        num: i,\n                        grid_id: this.$props.grid_id,\n                        meta: this.$props.meta,\n                        last: x.last\n                    })\n                })\n            )\n        },\n        common_props() {\n            return {\n                cursor: this.$props.cursor,\n                colors: this.$props.colors,\n                layout: this.$props.layout.grids[this.$props.grid_id],\n                interval: this.$props.interval,\n                sub: this.$props.sub,\n                font: this.$props.font,\n                config: this.$props.config,\n            }\n        },\n        emit_ux_event(e) {\n            let e_pass = this.on_ux_event(e, 'grid')\n            if (e_pass) this.$emit('custom-event', e)\n        },\n        // Replace the current comp with 'renderer'\n        inject_renderer(comp) {\n            let src = comp.methods.calc()\n            if (!src.conf || !src.conf.renderer || comp.__renderer__) {\n                return comp\n            }\n\n            // Search for an overlay with the target 'name'\n            let f = this._list.find(x => x.name === src.conf.renderer)\n            if (!f) return comp\n\n            comp.mixins.push(f)\n            comp.__renderer__ = src.conf.renderer\n\n            return comp\n        }\n    },\n    computed: {\n        is_active() {\n            return this.$props.cursor.t !== undefined &&\n            this.$props.cursor.grid_id === this.$props.grid_id\n        }\n    },\n    watch: {\n        range: {\n            handler: function() {\n                // TODO: Left-side render lag fix:\n                // Overlay data is updated one tick later than\n                // the main sub. Fast fix is to delay redraw()\n                // call. It will be a solution until a better\n                // one comes by.\n                this.$nextTick(() => this.redraw())\n            },\n            deep: true\n        },\n        cursor: {\n            handler: function() {\n                if (!this.$props.cursor.locked) this.redraw()\n            },\n            deep: true\n        },\n        overlays: {\n            // Track changes in calc() functions\n            handler: function(ovs) {\n                for (var ov of ovs) {\n                    for (var comp of this.$children) {\n                        if (typeof comp.id !== 'string') continue\n                        let tuple = comp.id.split('_')\n                        tuple.pop()\n                        if (tuple.join('_') === ov.name) {\n                            comp.calc = ov.methods.calc\n                            if (!comp.calc) continue\n                            let calc = comp.calc.toString()\n                            if (calc !== ov.__prevscript__) {\n                                comp.exec_script()\n                            }\n                            ov.__prevscript__ = calc\n                        }\n                    }\n                }\n            },\n            deep: true\n        },\n        // Redraw on the shader list change\n        shaders(n, p) { this.redraw() }\n    },\n    data() {\n        return {\n            layer_events: {\n                'new-grid-layer': this.new_layer,\n                'delete-grid-layer': this.del_layer,\n                'show-grid-layer': d => {\n                    this.renderer.show_hide_layer(d)\n                    this.redraw()\n                },\n                'redraw-grid': this.redraw,\n                'layer-meta-props': d => this.$emit('layer-meta-props', d),\n                'custom-event': d => this.$emit('custom-event', d)\n            },\n            keyboard_events: {\n                'register-kb-listener': event => {\n                    this.$emit('register-kb-listener', event)\n                },\n                'remove-kb-listener': event => {\n                    this.$emit('remove-kb-listener', event)\n                },\n                'keyup': event => {\n                    if (!this.is_active) return\n                    this.renderer.propagate('keyup', event)\n                },\n                'keydown': event => {\n                    if (!this.is_active) return // TODO: is this neeeded?\n                    this.renderer.propagate('keydown', event)\n                },\n                'keypress': event => {\n                    if (!this.is_active) return\n                    this.renderer.propagate('keypress', event)\n                },\n            }\n        }\n    }\n}\n\n</script>\n","import script from \"./Grid.vue?vue&type=script&lang=js\"\nexport * from \"./Grid.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import * as Hammer from 'hammerjs'\nimport Utils from '../../stuff/utils.js'\nimport math from '../../stuff/math.js'\n\nvar PANHEIGHT\n\nexport default class Sidebar {\n\n    constructor(canvas, comp, side = 'right') {\n\n        PANHEIGHT = comp.config.PANHEIGHT\n\n        this.canvas = canvas\n        this.ctx = canvas.getContext('2d')\n        this.comp = comp\n        this.$p = comp.$props\n        this.data = this.$p.sub\n        this.range = this.$p.range\n        this.id = this.$p.grid_id\n        this.layout = this.$p.layout.grids[this.id]\n\n        this.side = side\n        this.listeners()\n\n    }\n\n    listeners() {\n        let mc = this.mc = new Hammer.Manager(this.canvas)\n        mc.add(new Hammer.Pan({\n            direction: Hammer.DIRECTION_VERTICAL,\n            threshold: 0\n        }))\n\n        mc.add( new Hammer.Tap({\n            event: 'doubletap',\n            taps: 2,\n            posThreshold: 50\n        }))\n\n        mc.on('panstart', event => {\n            if (this.$p.y_transform) {\n                this.zoom = this.$p.y_transform.zoom\n            } else {\n                this.zoom = 1.0\n            }\n            this.y_range = [\n                this.layout.$_hi,\n                this.layout.$_lo\n            ]\n            this.drug = {\n                y: event.center.y,\n                z: this.zoom,\n                mid: math.log_mid(this.y_range, this.layout.height),\n                A: this.layout.A,\n                B: this.layout.B\n            }\n        })\n\n        mc.on('panmove', event => {\n            if (this.drug) {\n                this.zoom = this.calc_zoom(event)\n                this.comp.$emit('sidebar-transform', {\n                    grid_id: this.id,\n                    zoom: this.zoom,\n                    auto: false,\n                    range: this.calc_range(),\n                    drugging: true\n                })\n                this.update()\n            }\n        })\n\n        mc.on('panend', () => {\n            this.drug = null\n            this.comp.$emit('sidebar-transform', {\n                grid_id: this.id,\n                drugging: false\n            })\n        })\n\n        mc.on('doubletap', () => {\n            this.comp.$emit('sidebar-transform', {\n                grid_id: this.id,\n                zoom: 1.0,\n                auto: true\n            })\n            this.zoom = 1.0\n            this.update()\n        })\n\n        // TODO: Do later for mobile version\n\n    }\n\n    update() {\n\n        // Update reference to the grid\n        this.layout = this.$p.layout.grids[this.id]\n\n        var points = this.layout.ys\n        var x, y, w, h, side = this.side\n        var sb = this.layout.sb\n\n        //this.ctx.fillStyle = this.$p.colors.back\n        this.ctx.font = this.$p.font\n\n        switch(side) {\n            case 'left':\n                x = 0\n                y = 0\n                w = Math.floor(sb)\n                h = this.layout.height\n\n                //this.ctx.fillRect(x, y, w, h)\n                this.ctx.clearRect(x, y, w, h)\n\n                this.ctx.strokeStyle = this.$p.colors.scale\n\n                this.ctx.beginPath()\n                this.ctx.moveTo(x + 0.5, 0)\n                this.ctx.lineTo(x + 0.5, h)\n                this.ctx.stroke()\n\n                break\n            case 'right':\n                x = 0\n                y = 0\n                w = Math.floor(sb)\n                h = this.layout.height\n                //this.ctx.fillRect(x, y, w, h)\n                this.ctx.clearRect(x, y, w, h)\n\n                this.ctx.strokeStyle = this.$p.colors.scale\n\n                this.ctx.beginPath()\n                this.ctx.moveTo(x + 0.5, 0)\n                this.ctx.lineTo(x + 0.5, h)\n                this.ctx.stroke()\n                break\n        }\n\n        this.ctx.fillStyle = this.$p.colors.text\n        this.ctx.beginPath()\n\n        for (var p of points) {\n\n            if (p[0] > this.layout.height) continue\n\n            var x1 = side === 'left' ? w - 0.5 : x - 0.5\n            var x2 = side === 'left' ? x1 - 4.5 : x1 + 4.5\n\n            this.ctx.moveTo(x1, p[0] - 0.5)\n            this.ctx.lineTo(x2, p[0] - 0.5)\n\n            var offst = side === 'left' ? - 10 : 10\n            this.ctx.textAlign = side === 'left' ? 'end' : 'start'\n            let d = this.layout.prec\n            this.ctx.fillText(p[1].toFixed(d), x1 + offst, p[0] + 4)\n        }\n\n        this.ctx.stroke()\n\n        if (this.$p.grid_id) this.upper_border()\n\n        this.apply_shaders()\n\n        if (this.$p.cursor.y && this.$p.cursor.y$) this.panel()\n\n    }\n\n    apply_shaders() {\n        let layout = this.$p.layout.grids[this.id]\n        let props = {\n            layout: layout,\n            cursor: this.$p.cursor\n        }\n        for (var s of this.$p.shaders) {\n            this.ctx.save()\n            s.draw(this.ctx, props)\n            this.ctx.restore()\n        }\n    }\n\n    upper_border() {\n        this.ctx.strokeStyle = this.$p.colors.scale\n        this.ctx.beginPath()\n        this.ctx.moveTo(0, 0.5)\n        this.ctx.lineTo(this.layout.width, 0.5)\n        this.ctx.stroke()\n    }\n\n    // A gray bar behind the current price\n    panel() {\n\n        if (this.$p.cursor.grid_id !== this.layout.id) {\n            return\n        }\n\n        let lbl = this.$p.cursor.y$.toFixed(this.layout.prec)\n        this.ctx.fillStyle = this.$p.colors.panel\n\n        let panwidth = this.layout.sb + 1\n\n        let x = - 0.5\n        let y = this.$p.cursor.y - PANHEIGHT * 0.5 - 0.5\n        let a = 7\n        this.ctx.fillRect(x - 0.5, y, panwidth, PANHEIGHT)\n        this.ctx.fillStyle = this.$p.colors.textHL\n        this.ctx.textAlign = 'left'\n        this.ctx.fillText(lbl, a, y + 15)\n\n    }\n\n    calc_zoom(event) {\n        let d = this.drug.y - event.center.y\n        let speed = d > 0 ? 3 : 1\n        let k = 1 + speed * d / this.layout.height\n        return Utils.clamp(this.drug.z * k, 0.005, 100)\n    }\n\n    // Not the best place to calculate y-range but\n    // this is the simplest solution I found up to\n    // date\n    calc_range(diff1 = 1, diff2 = 1) {\n\n        let z = this.zoom / this.drug.z\n        let zk = (1 / z - 1) / 2\n\n        let range = this.y_range.slice()\n        let delta = range[0] - range[1]\n\n        if (!this.layout.grid.logScale) {\n            range[0] = range[0] + delta * zk * diff1\n            range[1] = range[1] - delta * zk * diff2\n        } else {\n\n            let px_mid = this.layout.height / 2\n            let new_hi = px_mid - px_mid * (1/z)\n            let new_lo = px_mid + px_mid * (1/z)\n\n            // Use old mapping to get a new range\n            let f = y => math.exp((y - this.drug.B) / this.drug.A)\n\n            let copy = range.slice()\n            range[0] = f(new_hi)\n            range[1] = f(new_lo)\n\n        }\n\n        return range\n    }\n\n    rezoom_range(delta, diff1, diff2) {\n\n        if (!this.$p.y_transform || this.$p.y_transform.auto) return\n\n        this.zoom = 1.0\n        // TODO: further work (improve scaling ratio)\n        if (delta < 0) delta /= 3.75  // Btw, idk why 3.75, but it works\n        delta *= 0.25\n        this.y_range = [\n            this.layout.$_hi,\n            this.layout.$_lo\n        ]\n        this.drug = {\n            y: 0,\n            z: this.zoom,\n            mid: math.log_mid(this.y_range, this.layout.height),\n            A: this.layout.A,\n            B: this.layout.B\n        }\n        this.zoom = this.calc_zoom({\n            center: {\n                y: delta * this.layout.height\n            }\n        })\n\n        this.comp.$emit('sidebar-transform', {\n            grid_id: this.id,\n            zoom: this.zoom,\n            auto: false,\n            range: this.calc_range(diff1, diff2),\n            drugging: true\n        })\n        this.drug = null\n        this.comp.$emit('sidebar-transform', {\n            grid_id: this.id,\n            drugging: false\n        })\n    }\n\n    destroy() {\n        if (this.mc) this.mc.destroy()\n    }\n\n    mousemove() { }\n    mouseout() { }\n    mouseup() { }\n    mousedown() { }\n\n}\n","<script>\n// The side bar (yep, that thing with a bunch of $$$)\n\n\nimport { h } from 'vue'\nimport Sidebar from './js/sidebar.js'\nimport Canvas from '../mixins/canvas.js'\n\nexport default {\n    name: 'Sidebar',\n    props: [\n        'sub', 'layout', 'range', 'interval', 'cursor', 'colors', 'font',\n        'width', 'height', 'grid_id', 'rerender', 'y_transform', 'tv_id',\n        'config', 'shaders'\n    ],\n    mixins: [Canvas],\n    mounted() {\n        const el = this.$refs['canvas']\n        this.renderer = new Sidebar(el, this)\n        this.setup()\n        this.redraw()\n    },\n    render() {\n        const id = this.$props.grid_id\n        const layout = this.$props.layout.grids[id]\n        return this.create_canvas(`sidebar-${id}`, {\n            position: {\n                x: layout.width,\n                y: layout.offset || 0\n            },\n            attrs: {\n                rerender: this.$props.rerender,\n                width: this.$props.width,\n                height: layout.height,\n            },\n            style: {\n                backgroundColor: this.$props.colors.back\n            },\n        })\n    },\n    watch: {\n        range: {\n            handler: function() { this.redraw() },\n            deep: true\n        },\n        cursor: {\n            handler: function() { this.redraw() },\n            deep: true\n        },\n        rerender() {\n            this.$nextTick(() => this.redraw())\n        }\n    },\n    beforeDestroy () {\n        if(this.renderer) this.renderer.destroy()\n    }\n}\n\n</script>\n","import script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<div class=\"trading-vue-legend\"\n     v-bind:style=\"calc_style\">\n    <div v-if=\"grid_id === 0\"\n         class=\"trading-vue-ohlcv\"\n        :style = \"{ 'max-width': common.width + 'px' }\">\n        <span class=\"t-vue-title\"\n             :style=\"{ color: common.colors.title }\">\n              {{common.title_txt}}\n        </span>\n        <span v-if=\"show_values\">\n            O<span class=\"t-vue-lspan\" >{{ohlcv[0]}}</span>\n            H<span class=\"t-vue-lspan\" >{{ohlcv[1]}}</span>\n            L<span class=\"t-vue-lspan\" >{{ohlcv[2]}}</span>\n            C<span class=\"t-vue-lspan\" >{{ohlcv[3]}}</span>\n            V<span class=\"t-vue-lspan\" >{{ohlcv[4]}}</span>\n        </span>\n        <span v-if=\"!show_values\" class=\"t-vue-lspan\"\n            :style=\"{color: common.colors.text}\">\n            {{(common.meta.last || [])[4]}}\n        </span>\n    </div>\n    <div class=\"t-vue-ind\" v-for=\"ind in this.indicators\">\n        <span class=\"t-vue-iname\">{{ind.name}}</span>\n        <button-group\n            v-bind:buttons=\"common.buttons\"\n            v-bind:config=\"common.config\"\n            v-bind:ov_id=\"ind.id\"\n            v-bind:grid_id=\"grid_id\"\n            v-bind:index=\"ind.index\"\n            v-bind:tv_id=\"common.tv_id\"\n            v-bind:display=\"ind.v\"\n            v-on:legend-button-click=\"button_click\">\n        </button-group>\n        <span class=\"t-vue-ivalues\" v-if=\"ind.v\">\n            <span class=\"t-vue-lspan t-vue-ivalue\"\n                v-if=\"show_values\"\n                v-for=\"v in ind.values\" :style=\"{ color: v.color }\">\n                {{v.value}}\n            </span>\n        </span>\n        <span v-if=\"ind.unk\" class=\"t-vue-unknown\">\n            (Unknown type)\n        </span>\n        <transition name=\"tvjs-appear\">\n            <spinner :colors=\"common.colors\" v-if=\"ind.loading\">\n            </spinner>\n        </transition>\n    </div>\n</div>\n</template>\n<script>\n\nimport ButtonGroup from './ButtonGroup.vue'\nimport Spinner from './Spinner.vue'\n\nexport default {\n    name: 'ChartLegend',\n    props: [\n        'common', 'values', 'grid_id', 'meta_props'\n    ],\n    components: { ButtonGroup, Spinner },\n    computed: {\n        ohlcv() {\n            if (!this.$props.values || !this.$props.values.ohlcv) {\n                return Array(6).fill('n/a')\n            }\n            const prec = this.layout.prec\n\n            // TODO: main the main legend more customizable\n            let id = this.main_type + '_0'\n            let meta = this.$props.meta_props[id] || {}\n            if (meta.legend) {\n                return (meta.legend() || []).map(x => x.value)\n            }\n\n            return [\n                this.$props.values.ohlcv[1].toFixed(prec),\n                this.$props.values.ohlcv[2].toFixed(prec),\n                this.$props.values.ohlcv[3].toFixed(prec),\n                this.$props.values.ohlcv[4].toFixed(prec),\n                this.$props.values.ohlcv[5] ?\n                    this.$props.values.ohlcv[5].toFixed(2):\n                    'n/a'\n            ]\n        },\n        // TODO: add support for { grid: { id : N }}\n        indicators() {\n            const values = this.$props.values\n            const f = this.format\n            var types = {}\n\n            return this.json_data.filter(\n                x => x.settings.legend !== false && !x.main\n            ).map(x => {\n                if (!(x.type in types)) types[x.type] = 0\n                const id = x.type + `_${types[x.type]++}`\n                return {\n                    v: 'display' in x.settings ? x.settings.display : true,\n                    name: x.name || id,\n                    index: (this.off_data || this.json_data).indexOf(x),\n                    id: id,\n                    values: values ? f(id, values) : this.n_a(1),\n                    unk: !(id in (this.$props.meta_props || {})),\n                    loading: x.loading\n                }\n            })\n        },\n        calc_style() {\n            let top = this.layout.height > 150 ? 10 : 5\n            let grids = this.$props.common.layout.grids\n            let w = grids[0] ? grids[0].width : undefined\n            return {\n                top: `${this.layout.offset + top}px`,\n                width: `${w-20}px`\n            }\n        },\n        layout() {\n            const id = this.$props.grid_id\n            return this.$props.common.layout.grids[id]\n        },\n        json_data() {\n            return this.$props.common.data\n        },\n        off_data() {\n            return this.$props.common.offchart\n        },\n        main_type() {\n            let f = this.common.data.find(x => x.main)\n            return f ? f.type : undefined\n        },\n        show_values() {\n            return this.common.cursor.mode !== 'explore'\n        }\n    },\n    methods: {\n        format(id, values) {\n            let meta = this.$props.meta_props[id] || {}\n            // Matches Overlay.data_colors with the data values\n            // (see Spline.vue)\n            if (!values[id]) return this.n_a(1)\n\n            // Custom formatter\n            if (meta.legend) return meta.legend(values[id])\n\n            return values[id].slice(1).map((x, i) => {\n                const cs = meta.data_colors ? meta.data_colors() : []\n                if (typeof x == 'number') {\n                    // Show 8 digits for small values\n                    x = x.toFixed(Math.abs(x) > 0.001 ? 4 : 8)\n                }\n                return {\n                    value: x,\n                    color: cs ? cs[i % cs.length] : undefined\n                }\n            })\n        },\n        n_a(len) {\n            return Array(len).fill({ value: 'n/a' })\n        },\n        button_click(event) {\n            this.$emit('legend-button-click', event)\n        }\n    }\n}\n</script>\n<style>\n.trading-vue-legend {\n    position: relative;\n    z-index: 100;\n    font-size: 1.25em;\n    margin-left: 10px;\n    pointer-events: none;\n    text-align: left;\n    user-select: none;\n    font-weight: 300;\n}\n@media (min-resolution: 2x) {\n    .trading-vue-legend {\n        font-weight: 400;\n    }\n}\n.trading-vue-ohlcv {\n    pointer-events: none;\n    margin-bottom: 0.5em;\n}\n.t-vue-lspan {\n    font-variant-numeric: tabular-nums;\n    font-size: 0.95em;\n    color: #999999; /* TODO: move => params */\n    margin-left: 0.1em;\n    margin-right: 0.2em;\n}\n.t-vue-title {\n    margin-right: 0.25em;\n    font-size: 1.45em;\n}\n.t-vue-ind {\n    margin-left: 0.2em;\n    margin-bottom: 0.5em;\n    font-size: 1.0em;\n    margin-top: 0.3em;\n}\n.t-vue-ivalue {\n    margin-left: 0.5em;\n}\n.t-vue-unknown {\n    color: #999999; /* TODO: move => params */\n}\n\n.tvjs-appear-enter-active,\n.tvjs-appear-leave-active\n{\n    transition: all .25s ease;\n}\n\n.tvjs-appear-enter, .tvjs-appear-leave-to\n{\n    opacity: 0;\n}\n</style>\n","<template>\n<span class=\"t-vue-lbtn-grp\">\n    <legend-button\n        v-for=\"(b, i) in buttons\" :key=\"i\"\n        :id=\"b.name || b\"\n        :tv_id=\"tv_id\"\n        :ov_id=\"ov_id\"\n        :grid_id=\"grid_id\"\n        :index=\"index\"\n        :display=\"display\"\n        :icon=\"b.icon\"\n        :config=\"config\"\n        v-on:legend-button-click=\"button_click\"\n    >\n    </legend-button>\n</span>\n</template>\n<script>\n\nimport LegendButton from './LegendButton.vue'\n\nexport default {\n    name: 'ButtonGroup',\n    props: [\n        'buttons', 'tv_id', 'ov_id', 'grid_id', 'index',\n        'display', 'config'\n    ],\n    components: {\n        LegendButton\n    },\n    methods: {\n        button_click(event) {\n            this.$emit('legend-button-click', event)\n        }\n    }\n}\n</script>\n<style>\n.t-vue-lbtn-grp {\n    margin-left: 0.5em;\n}\n</style>\n","<template>\n    <img class=\"t-vue-lbtn\" :src=\"base64\"\n        :id=\"uuid\" :style=\"{\n            width: config.L_BTN_SIZE + 'px',\n            height: config.L_BTN_SIZE + 'px',\n            margin: config.L_BTN_MARGIN\n        }\"\n        @click=\"onclick\">\n</template>\n<script>\n\nimport Icons from '../stuff/icons.json'\n\nexport default {\n    name: 'LegendButton',\n    props: ['id', 'tv_id', 'grid_id', 'ov_id', 'index', 'display',\n            'icon', 'config'],\n    mounted() {\n    },\n    computed: {\n        base64() {\n            return this.icon || Icons[this.file_name]\n        },\n        file_name() {\n            let id = this.$props.id\n            if (this.$props.id === 'display') {\n                id = this.$props.display ? 'display_on' : 'display_off'\n            }\n            return id + '.png'\n        },\n        uuid() {\n            let tv = this.$props.tv_id\n            let gr = this.$props.grid_id\n            let ov = this.$props.ov_id\n            return `${tv}-btn-g${gr}-${ov}`\n        },\n        data_type() {\n            return this.$props.grid_id === 0 ?\n                \"onchart\" : \"offchart\"\n        },\n        data_index() {\n            return this.$props.index\n        }\n    },\n    methods: {\n        onclick() {\n            this.$emit('legend-button-click', {\n                button: this.$props.id,\n                type: this.data_type,\n                dataIndex: this.data_index,\n                grid: this.$props.grid_id,\n                overlay: this.$props.ov_id,\n            })\n        }\n    }\n}\n</script>\n<style>\n.t-vue-lbtn {\n    z-index: 100;\n    pointer-events: all;\n    cursor: pointer;\n}\n</style>\n","import { render } from \"./LegendButton.vue?vue&type=template&id=7271720b\"\nimport script from \"./LegendButton.vue?vue&type=script&lang=js\"\nexport * from \"./LegendButton.vue?vue&type=script&lang=js\"\n\nimport \"./LegendButton.vue?vue&type=style&index=0&id=7271720b&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ButtonGroup.vue?vue&type=template&id=aee8964e\"\nimport script from \"./ButtonGroup.vue?vue&type=script&lang=js\"\nexport * from \"./ButtonGroup.vue?vue&type=script&lang=js\"\n\nimport \"./ButtonGroup.vue?vue&type=style&index=0&id=aee8964e&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n<div class=\"tvjs-spinner\">\n    <div v-for=\"i in 4\" :key=\"i\" :style=\"{background: colors.text}\">\n    </div>\n</div>\n</template>\n<script>\nexport default {\n    name: 'Spinner',\n    props: ['colors']\n}\n</script>\n<style>\n.tvjs-spinner {\n    display: inline-block;\n    position: relative;\n    width: 20px;\n    height: 16px;\n    margin: -4px 0px -1px 0px;\n    opacity: 0.7;\n}\n\n.tvjs-spinner div {\n    position: absolute;\n    top: 8px;\n    width: 4px;\n    height: 4px;\n    border-radius: 50%;\n    animation-timing-function: cubic-bezier(1, 1, 1, 1);\n}\n\n.tvjs-spinner div:nth-child(1) {\n    left: 2px;\n    animation: tvjs-spinner1 0.6s infinite;\n    opacity: 0.9;\n}\n\n.tvjs-spinner div:nth-child(2) {\n    left: 2px;\n    animation: tvjs-spinner2 0.6s infinite;\n}\n\n.tvjs-spinner div:nth-child(3) {\n    left: 9px;\n    animation: tvjs-spinner2 0.6s infinite;\n}\n\n.tvjs-spinner div:nth-child(4) {\n    left: 16px;\n    animation: tvjs-spinner3 0.6s infinite;\n    opacity: 0.9;\n}\n\n@keyframes tvjs-spinner1 {\n    0% {\n        transform: scale(0);\n    }\n\n    100% {\n        transform: scale(1);\n    }\n}\n\n@keyframes tvjs-spinner3 {\n    0% {\n        transform: scale(1);\n    }\n\n    100% {\n        transform: scale(0);\n    }\n}\n\n@keyframes tvjs-spinner2 {\n    0% {\n        transform: translate(0, 0);\n    }\n\n    100% {\n        transform: translate(7px, 0);\n    }\n}\n</style>\n","import { render } from \"./Spinner.vue?vue&type=template&id=a6fff878\"\nimport script from \"./Spinner.vue?vue&type=script&lang=js\"\nexport * from \"./Spinner.vue?vue&type=script&lang=js\"\n\nimport \"./Spinner.vue?vue&type=style&index=0&id=a6fff878&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Legend.vue?vue&type=template&id=21bda2b3\"\nimport script from \"./Legend.vue?vue&type=script&lang=js\"\nexport * from \"./Legend.vue?vue&type=script&lang=js\"\n\nimport \"./Legend.vue?vue&type=style&index=0&id=21bda2b3&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n// Parser for shader events\n\nexport default {\n    methods: {\n        // Init shaders from extensions\n        init_shaders(skin, prev) {\n            if (skin !== prev) {\n                if (prev) this.shaders = this.shaders.filter(\n                    x => x.owner !== prev.id\n                )\n                for (var Shader of skin.shaders) {\n                    let shader = new Shader()\n                    shader.owner = skin.id\n                    this.shaders.push(shader)\n                }\n                // TODO: Sort by zIndex\n            }\n        },\n        on_shader_event(d, target) {\n            if (d.event === 'new-shader') {\n                if (d.args[0].target === target) {\n                    d.args[0].id = `${d.args[1]}-${d.args[2]}`\n                    this.shaders.push(d.args[0])\n                    this.rerender++\n                }\n            }\n            if (d.event === 'remove-shaders') {\n                let id = d.args.join('-')\n                this.shaders = this.shaders\n                    .filter(x => x.id !== id)\n            }\n        }\n    },\n    watch: {\n        skin(n, p) {\n            this.init_shaders(n, p)\n        }\n    },\n    data() { return { shaders: [] } }\n}\n","import { render } from \"./Section.vue?vue&type=template&id=6a086200\"\nimport script from \"./Section.vue?vue&type=script&lang=js\"\nexport * from \"./Section.vue?vue&type=script&lang=js\"\n\nimport \"./Section.vue?vue&type=style&index=0&id=6a086200&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport Const from '../../stuff/constants.js'\nimport Utils from '../../stuff/utils.js'\n\nconst { MINUTE15, MINUTE, HOUR, DAY, WEEK, MONTH, YEAR, MONTHMAP } = Const\n\nexport default class Botbar {\n\n    constructor(canvas, comp) {\n\n        this.canvas = canvas\n        this.ctx = canvas.getContext('2d')\n        this.comp = comp\n        this.$p = comp.$props\n        this.data = this.$p.sub\n        this.range = this.$p.range\n        this.layout = this.$p.layout\n\n    }\n\n    update() {\n\n        this.grid_0 = this.layout.grids[0]\n\n        const width = this.layout.botbar.width\n        const height = this.layout.botbar.height\n\n        const sb = this.layout.grids[0].sb\n\n        //this.ctx.fillStyle = this.$p.colors.back\n        this.ctx.font = this.$p.font\n        //this.ctx.fillRect(0, 0, width, height)\n        this.ctx.clearRect(0, 0, width, height)\n\n        this.ctx.strokeStyle = this.$p.colors.scale\n\n        this.ctx.beginPath()\n        this.ctx.moveTo(0, 0.5)\n        this.ctx.lineTo(Math.floor(width + 1), 0.5)\n        this.ctx.stroke()\n\n        this.ctx.fillStyle = this.$p.colors.text\n        this.ctx.beginPath()\n\n        for (var p of this.layout.botbar.xs) {\n\n            let lbl = this.format_date(p)\n\n            if (p[0] > width - sb) continue\n\n            this.ctx.moveTo(p[0] - 0.5, 0)\n            this.ctx.lineTo(p[0] - 0.5, 4.5)\n\n            if (!this.lbl_highlight(p[1][0])) {\n                this.ctx.globalAlpha = 0.85\n            }\n            this.ctx.textAlign = 'center'\n            this.ctx.fillText(lbl, p[0], 18)\n            this.ctx.globalAlpha = 1\n\n        }\n\n        this.ctx.stroke()\n        this.apply_shaders()\n        if (this.$p.cursor.x && this.$p.cursor.t !== undefined)\n            this.panel()\n\n    }\n\n    apply_shaders() {\n        let layout = this.layout.grids[0]\n        let props = {\n            layout: layout,\n            cursor: this.$p.cursor\n        }\n        for (var s of this.comp.bot_shaders) {\n            this.ctx.save()\n            s.draw(this.ctx, props)\n            this.ctx.restore()\n        }\n    }\n\n    panel() {\n\n        let lbl = this.format_cursor_x()\n        this.ctx.fillStyle = this.$p.colors.panel\n\n        let measure = this.ctx.measureText(lbl + '    ')\n        let panwidth = Math.floor(measure.width)\n        let cursor = this.$p.cursor.x\n        let x = Math.floor(cursor - panwidth * 0.5)\n        let y = - 0.5\n        let panheight = this.comp.config.PANHEIGHT\n        this.ctx.fillRect(x, y, panwidth, panheight + 0.5)\n\n        this.ctx.fillStyle = this.$p.colors.textHL\n        this.ctx.textAlign = 'center'\n        this.ctx.fillText(lbl, cursor, y + 16)\n\n    }\n\n    format_date(p) {\n        let t = p[1][0]\n        t = this.grid_0.ti_map.i2t(t)\n        let ti = this.$p.layout.grids[0].ti_map.tf\n        // Enable timezones only for tf < 1D\n        let k = ti < DAY ? 1 : 0\n        let tZ = t + k * this.$p.timezone * HOUR\n\n        //t += new Date(t).getTimezoneOffset() * MINUTE\n        let d = new Date(tZ)\n\n        if (p[2] === YEAR || Utils.year_start(t) === t) {\n            return d.getUTCFullYear()\n        }\n        if (p[2] === MONTH || Utils.month_start(t) === t) {\n            return MONTHMAP[d.getUTCMonth()]\n        }\n        // TODO(*) see grid_maker.js\n        if (Utils.day_start(tZ) === tZ) return d.getUTCDate()\n\n        let h = Utils.add_zero(d.getUTCHours())\n        let m = Utils.add_zero(d.getUTCMinutes())\n        return h + \":\" + m\n\n    }\n\n    format_cursor_x() {\n\n        let t = this.$p.cursor.t\n        t = this.grid_0.ti_map.i2t(t)\n        //let ti = this.$p.interval\n        let ti = this.$p.layout.grids[0].ti_map.tf\n        // Enable timezones only for tf < 1D\n        let k = ti < DAY ? 1 : 0\n\n        //t += new Date(t).getTimezoneOffset() * MINUTE\n        let d = new Date(t + k * this.$p.timezone * HOUR)\n\n        if (ti === YEAR) {\n            return d.getUTCFullYear()\n        }\n\n        if (ti < YEAR) {\n            var yr = '`' + `${d.getUTCFullYear()}`.slice(-2)\n            var mo = MONTHMAP[d.getUTCMonth()]\n            var dd = '01'\n        }\n        if (ti <= WEEK) dd = d.getUTCDate()\n        let date = `${dd} ${mo} ${yr}`\n        let time = ''\n\n        if (ti < DAY) {\n            let h = Utils.add_zero(d.getUTCHours())\n            let m = Utils.add_zero(d.getUTCMinutes())\n            time = h + \":\" + m\n        }\n\n        return `${date}  ${time}`\n\n    }\n\n    // Highlights the begining of a time interval\n    // TODO: improve. Problem: let's say we have a new month,\n    // but if there is no grid line in place, there\n    // will be no month name on t-axis. Sad.\n    // Solution: manipulate the grid, skew it, you know\n    lbl_highlight(t) {\n\n        let ti = this.$p.interval\n\n        if (t === 0) return true\n        if (Utils.month_start(t) === t) return true\n        if (Utils.day_start(t) === t) return true\n        if (ti <= MINUTE15 && t % HOUR === 0) return true\n\n        return false\n\n    }\n\n    mousemove() { }\n    mouseout() { }\n    mouseup() { }\n    mousedown() { }\n\n}\n","<script>\n// The bottom bar (yep, that thing with a bunch of dates)\n\nimport Botbar from './js/botbar.js'\nimport Canvas from '../mixins/canvas.js'\n\nexport default {\n    name: 'Botbar',\n    props: [\n        'sub', 'layout', 'range', 'interval', 'cursor', 'colors', 'font',\n        'width', 'height', 'rerender', 'tv_id', 'config', 'shaders',\n        'timezone'\n    ],\n    mixins: [Canvas],\n    mounted() {\n        const el = this.$refs['canvas']\n        this.renderer = new Botbar(el, this)\n        this.setup()\n        this.redraw()\n    },\n    render(h) {\n        const sett = this.$props.layout.botbar\n        return this.create_canvas('botbar', {\n            position: {\n                x: 0,\n                y: sett.offset || 0\n            },\n            attrs: {\n                rerender: this.$props.rerender,\n                width: sett.width,\n                height: sett.height,\n            },\n            style: {\n                backgroundColor: this.$props.colors.back\n            },\n        })\n    },\n    computed: {\n        bot_shaders() {\n            return this.$props.shaders\n                .filter(x => x.target === 'botbar')\n        }\n    },\n    watch: {\n        range: {\n            handler: function() { this.redraw() },\n            deep: true\n        },\n        cursor: {\n            handler: function() { this.redraw() },\n            deep: true\n        },\n        rerender() {\n            this.$nextTick(() => this.redraw())\n        }\n    }\n}\n\n</script>\n<style>\n.trading-vue-botbar {\n    position: relative !important;\n}\n</style>\n","import script from \"./Botbar.vue?vue&type=script&lang=js\"\nexport * from \"./Botbar.vue?vue&type=script&lang=js\"\n\nimport \"./Botbar.vue?vue&type=style&index=0&id=2684b85a&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","\n<!-- Listens to native keyboard events,\n     propagates to all KeyboardListeners -->\n\n<script>\n\nexport default {\n    name: 'Keyboard',\n    created: function () {\n        window.addEventListener('keydown', this.keydown)\n        window.addEventListener('keyup', this.keyup)\n        window.addEventListener('keypress', this.keypress)\n        this._listeners = {}\n    },\n    beforeDestroy: function () {\n        window.removeEventListener('keydown', this.keydown)\n        window.removeEventListener('keyup', this.keyup)\n        window.removeEventListener('keypress', this.keypress)\n    },\n    render() { return null },\n    methods: {\n        keydown (event) {\n            for (var id in this._listeners) {\n                let l = this._listeners[id]\n                if (l && l.keydown) {\n                    l.keydown(event)\n                } else {\n                    console.warn(`No 'keydown' listener for ${id}`)\n                }\n            }\n        },\n        keyup (event) {\n            for (var id in this._listeners) {\n                let l = this._listeners[id]\n                if (l && l.keyup) {\n                    l.keyup(event)\n                } else {\n                    console.warn(`No 'keyup' listener for ${id}`)\n                }\n            }\n        },\n        keypress (event) {\n            for (var id in this._listeners) {\n                let l = this._listeners[id]\n                if (l && l.keypress) {\n                    l.keypress(event)\n                } else {\n                    console.warn(`No 'keypress' listener for ${id}`)\n                }\n            }\n        },\n        register(listener) {\n            this._listeners[listener.id] = listener\n        },\n        remove(listener) {\n            delete this._listeners[listener.id]\n        },\n    }\n}\n\n</script>\n","import script from \"./Keyboard.vue?vue&type=script&lang=js\"\nexport * from \"./Keyboard.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Data tracker/watcher\n\nimport Utils from '../stuff/utils.js'\n\nexport default {\n    methods: {\n        data_changed() {\n            let n = this.ohlcv\n            let changed = false\n            if (this._data_n0 !== n[0] && this._data_len !== n.length) {\n                changed = true\n            }\n            this.check_all_data(changed)\n            if (this.ti_map.ib) {\n                this.reindex_delta(n[0], this._data_n0)\n            }\n            this._data_n0 = n[0]\n            this._data_len = n.length\n            this.save_data_t()\n            return changed\n        },\n        check_all_data(changed) {\n            // If length of data in the Structure changed by > 1 point\n            // emit a special event for DC to recalc the scripts\n            // TODO: check overlays data too\n            let len = this._data_len || 0\n            if (Math.abs(this.ohlcv.length - len) > 1 ||\n                this._data_n0 !== this.ohlcv[0]) {\n                this.$emit('custom-event', {\n                    event: 'data-len-changed',\n                    args: []\n                })\n            }\n\n        },\n        reindex_delta(n, p) {\n            n = n || [[0]]\n            p = p || [[0]]\n            let dt = n[0] - p[0]\n            if (dt !== 0 && this._data_t) {\n                // Convert t back to index\n                try {\n                    // More precise method first\n                    let nt = this._data_t + 0.01 // fix for the filter lib\n                    let res = Utils.fast_nearest(this.ohlcv, nt)\n                    let cndl = this.ohlcv[res[0]]\n                    var off = (nt - cndl[0]) / this.interval_ms\n                    this.goto(res[0] + off)\n                } catch(e) {\n                    this.goto(this.ti_map.t2i(this._data_t))\n                }\n            }\n        },\n        save_data_t() {\n            this._data_t = this.ti_map.i2t(this.range[1]) // save as t\n        }\n    },\n    data() {\n        return {\n            _data_n0: null,\n            _data_len: 0,\n            _data_t: 0\n        }\n    }\n}\n","// Time-index mapping (for non-linear t-axis)\n\nimport Utils from '../../stuff/utils.js'\n\nconst MAX_ARR = Math.pow(2, 32)\n\n// 3 MODES of index calculation for overlays/subcharts:\n// ::: indexSrc :::\n// * \"map\"      -> use TI mapping functions to detect index\n//                 (slowest, for stocks only. DEFAULT)\n//\n// * \"calc\"     -> calculate shift between sub & data\n//                 (faster, but overlay data should be perfectly\n//                  align with the main chart,\n//                  1-1 candle/data point. Supports Renko)\n//\n// * \"data\"     -> overlay data should come with candle index\n//                 (fastest, supports Renko)\n\nexport default class TI {\n\n    constructor() {\n\n        this.ib = false\n    }\n\n    init(params, res) {\n        let {\n            sub, interval, meta, $props:$p, interval_ms, sub_start, ib\n        } = params\n\n        this.ti_map = []\n        this.it_map = []\n        this.sub_i = []\n        this.ib = ib\n        this.sub = res\n        this.ss = sub_start\n        this.tf = interval_ms\n        let start = meta.sub_start\n\n        // Skip mapping for the regular mode\n        if (this.ib) {\n            this.map_sub(res)\n        }\n    }\n\n    // Make maps for the main subset\n    map_sub(res) {\n\n        for (var i = 0; i < res.length; i++) {\n            let t = res[i][0]\n            let _i = (this.ss + i)\n            this.ti_map[t] = _i\n            this.it_map[_i] = t\n\n            // Overwrite t with i\n            let copy = [...res[i]]\n            copy[0] = _i\n            this.sub_i.push(copy)\n\n        }\n\n    }\n\n    // Map overlay data\n    // TODO: parse() called 3 times instead of 2 for 'spx_sample.json'\n    parse(data, mode) {\n\n        if (!this.ib || !this.sub[0] || mode === 'data') return data\n\n        let res = []\n        let k = 0 // Candlestick index\n\n        if (mode === 'calc') {\n            let shift = Utils.index_shift(this.sub, data)\n            for (var i = 0; i < data.length; i++) {\n                let _i = (this.ss + i)\n                let copy = [...data[i]]\n                copy[0] = _i + shift\n                res.push(copy)\n            }\n            return res\n        }\n\n        // If indicator data starts after ohlcv, calc the first index\n        if (data.length) {\n            try {\n                let k1 = Utils.fast_nearest(this.sub, data[0][0])[0]\n                if (k1 !== null && k1 >= 0) k = k1\n            } catch(e) { }\n        }\n\n        let t0 = this.sub[0][0]\n        let tN = this.sub[this.sub.length - 1][0]\n\n        for (var i = 0; i < data.length; i++) {\n            let copy = [...data[i]]\n            let tk = this.sub[k][0]\n            let t = data[i][0]\n            let index = this.ti_map[t]\n\n            if (index === undefined) {\n\n                // Linear extrapolation\n                if (t < t0 || t > tN) {\n                    index = this.ss + k - (tk - t) / this.tf\n                    t = data[i+1] ? data[i+1][0] : undefined\n                }\n\n                // Linear interpolation\n                else {\n                    let tk2 = this.sub[k + 1][0]\n                    index = tk === tk2 ?  this.ss + k :\n                        this.ss + k + (t - tk) / (tk2 - tk)\n                    t = data[i+1] ? data[i+1][0] : undefined\n                }\n\n            }\n            // Race of data points & sub points (ohlcv)\n            // (like turn based increments)\n            while (k+1 < this.sub.length - 1 && t > this.sub[k+1][0]) {\n                k++\n                tk = this.sub[k][0]\n            }\n            copy[0] = index\n            res.push(copy)\n        }\n        return res\n    }\n\n    // index => time\n    i2t(i) {\n\n        if (!this.ib || !this.sub.length) return i // Regular mode\n\n        // Discrete mapping\n        let res = this.it_map[i]\n        if (res !== undefined) return res\n        // Linear extrapolation\n        else if (i >= this.ss + this.sub_i.length) {\n            let di = i - (this.ss + this.sub_i.length) + 1\n            let last = this.sub[this.sub.length - 1]\n            return last[0] + di * this.tf\n        }\n        else if (i < this.ss) {\n            let di = i - this.ss\n            return this.sub[0][0] + di * this.tf\n        }\n\n        // Linear Interpolation\n        let i1 = Math.floor(i) - this.ss\n        let i2 = i1 + 1\n        let len = this.sub.length\n\n        if (i2 >= len) i2 = len - 1\n\n        let sub1 = this.sub[i1]\n        let sub2 = this.sub[i2]\n\n        if (sub1 && sub2) {\n            let t1 = sub1[0]\n            let t2 = sub2[0]\n            return t1 + (t2 - t1) * (i - i1 - this.ss)\n        }\n        return undefined\n\n    }\n\n    // Map or bypass depending on the mode\n    i2t_mode(i, mode) {\n        return mode === 'data' ? i : this.i2t(i)\n    }\n\n    // time => index\n    // TODO: when switch from IB mode to regular tools\n    // disappear (bc there is no more mapping)\n    t2i(t) {\n\n        if (!this.sub.length) return undefined\n\n        // Discrete mapping\n        let res = this.ti_map[t]\n        if (res !== undefined) return res\n\n        let t0 = this.sub[0][0]\n        let tN = this.sub[this.sub.length - 1][0]\n\n        // Linear extrapolation\n        if (t < t0) {\n            return this.ss - (t0 - t) / this.tf\n        }\n\n        else if (t > tN) {\n            let k = this.sub.length - 1\n            return this.ss + k - (tN - t) / this.tf\n        }\n\n        try {\n            // Linear Interpolation\n            let i = Utils.fast_nearest(this.sub, t)\n            let tk = this.sub[i[0]][0]\n            let tk2 = this.sub[i[1]][0]\n            let k = (t - tk) / (tk2 - tk)\n            return this.ss + i[0] + k * (i[1] - i[0])\n        } catch(e) { }\n\n        return undefined\n    }\n\n    // Auto detect: is it time or index?\n    // Assuming that index-based mode is ON\n    smth2i(smth) {\n        if (smth > MAX_ARR) {\n            return this.t2i(smth) // it was time\n        } else {\n            return smth // it was an index\n        }\n    }\n\n    smth2t(smth) {\n        if (smth < MAX_ARR) {\n            return this.i2t(smth) // it was an index\n        } else {\n            return smth // it was time\n        }\n    }\n\n    // Global Time => Index (uses all data, approx. method)\n    // Used by tv.goto()\n    gt2i(smth, ohlcv) {\n        if (smth > MAX_ARR) {\n            let E = 0.1 // Fixes the arrayslicer bug\n            let [i1, i2] = Utils.fast_nearest(ohlcv, smth+E)\n            if (typeof i1 === 'number') {\n                return i1\n            } else {\n                return this.t2i(smth) // fallback\n            }\n        } else {\n            return smth // it was an index\n        }\n    }\n\n}\n","import { render } from \"./Chart.vue?vue&type=template&id=e5028f04\"\nimport script from \"./Chart.vue?vue&type=script&lang=js\"\nexport * from \"./Chart.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n<template>\n    <div class=\"trading-vue-toolbar\" :style=\"styles\"\n        :key=\"tool_count\">\n        <toolbar-item v-for=\"(tool, i) in groups\"\n            v-if=\"tool.icon && !tool.hidden\"\n            @item-selected=\"selected\"\n            :key=\"i\"\n            :data=\"tool\"\n            :subs=\"sub_map\"\n            :dc=\"data\"\n            :config=\"config\"\n            :colors=\"colors\"\n            :selected=\"is_selected(tool)\">\n        </toolbar-item>\n    </div>\n</template>\n\n<script>\n\nimport ToolbarItem from './ToolbarItem.vue'\n\nexport default {\n    name: 'Toolbar',\n    props: [\n        'data', 'height', 'colors', 'tv_id', 'config'\n    ],\n    components: { ToolbarItem },\n    mounted() {\n    },\n    methods: {\n        selected(tool) {\n            this.$emit('custom-event', {\n                event:'tool-selected', args: [tool.type]\n            })\n            if (tool.group) {\n                // TODO: emit the sub map to DC (save)\n                this.sub_map[tool.group] = tool.type\n            }\n        },\n        is_selected(tool) {\n            if (tool.group) {\n                return !!tool.items.find(\n                    x => x.type === this.data.tool)\n            }\n            return tool.type === this.data.tool\n        }\n    },\n    computed: {\n        styles() {\n            let colors = this.$props.colors\n            let b = this.$props.config.TB_BORDER\n            let w = this.$props.config.TOOLBAR - b\n            let c = colors.grid\n            let cb = colors.tbBack || colors.back\n            let brd = colors.tbBorder || colors.scale\n            let st = this.$props.config.TB_B_STYLE\n            return {\n                'width': `${w}px`,\n                'height': `${this.$props.height-3}px`,\n                'background-color': cb,\n                'border-right': `${b}px ${st} ${brd}`\n            }\n        },\n        groups() {\n            let arr = []\n            for (var tool of this.data.tools || []) {\n                if (!tool.group) {\n                    arr.push(tool)\n                    continue\n                }\n                let g = arr.find(x => x.group === tool.group)\n                if (!g) {\n                    arr.push({\n                        group: tool.group,\n                        icon: tool.icon,\n                        items: [tool]\n                    })\n                } else {\n                    g.items.push(tool)\n                }\n            }\n            return arr\n        }\n    },\n    watch: {\n        data: {\n            handler(n) {\n                // For some reason Vue.js doesn't want to\n                // update 'tools' automatically when new item\n                // is pushed/removed. Yo, Vue, I herd you\n                // you want more dirty tricks?\n                if (n.tools) this.tool_count = n.tools.length\n            },\n            deep: true\n        }\n    },\n    data() { return { tool_count: 0, sub_map: {} } }\n}\n\n</script>\n\n<style>\n.trading-vue-toolbar {\n    position: absolute;\n    border-right: 1px solid black;\n    z-index: 101;\n    padding-top: 3px;\n    user-select: none;\n}\n</style>\n","\n<template>\n    <div :class=\"['trading-vue-tbitem', selected ? 'selected-item' : '']\"\n        @click=\"emit_selected('click')\"\n        @mousedown=\"mousedown\"\n        @touchstart=\"mousedown\"\n        @touchend=\"emit_selected('touch')\"\n        :style=\"item_style\">\n        <div class=\"trading-vue-tbicon tvjs-pixelated\"\n            :style=\"icon_style\">\n        </div>\n        <div class=\"trading-vue-tbitem-exp\" v-if=\"data.group\"\n            :style=\"exp_style\"\n            @click=\"exp_click\"\n            @mousedown=\"expmousedown\"\n            @mouseover=\"expmouseover\"\n            @mouseleave=\"expmouseleave\">\n            ᐳ\n        </div>\n        <item-list :config=\"config\" :items=\"data.items\"\n            v-if=\"show_exp_list\" :colors=\"colors\" :dc=\"dc\"\n            @close-list=\"close_list\"\n            @item-selected=\"emit_selected_sub\"/>\n    </div>\n</template>\n\n<script>\n\nimport ItemList from './ItemList.vue'\nimport Utils from '../stuff/utils.js'\n\nexport default {\n    name: 'ToolbarItem',\n    props: [\n        'data', 'selected', 'colors', 'tv_id', 'config', 'dc', 'subs'\n    ],\n    components: { ItemList },\n    mounted() {\n        if (this.data.group) {\n            let type = this.subs[this.data.group]\n            let item = this.data.items.find(x => x.type === type)\n            if (item) this.sub_item = item\n        }\n    },\n    methods: {\n        mousedown(e) {\n            this.click_start = Utils.now()\n            this.click_id = setTimeout(() => {\n                this.show_exp_list = true\n            }, this.config.TB_ICON_HOLD)\n        },\n        expmouseover() {\n            this.exp_hover = true\n        },\n        expmouseleave() {\n            this.exp_hover = false\n        },\n        expmousedown(e) {\n            if (this.show_exp_list) e.stopPropagation()\n        },\n        emit_selected(src) {\n            if (Utils.now() - this.click_start >\n                this.config.TB_ICON_HOLD) return\n            clearTimeout(this.click_id)\n            //if (Utils.is_mobile && src === 'click') return\n            // TODO: double firing\n            if (!this.data.group) {\n                this.$emit('item-selected', this.data)\n            } else {\n                let item = this.sub_item || this.data.items[0]\n                this.$emit('item-selected', item)\n            }\n        },\n        emit_selected_sub(item) {\n            this.$emit('item-selected', item)\n            this.sub_item = item\n        },\n        exp_click(e) {\n            if (!this.data.group) return\n            e.cancelBubble = true\n            this.show_exp_list = !this.show_exp_list\n        },\n        close_list() {\n            this.show_exp_list = false\n        }\n    },\n    computed: {\n        item_style() {\n            if (this.$props.data.type === 'System:Splitter') {\n                return this.splitter\n            }\n            let conf = this.$props.config\n            let im = conf.TB_ITEM_M\n            let m = (conf.TOOLBAR - conf.TB_ICON) * 0.5 - im\n            let s = conf.TB_ICON + im * 2\n            let b = this.exp_hover ? 0 : 3\n            return {\n                'width': `${s}px`,\n                'height': `${s}px`,\n                'margin': `8px ${m}px 0px ${m}px`,\n                'border-radius': `3px ${b}px ${b}px 3px`\n            }\n        },\n        icon_style() {\n            if (this.$props.data.type === 'System:Splitter') {\n                return {}\n            }\n            let conf = this.$props.config\n            let br = conf.TB_ICON_BRI\n            let sz = conf.TB_ICON\n            let im = conf.TB_ITEM_M\n            let ic = this.sub_item ?\n                this.sub_item.icon : this.$props.data.icon\n            return {\n                'background-image': `url(${ic})`,\n                'width': `${sz}px`,\n                'height': `${sz}px`,\n                'margin': `${im}px`,\n                'filter': `brightness(${br})`\n            }\n        },\n        exp_style() {\n            let conf = this.$props.config\n            let im = conf.TB_ITEM_M\n            let s = conf.TB_ICON * 0.5 + im\n            let p = (conf.TOOLBAR - s * 2) / 4\n            return {\n                padding: `${s}px ${p}px`,\n                transform: this.show_exp_list ?\n                    `scale(-0.6, 1)` :\n                    `scaleX(0.6)`\n            }\n        },\n        splitter() {\n            let conf = this.$props.config\n            let colors = this.$props.colors\n            let c = colors.grid\n            let im = conf.TB_ITEM_M\n            let m = (conf.TOOLBAR - conf.TB_ICON) * 0.5 - im\n            let s = conf.TB_ICON + im * 2\n            return {\n                'width': `${s}px`,\n                'height': '1px',\n                'margin': `8px ${m}px 8px ${m}px`,\n                'background-color': c\n            }\n        }\n    },\n    data() {\n        return {\n            exp_hover: false,\n            show_exp_list: false,\n            sub_item: null\n        }\n    }\n}\n\n</script>\n\n<style>\n\n.trading-vue-tbitem {\n}\n\n.trading-vue-tbitem:hover {\n    background-color: #76878319;\n}\n\n.trading-vue-tbitem-exp {\n    position: absolute;\n    right: -3px;\n    padding: 18.5px 5px;\n    font-stretch: extra-condensed;\n    transform: scaleX(0.6);\n    font-size: 0.6em;\n    opacity: 0.0;\n    user-select: none;\n    line-height: 0;\n}\n\n.trading-vue-tbitem:hover\n.trading-vue-tbitem-exp {\n    opacity: 0.5;\n}\n\n.trading-vue-tbitem-exp:hover {\n    background-color: #76878330;\n    opacity: 0.9 !important;\n}\n\n.trading-vue-tbicon {\n    position: absolute;\n}\n.trading-vue-tbitem.selected-item > .trading-vue-tbicon,\n.tvjs-item-list-item.selected-item > .trading-vue-tbicon {\n     filter: brightness(1.45) sepia(1) hue-rotate(90deg) saturate(4.5) !important;\n}\n.tvjs-pixelated {\n    -ms-interpolation-mode: nearest-neighbor;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: -webkit-crisp-edges;\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: pixelated;\n}\n\n</style>\n","\n<template>\n    <div class=\"tvjs-item-list\" :style=\"list_style()\"\n        @mousedown=\"thismousedown\">\n        <div v-for=\"item of items\" :class=\"item_class(item)\"\n            v-if=\"!item.hidden\" @click=\"e => item_click(e, item)\"\n                :style=\"item_style(item)\">\n            <div class=\"trading-vue-tbicon tvjs-pixelated\"\n                :style=\"icon_style(item)\">\n            </div>\n            <div>{{item.type}}</div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'ItemList',\n    props: ['config', 'items', 'colors', 'dc'],\n    mounted() {\n        window.addEventListener(\n            'mousedown', this.onmousedown\n        )\n    },\n    beforeDestroy() {\n        window.removeEventListener(\n            'mousedown', this.onmousedown\n        )\n    },\n    methods: {\n        list_style() {\n            let conf = this.$props.config\n            let w = conf.TOOLBAR\n            let brd = this.colors.tbListBorder || this.colors.grid\n            let bstl = `1px solid ${brd}`\n            return {\n                left: `${w}px`,\n                background: this.colors.back,\n                borderTop: bstl,\n                borderRight: bstl,\n                borderBottom: bstl,\n            }\n        },\n        item_class(item) {\n            if (this.dc.tool === item.type) {\n                return \"tvjs-item-list-item selected-item\"\n            }\n            return \"tvjs-item-list-item\"\n        },\n        item_style(item) {\n            let conf = this.$props.config\n            let h = conf.TB_ICON + conf.TB_ITEM_M * 2 + 8\n            let sel = this.dc.tool === item.type\n            return {\n                height: `${h}px`,\n                color: sel ? undefined : `#888888`\n            }\n        },\n        icon_style(data) {\n            let conf = this.$props.config\n            let br = conf.TB_ICON_BRI\n            let im = conf.TB_ITEM_M\n            return {\n                'background-image': `url(${data.icon})`,\n                'width': '25px',\n                'height': '25px',\n                'margin': `${im}px`,\n                'filter': `brightness(${br})`\n            }\n        },\n        item_click(e, item) {\n            e.cancelBubble = true\n            this.$emit('item-selected', item)\n            this.$emit('close-list')\n        },\n        onmousedown() {\n            this.$emit('close-list')\n        },\n        thismousedown(e) {\n            e.stopPropagation()\n        }\n    },\n    computed: {\n    },\n    data() {\n        return {\n\n        }\n    }\n}\n\n</script>\n\n<style>\n.tvjs-item-list {\n    position: absolute;\n    user-select: none;\n    margin-top: -5px;\n}\n.tvjs-item-list-item {\n    display: flex;\n    align-items: center;\n    padding-right: 20px;\n    font-size: 1.15em;\n    letter-spacing: 0.05em;\n}\n.tvjs-item-list-item:hover {\n    background-color: #76878319;\n}\n.tvjs-item-list-item * {\n    position: relative !important;\n}\n</style>\n","import { render } from \"./ItemList.vue?vue&type=template&id=428f7654\"\nimport script from \"./ItemList.vue?vue&type=script&lang=js\"\nexport * from \"./ItemList.vue?vue&type=script&lang=js\"\n\nimport \"./ItemList.vue?vue&type=style&index=0&id=428f7654&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ToolbarItem.vue?vue&type=template&id=24cfb58a\"\nimport script from \"./ToolbarItem.vue?vue&type=script&lang=js\"\nexport * from \"./ToolbarItem.vue?vue&type=script&lang=js\"\n\nimport \"./ToolbarItem.vue?vue&type=style&index=0&id=24cfb58a&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Toolbar.vue?vue&type=template&id=1d908e28\"\nimport script from \"./Toolbar.vue?vue&type=script&lang=js\"\nexport * from \"./Toolbar.vue?vue&type=script&lang=js\"\n\nimport \"./Toolbar.vue?vue&type=style&index=0&id=1d908e28&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <!-- WidgetS Layer -->\n    <div class=\"tvjs-widgets\"\n        :style=\"{width: width+'px', height: height+'px'}\">\n        <component v-for=\"id in Object.keys(map)\"\n            :key=\"id\"\n            :id=\"id\"\n            :main=\"map[id].ctrl\"\n            :data=\"map[id].data\"\n            :tv=\"tv\"\n            :dc=\"dc\"\n            v-bind:is=\"initw(id)\">\n        </component>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'Widgets',\n    props: ['width', 'height', 'map', 'tv', 'dc'],\n    methods: {\n        initw(id) {\n            return this.$props.map[id].cls\n        }\n    }\n}\n</script>\n<style>\n.tvjs-widgets {\n    position: absolute;\n    z-index: 1000;\n    pointer-events: none;\n}\n</style>\n","import { render } from \"./Widgets.vue?vue&type=template&id=00dc0900\"\nimport script from \"./Widgets.vue?vue&type=script&lang=js\"\nexport * from \"./Widgets.vue?vue&type=script&lang=js\"\n\nimport \"./Widgets.vue?vue&type=style&index=0&id=00dc0900&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"tvjs-the-tip\"\n        v-html=\"data.text\" @mousedown=\"$emit('remove-me')\"\n        :style=\"style\">\n    </div>\n</template>\n<script>\nexport default {\n    name: 'TheTip',\n    props: ['data'],\n    mounted() {\n        setTimeout(() => this.$emit('remove-me'), 3000)\n    },\n    computed: {\n        style() {\n            return {\n                background: this.data.color\n            }\n        }\n    },\n}\n</script>\n<style>\n.tvjs-drift-enter-active {\n    transition: all .3s ease;\n}\n.tvjs-drift-leave-active {\n    transition: all .8s cubic-bezier(1.0, 0.5, 0.8, 1.0);\n}\n.tvjs-drift-enter, .tvjs-drift-leave-to\n{\n    transform: translateX(10px);\n    opacity: 0;\n}\n.tvjs-the-tip {\n    position: absolute;\n    width: 200px;\n    text-align: center;\n    z-index: 10001;\n    color: #ffffff;\n    font-size: 1.5em;\n    line-height: 1.15em;\n    padding: 10px;\n    border-radius: 3px;\n    right: 70px;\n    top: 10px;\n    text-shadow: 1px 1px black;\n}\n</style>\n","import { render } from \"./TheTip.vue?vue&type=template&id=66c58c8a\"\nimport script from \"./TheTip.vue?vue&type=script&lang=js\"\nexport * from \"./TheTip.vue?vue&type=script&lang=js\"\n\nimport \"./TheTip.vue?vue&type=style&index=0&id=66c58c8a&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// extensions control\n\nexport default {\n    mounted() {\n        this.ctrllist()\n        this.skin_styles()\n    },\n    methods: {\n        // Build / rebuild component list\n        ctrllist() {\n            this.ctrl_destroy()\n            this.controllers = []\n\n            for (var x of this.$props.extensions) {\n                let name = x.Main.__name__\n                if (!this.xSettings[name]) {\n                    this.$set(this.xSettings, name, {})\n                }\n                let nc = new x.Main(\n                    this,      // tv inst\n                    this.data, // dc\n                    this.xSettings[name] // settings\n                )\n                nc.name = name\n                this.controllers.push(nc)\n            }\n            return this.controllers\n        },\n        // TODO: preventDefault\n        pre_dc(e) {\n            for (var ctrl of this.controllers) {\n                if (ctrl.update) {\n                    ctrl.update(e)\n                }\n            }\n        },\n        post_dc(e) {\n            for (var ctrl of this.controllers) {\n                if (ctrl.post_update) {\n                    ctrl.post_update(e)\n                }\n            }\n        },\n        ctrl_destroy() {\n            for (var ctrl of this.controllers) {\n                if (ctrl.destroy) ctrl.destroy()\n            }\n        },\n        skin_styles() {\n            let id = 'tvjs-skin-styles'\n            let stbr = document.getElementById(id)\n            if (stbr) {\n                let parent = stbr.parentNode\n                parent.removeChild(stbr)\n            }\n            if (this.skin_proto && this.skin_proto.styles) {\n                let sheet = document.createElement('style')\n                sheet.setAttribute(\"id\", id)\n                sheet.innerHTML = this.skin_proto.styles\n                this.$el.appendChild(sheet)\n            }\n        }\n    },\n    computed: {\n        ws() {\n            let ws = {}\n            for (var ctrl of this.controllers) {\n                if (ctrl.widgets) {\n                    for (var id in ctrl.widgets) {\n                        ws[id] = ctrl.widgets[id]\n                        ws[id].ctrl = ctrl\n                    }\n                }\n            }\n            return ws\n        },\n        skins() {\n            let sks = {}\n            for (var x of this.$props.extensions) {\n                for (var id in x.skins || {}) {\n                    sks[id] = x.skins[id]\n                }\n            }\n            return sks\n        },\n        skin_proto() {\n            return this.skins[this.$props.skin]\n        },\n        colorpack() {\n            let sel = this.skins[this.$props.skin]\n            return sel ? sel.colors : undefined\n        }\n    },\n    watch: {\n        // TODO: This is fast & dirty fix, need\n        // to fix the actual reactivity problem\n        skin(n, p) {\n            if (n !== p) this.resetChart()\n            this.skin_styles()\n        },\n        extensions() {\n            this.ctrllist()\n        },\n        xSettings: {\n            handler(n, p) {\n                for (var ctrl of this.controllers) {\n                    if (ctrl.onsettings) {\n                        ctrl.onsettings(n, p)\n                    }\n                }\n            },\n            deep: true\n        }\n    },\n    data() {\n        return {\n            controllers: []\n        }\n    }\n}\n","import { render } from \"./TradingVue.vue?vue&type=template&id=97078b38\"\nimport script from \"./TradingVue.vue?vue&type=script&lang=js\"\nexport * from \"./TradingVue.vue?vue&type=script&lang=js\"\n\nimport \"./TradingVue.vue?vue&type=style&index=0&id=97078b38&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Simple linear regression\n *\n * @param {Array.<number>} data\n * @return {Function}\n */\nexport default function regression(data, len, offset) {\n\n    data = data.slice(0, len).reverse().map((x, i) => [i, x])\n\n    var sum_x = 0,\n        sum_y = 0,\n        sum_xy = 0,\n        sum_xx = 0,\n        count = 0,\n        m, b\n\n    // calculate sums\n    for (var i = 0, len = data.length; i < len; i++) {\n        if (!data[i]) return NaN\n        var point = data[i]\n        sum_x += point[0]\n        sum_y += point[1]\n        sum_xx += point[0] * point[0]\n        sum_xy += point[0] * point[1]\n        count++\n    }\n\n    // calculate slope (m) and y-intercept (b) for f(x) = m * x + b\n    m = (count * sum_xy - sum_x * sum_y) / (count * sum_xx - sum_x * sum_x)\n    b = (sum_y / count) - (m * sum_x) / count\n\n    return m * (data.length - 1 - offset) + b\n\n}\n","\nimport Const from '../stuff/constants.js'\n\nconst FDEFS = /(function |)([$A-Z_][0-9A-Z_$\\.]*)[\\s]*?\\((.*?)\\)/gmi\nconst SBRACKETS = /([$A-Z_][0-9A-Z_$\\.]*)[\\s]*?\\[([^\"^\\[^\\]]+?)\\]/gmi\nconst TFSTR = /(\\d+)(\\w*)/gm\n\nconst BUF_INC = 5\nvar tf_cache = {}\n\nexport function f_args(src) {\n    FDEFS.lastIndex = 0\n\n    var m = FDEFS.exec(src)\n    if (m) {\n        let fkeyword = m[1].trim()\n        let fname = m[2].trim()\n        let fargs = m[3].trim()\n\n        return fargs.split(',').map(x => x.trim())\n    }\n    return []\n}\nexport function f_body(src) {\n    return src.slice(\n        src.indexOf(\"{\") + 1,\n        src.lastIndexOf(\"}\")\n    )\n}\n\nexport function wrap_idxs(src, pre = '') {\n\n    SBRACKETS.lastIndex = 0\n    let changed = false\n\n    do {\n        var m = SBRACKETS.exec(src)\n\n        if (m) {\n\n            let vname = m[1].trim()\n            let vindex = m[2].trim()\n            if (vindex === '0' || parseInt(vindex) < BUF_INC) {\n                continue\n            }\n            switch(vname) {\n                case 'let':\n                case 'var':\n                case 'return':\n                    continue\n            }\n\n            //let wrap = `${pre}_v(${vname}, ${vindex})[${vindex}]`\n            let wrap = `${vname}[${pre}_i(${vindex}, ${vname})]`\n            src = src.replace(m[0], wrap)\n            changed = true\n        }\n    } while (m)\n\n    return changed ? src : src\n}\n\n// Get all module helper classes\nexport function make_module_lib(mod) {\n    let lib = {}\n    for (var k in mod) {\n        if (k === 'main' || k === 'id') continue\n        let a = f_args(mod[k])\n        lib[k] = new Function(a, f_body(mod[k]))\n    }\n    return lib\n}\n\nexport function get_raw_src(f) {\n    if (typeof f === 'string') return f\n    let src = f.toString()\n    return src.slice(\n        src.indexOf(\"{\") + 1,\n        src.lastIndexOf(\"}\")\n    )\n}\n\n// Get tf in ms from pairs such (`15`, `m`)\nexport function tf_from_pair(num, pf) {\n    var mult = 1\n    switch (pf) {\n        case 's': mult = Const.SECOND; break\n        case 'm': mult = Const.MINUTE; break\n        case 'H': mult = Const.HOUR; break\n        case 'D': mult = Const.DAY; break\n        case 'W': mult = Const.WEEK; break\n        case 'M': mult = Const.MONTH; break\n        case 'Y': mult = Const.YEAR; break\n    }\n    return parseInt(num) * mult\n}\n\nexport function tf_from_str(str) {\n\n    if (typeof str === 'number') return str\n    if (tf_cache[str]) return tf_cache[str]\n\n    TFSTR.lastIndex = 0\n    let m = TFSTR.exec(str)\n    if (m) {\n        tf_cache[str] = tf_from_pair(m[1], m[2])\n        return tf_cache[str]\n    }\n    return undefined\n}\n\nexport function get_fn_id(pre, id) {\n    return pre + '-' + id.split('<-').pop()\n}\n\n// Apply filter for all new overlays\nexport function ovf(obj, f) {\n    var nw = {}\n    for (var id in obj) {\n        nw[id] = {}\n        for (var k in obj[id]) {\n            if (k === 'data') continue\n            nw[id][k] = obj[id][k]\n        }\n        nw[id].data = f(obj[id].data)\n    }\n    return nw\n}\n\n// Return index of the next element in\n// dataset (since t). Impl: simple binary search\n// TODO: optimize (remember the penultimate\n// iteration and start from there)\nexport function nextt(data, t, ti = 0) {\n\n    let i0 = 0\n    let iN = data.length - 1\n\n    while (i0 <= iN) {\n        var mid = Math.floor((i0 + iN) / 2)\n        if (data[mid][ti] === t) {\n            return mid\n        } else if (data[mid][ti] < t) {\n            i0 = mid + 1\n        } else {\n            iN = mid - 1\n        }\n    }\n\n    return t < data[mid][ti] ? mid : mid + 1\n\n}\n\n// Estimated size of datasets\nexport function size_of_dss(data) {\n    let bytes = 0\n    for (var id in data) {\n        if (data[id].data && data[id].data[0]) {\n            let s0 = size_of(data[id].data[0])\n            bytes += s0 * data[id].data.length\n        }\n    }\n    return bytes\n}\n\n\n// Used to measure the size of dataset\nexport function size_of(object) {\n    var list = [], stack = [object], bytes = 0\n    while (stack.length) {\n        var value = stack.pop()\n        var type = typeof value\n        if (type === 'boolean') {\n            bytes += 4\n        } else if (type === 'string') {\n            bytes += value.length * 2\n        } else if (type === 'number') {\n            bytes += 8\n        } else if (type === 'object' &&\n            list.indexOf(value) === -1) {\n            list.push(value)\n            for(var i in value) {\n                stack.push(value[i])\n            }\n        }\n    }\n    return bytes\n}\n\n// Update onchart/offchart\nexport function update(data, val) {\n    const i = data.length - 1\n    const last = data[i]\n    if (!last || val[0] > last[0]) {\n        data.push(val)\n    } else {\n        data[i] = val\n    }\n}\n\nexport function now() {\n    return (new Date()).getTime()\n}\n","// Resamples candles\n\nimport se from './script_engine.js'\n\nconst DEF_LIMIT = 5   // default buff length\n\nexport default function(T, auto = false) {\n\n    // Define a TS type (part of the candle)\n    let Ti = ['high', 'low', 'close', 'vol'].indexOf(T)\n\n    return function(x, t) {\n\n        let tf = this.__tf__\n        let id = this.__id__\n        t = t || se.t\n        let val = auto ? se[T][0] : x\n        // TODO: closing at a specific time\n        // (timezone, end of the month...)\n        if (!this.__t0__ || t >= this.__t0__ + tf) {\n\n            this.unshift(Ti !== 3 ? val : 0)\n            this.__t0__ = t - t % tf\n            // TODO: new candle signal\n        }\n\n        // Update prices\n        switch(Ti) {\n            case 0:\n                if (val > this[0]) this[0] = val\n                break\n            case 1:\n                if (val < this[0]) this[0] = val\n                break\n            case 2:\n                this[0] = val\n                break\n            case 3:\n                this[0] += val\n        }\n\n        // Limit size of vector\n        this.length = this.__len__ || DEF_LIMIT\n    }\n}\n","\n// Timeseries for scripts\n\nexport default function TS(id, arr, len) {\n    arr.__id__ = id\n    arr.__len__ = len\n    return arr\n}\n","\n// Symbol (contains several samplers, e.g. high, low, close...)\n\nimport * as u from './script_utils.js'\nimport se from './script_engine.js'\nimport TS from './script_ts.js'\nimport Sampler from './sampler.js'\n\nconst OHLCV = ['open', 'high', 'low', 'close', 'vol']\n\nconst ARR = 0\nconst TSS = 1\nconst NUM = 2\n\nexport default class Sym {\n\n    constructor(data, params) {\n\n        this.id = params.id\n        this.tf = u.tf_from_str(params.tf)\n        this.format = params.format\n        this.aggtype = params.aggtype || 'ohlcv'\n        this.window = params.window\n        this.fillgaps = params.fillgaps\n        this.data = data\n        this.data_type = ARR\n        this.main = !!params.main\n        this.idx = this.data_idx()\n        this.tmap = {}\n\n        this.tf = this.tf || se.tf\n        if (this.main) this.tf = se.tf\n\n        // Create a bunch of OHLCV samplers for\n        // sparse data\n        if (this.aggtype === 'ohlcv') {\n            for (var id of OHLCV) {\n                this[id] = TS(`${this.id}_${id}`, [])\n                this[id].__fn__ = Sampler(id).bind(this[id])\n                this[id].__tf__ = this.tf\n            }\n        }\n\n        // Create regular TSs & just feed them with a\n        // data points from the dataset\n        // TODO: different TS configurations depending\n        // on this.format\n        if (this.aggtype === 'copy') {\n            for (var id of OHLCV) {\n                this[id] = TS(`${this.id}_${id}`, [])\n                this[id].__tf__ = this.tf\n            }\n            for (var i = 0; i < this.data.length; i++) {\n                this.tmap[this.data[i][0]] = i\n            }\n        }\n        // Custom agg function (value calculated for the\n        // current window)\n        if (typeof this.aggtype === 'function') {\n            this.close = TS(`${this.id}_close`, [])\n            this.close.__fn__ = this.aggtype\n            this.close.__tf__ = this.tf\n        }\n\n        if (this.main) {\n            if (!this.tf) throw 'Main tf should be defined'\n            se.custom_main = this\n            let t0 = this.data[0][0]\n            se.t = t0 - t0 % this.tf\n            this.update(null, se.t)\n\n            // First candle should be formed before any updates()\n            se.data.ohlcv.data.length = 0\n            se.data.ohlcv.data.push([\n                se.t,\n                this.open[0],\n                this.high[0],\n                this.low[0],\n                this.close[0],\n                this.vol[0]\n            ])\n        }\n\n    }\n\n    update(x, t) {\n        if(this.aggtype === 'ohlcv') {\n            return this.update_ohlcv(x, t)\n        } else if (this.aggtype === 'copy') {\n            return this.update_copy(x, t)\n        } else if (typeof this.aggtype === 'function') {\n            return this.update_custom(x, t)\n        }\n    }\n\n    update_ohlcv(x, t) {\n        // Timestamp of the target candle, can be\n        // current or the next (if we are sampling\n        // the main chart)\n        t = t || se.t\n        let idx = this.idx\n        switch (this.data_type) {\n            case ARR:\n                if (t > this.data[this.data.length-1][0]) return false\n                let t0 = this.window ? t - this.window + this.tf : t\n                let dt = t0 % this.tf\n                t0 -= dt\n                let i0 = u.nextt(this.data, t0)\n                if (i0 >= this.data.length) return false\n                let t1 = t + se.tf\n                // Flush volume before the next window,\n                // but not before a new candle\n                if (t < this.vol.__t0__ + this.tf) this.vol[0] = 0\n                let noevent = true\n                for(var i = i0; i < this.data.length; i++) {\n                    noevent = false\n                    let dp = this.data[i]\n                    if (dp[idx.time] >= t1) break\n                    this.open.__fn__(dp[idx.open], t)\n                    this.high.__fn__(dp[idx.high], t)\n                    this.low.__fn__(dp[idx.low], t)\n                    this.close.__fn__(dp[idx.close], t)\n                    this.vol.__fn__(dp[idx.vol], t)\n                }\n                if (noevent) {\n                    if (this.fillgaps === false && !this.main) return false\n                    let last = this.close[0]\n                    this.open.__fn__(last, t)\n                    this.high.__fn__(last, t)\n                    this.low.__fn__(last, t)\n                    this.close.__fn__(last, t)\n                    this.vol.__fn__(0, t)\n                }\n                break\n            case TSS:\n                // TODO: this\n                break\n            case NUM:\n                // TODO: this\n                break\n        }\n        return true\n    }\n\n    update_copy(x, t) {\n\n        t = t || se.t\n\n        // Assuming that we got an ohlcv dataset\n        let i = this.tmap[t]\n        let s = this.data[i]\n\n        let ts0 = this.__t0__\n        if (!ts0 || t >= ts0 + this.tf) {\n            for (var k = 0; k < 5; k++) {\n                let tsn = OHLCV[k]\n                this[tsn].unshift(undefined)\n            }\n            this.__t0__ = t - t % this.tf\n            let last = this.data.length - 1\n            if (this.__t0__ === this.data[last][0]) {\n                this.tmap[this.__t0__] = last\n                s = this.data[last]\n            }\n        }\n\n        if (s) {\n            for (var k = 0; k < 5; k++) {\n                let tsn = OHLCV[k]\n                this[tsn][0] = s[k + 1]\n            }\n        } else if (this.fillgaps) {\n            for (var k = 0; k < 5; k++) {\n                let tsn = OHLCV[k]\n                this[tsn][0] = this.close[1]\n            }\n        }\n    }\n\n    update_custom(x, t) {\n        t = t || se.t\n        let idx = this.idx\n        switch (this.data_type) {\n            case ARR:\n                if (!this.data.length) return false\n                if (t > this.data[this.data.length-1][0]) return false\n                let t0 = this.window ? t - this.window + this.tf : t\n                let dt = t0 % this.tf\n                t0 -= dt\n                let i0 = u.nextt(this.data, t0)\n                if (i0 >= this.data.length) return false\n                let t1 = t + se.tf\n\n                let sub = []\n                for(var i = i0; i < this.data.length; i++) {\n                    let dp = this.data[i]\n                    if (dp[idx.time] >= t1) break\n                    sub.push(dp)\n                }\n\n                if (sub.length || this.fillgaps === false) {\n                    var val = this.close.__fn__(sub) // TODO: prob a bug\n                } else if (this.fillgaps !== false) {\n                    val = this.close[0]\n                }\n                let ts0 = this.close.__t0__\n                if (!ts0 || t >= ts0 + this.tf) {\n                    this.close.unshift(val)\n                    this.close.__t0__ = t - t % this.tf\n                } else {\n                    this.close[0] = val\n                }\n                break\n            case TSS:\n                // TODO: this\n                break\n            case NUM:\n                // TODO: this\n                break\n        }\n        return true\n    }\n\n    // Calculates data indices from the format\n    data_idx() {\n        let idx = {}\n        switch(this.aggtype) {\n            case 'ohlcv':\n                // Trying to detect the format from the\n                // first data point\n                if (!this.format) {\n                    let x0 = this.data[0]\n                    if (!x0 || x0.length === 6) {\n                        this.format = 'time:open:high:low:close:vol'\n                    }\n                    else if (x0.length === 3) {\n                        this.format = 'time:open,high,low,close:vol'\n                    }\n                }\n                break\n            default:\n                this.format = 'time:close'\n                break\n        }\n        this.format.split(':').forEach((x, i) => {\n            if (!x.length) return\n            let list = x.split(',')\n            list.forEach(y => idx[y] = i)\n        })\n        return idx\n    }\n}\n\nexport { Sym, ARR, TSS, NUM }\n","\n// Script std-lib (built-in functions)\n\nimport se from './script_engine.js'\nimport linreg from '../stuff/linreg.js'\nimport * as u from './script_utils.js'\nimport Sampler from './sampler.js'\nimport { Sym, ARR, TSS, NUM } from './symbol.js'\n\nconst BUF_INC = 5\n\nexport default class ScriptStd {\n\n    constructor(env) {\n        this.env = env\n        this.se = se\n\n        this.SWMA = [1/6, 2/6, 2/6, 1/6]\n        this.STDEV_EPS = 1e-10\n        this.STDEV_Z = 1e-4\n\n        this._index_tracking()\n\n    }\n\n    // Wrap every index with index-tracking function\n    // That way we will know exact index ranges\n    _index_tracking() {\n        let proto = Object.getPrototypeOf(this)\n        let std = ``\n        for (var k of Object.getOwnPropertyNames(proto)) {\n            switch(k) {\n                case 'constructor':\n                case 'ts':\n                case 'tstf':\n                case 'sample':\n                case '_index_tracking':\n                case '_tsid':\n                case '_i':\n                case '_v':\n                case '_add_i':\n                case 'chart':\n                case 'onchart':\n                case 'offchart':\n                case 'sym':\n                    continue\n\n            }\n            let f = this._add_i(k, this[k].toString())\n            if (f) this[k] = f\n        }\n\n    }\n\n    // Add index tracking to the function\n    _add_i(name, src) {\n        let args = u.f_args(src)\n        src = u.f_body(src)\n        let src2 = u.wrap_idxs(src, 'this.')\n        if (src2 !== src) {\n            return new Function (...args, src2)\n        }\n        return null\n    }\n\n    // Generate the next timeseries id\n    _tsid(prev, next) {\n        // TODO: prev presence check\n        return `${prev}<-${next}`\n    }\n\n    // Index-tracker\n    _i(i, x) {\n        // If an object is actually a timeseries\n        if (x != undefined && x === x && x.__id__) {\n            // Increase TS buff length\n            if (!x.__len__ || i >= x.__len__) {\n                x.__len__ = i + BUF_INC\n            }\n        }\n        return i\n    }\n\n    // Index-tracker (object-based)\n    _v(x, i) {\n        // If an object is actually a timeseries\n        if (x != undefined && x === x && x.__id__) {\n            // Increase TS buff length\n            if (!x.__len__ || i >= x.__len__) {\n                x.__len__ = i + BUF_INC\n            }\n        }\n        return x\n    }\n\n    /**\n     * Creates a new time-series & records each x.\n     * Returns  an array. Id is auto-genrated\n     * @param {*} x - A variable to sample from\n     * @return {TS} - New time-series\n     */\n    ts(x, _id, _tf) {\n        if (_tf) return this.tstf(x, _tf, _id)\n        let ts = this.env.tss[_id]\n        if (!ts) {\n            ts = this.env.tss[_id] = [x]\n            ts.__id__ = _id\n        } else {\n            ts[0] = x\n        }\n        return ts\n    }\n\n    /**\n     * Creates a new time-series & records each x.\n     * Uses Sampler to aggregate the values\n     * Return the an array. Id is auto-genrated\n     * @param {*} x - A variable to sample from\n     * @param {(number|string)} tf - Timeframe in ms or as a string\n     * @return {TS} - New time-series\n     */\n    tstf(x, tf, _id) {\n        let ts = this.env.tss[_id]\n        if (!ts) {\n            ts = this.env.tss[_id] = [x]\n            ts.__id__ = _id\n            ts.__tf__ = u.tf_from_str(tf)\n            ts.__fn__ = Sampler('close').bind(ts)\n        } else {\n            ts.__fn__(x)\n        }\n        return ts\n    }\n\n    /**\n     * Creates a new custom sampler.\n     * Return the an array. Id is auto-genrated\n     * @param {*} x - A variable to sample from\n     * @param {string} type - Sampler type\n     * @param {(number|string)} tf - Timeframe in ms or as a string\n     * @return {TS} - New time-series\n     */\n    sample(x, type, tf, _id) {\n        let ts = this.env.tss[_id]\n        if (!ts) {\n            ts = this.env.tss[_id] = [x]\n            ts.__id__ = _id\n            ts.__tf__ = u.tf_from_str(tf)\n            ts.__fn__ = Sampler(type).bind(ts)\n        } else {\n            ts.__fn__(x)\n        }\n        return ts\n    }\n\n    /**\n     * Replaces the variable if it's NaN\n     * @param {*} x - The variable\n     * @param {*} [v] - A value to replace with\n     * @return {*} - New value\n     */\n    nz(x, v) {\n        if (x == undefined || x !== x) {\n            return v || 0\n        }\n        return x\n    }\n\n    /**\n     * Is the variable NaN ?\n     * @param {*} x - The variable\n     * @return {boolean} - New value\n     */\n    na(x) {\n        return x == undefined || x !== x\n    }\n\n    /** Replaces the var with NaN if Infinite\n     * @param {*} x - The variable\n     * @param {*} [v] - A value to replace with\n     * @return {*} - New value\n     */\n    nf(x, v) {\n        if (!isFinite(x)) {\n            return v !== undefined ? v : NaN\n        }\n        return x\n    }\n\n    // Math operators on t-series and numbers\n\n    /** Adds values / time-series\n     * @param {(TS|*)} x - First input\n     * @param {(TS|*)} y - Second input\n     * @return {TS} - New time-series\n     */\n    add(x, y, _id) {\n        // __id__ means this is a time-series\n        let id = this._tsid(_id, `add`)\n        let x0 = this.na(x) ? NaN : (x.__id__ ? x[0] : x)\n        let y0 = this.na(y) ? NaN : (y.__id__ ? y[0] : y)\n        return this.ts(x0 + y0, id, x.__tf__)\n    }\n\n    /** Subtracts values / time-series\n     * @param {(TS|*)} x - First input\n     * @param {(TS|*)} y - Second input\n     * @return {TS} - New time-series\n     */\n    sub(x, y, _id) {\n        let id = this._tsid(_id, `sub`)\n        let x0 = this.na(x) ? NaN : (x.__id__ ? x[0] : x)\n        let y0 = this.na(y)? NaN : (y.__id__ ? y[0] : y)\n        return this.ts(x0 - y0, id, x.__tf__)\n    }\n\n    /** Multiplies values / time-series\n     * @param {(TS|*)} x - First input\n     * @param {(TS|*)} y - Second input\n     * @return {TS} - New time-series\n     */\n    mult(x, y, _id) {\n        let id = this._tsid(_id, `mult`)\n        let x0 = this.na(x) ? NaN : (x.__id__ ? x[0] : x)\n        let y0 = this.na(y)? NaN : (y.__id__ ? y[0] : y)\n        return this.ts(x0 * y0, id, x.__tf__)\n    }\n\n    /** Divides values / time-series\n     * @param {(TS|*)} x - First input\n     * @param {(TS|*)} y - Second input\n     * @return {TS} - New time-series\n     */\n    div(x, y, _id) {\n        let id = this._tsid(_id, `div`)\n        let x0 = this.na(x) ? NaN : (x.__id__ ? x[0] : x)\n        let y0 = this.na(y)? NaN : (y.__id__ ? y[0] : y)\n        return this.ts(x0 / y0, id, x.__tf__)\n    }\n\n    /** Returns a negative value / time-series\n     * @param {(TS|*)} x - Input\n     * @return {TS} - New time-series\n     */\n    neg(x, _id) {\n        let id = this._tsid(_id, `neg`)\n        let x0 = this.na(x) ? NaN : (x.__id__ ? x[0] : x)\n        return this.ts(-x0, id, x.__tf__)\n    }\n\n    /** Absolute value\n     * @param {number} x - Input\n     * @return {number} - Absolute value\n     */\n    abs(x) {\n        return Math.abs(x)\n    }\n\n    /** Arccosine function\n     * @param {number} x - Input\n     * @return {number} - Arccosine of x\n     */\n    acos(x) {\n        return Math.acos(x)\n    }\n\n    /** Emits an event to DataCube\n     * @param {string} type - Signal type\n     * @param {*} data - Signal data\n     */\n    signal(type, data = {}) {\n        if (this.se.shared.event !== 'update') return\n        this.se.send('script-signal', { type, data })\n    }\n\n    /** Emits an event if cond === true\n     * @param {(boolean|TS)} cond - The condition\n     * @param {string} type - Signal type\n     * @param {*} data - Signal data\n     */\n    signalif(cond, type, data = {}) {\n        if (this.se.shared.event !== 'update') return\n        if (cond && cond.__id__) cond = cond[0]\n        if (cond) {\n            this.se.send('script-signal', { type, data })\n        }\n    }\n\n    /** Arnaud Legoux Moving Average\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @param {number} offset - Offset\n     * @param {number} sigma - Sigma\n     * @return {TS} - New time-series\n     */\n    alma(src, len, offset, sigma, _id) {\n        let id = this._tsid(_id, `alma(${len},${offset},${sigma})`)\n        let m = Math.floor(offset * (len - 1))\n        let s = len / sigma\n        let norm = 0\n        let sum = 0\n        for (var i = 0; i < len; i++) {\n            let w = Math.exp(-1 * Math.pow(i - m, 2) / (2 * Math.pow(s, 2)))\n            norm = norm + w\n            sum = sum + src[len - i - 1] * w\n        }\n        return this.ts(sum / norm, id, src.__tf__)\n    }\n\n    /** Arcsine function\n     * @param {number} x - Input\n     * @return {number} - Arcsine of x\n     */\n    asin(x) {\n        return Math.asin(x)\n    }\n\n    /** Arctangent function\n     * @param {number} x - Input\n     * @return {number} - Arctangent of x\n     */\n    atan(x) {\n        return Math.atan(x)\n    }\n\n    /** Average True Range\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    atr(len, _id, _tf) {\n        let tfs = _tf || ''\n        let id = this._tsid(_id, `atr(${len})`)\n        let high = this.env.shared[`high${tfs}`]\n        let low = this.env.shared[`low${tfs}`]\n        let close = this.env.shared[`close${tfs}`]\n        let tr = this.ts(0, id, _tf)\n        tr[0] = this.na(high[1]) ? high[0] - low[0] :\n            Math.max(\n                Math.max(\n                    high[0] - low[0],\n                    Math.abs(high[0] - close[1])\n                ),\n                Math.abs(low[0] - close[1])\n            )\n        return this.rma(tr, len, id)\n    }\n\n    /** Average of arguments\n     * @param {...number} args - Numeric values\n     * @return {number}\n     */\n    avg(...args) {\n        args.pop() // Remove _id\n        let sum = 0\n        for (var i = 0; i < args.length; i++) {\n            sum += args[i]\n        }\n        return sum / args.length\n    }\n\n    /** Candles since the event occured (cond === true)\n     * @param {(boolean|TS)} cond - the condition\n     */\n    since(cond, _id) {\n        let id = this._tsid(_id, `since()`)\n        if (cond && cond.__id__) cond = cond[0]\n        let s = this.ts(undefined, id)\n        s[0] = cond ? 0 : s[1] + 1\n        return s\n    }\n\n    /** Bollinger Bands\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @param {number} mult - Multiplier\n     * @return {TS[]} - Array of new time-series (3 bands)\n     */\n    bb(src, len, mult, _id) {\n        let id = this._tsid(_id, `bb(${len},${mult})`)\n        let basis = this.sma(src, len, id)\n        let dev = this.stdev(src, len, id)[0] * mult\n        return [\n            basis,\n            this.ts(basis[0] + dev, id + '1', src.__tf__),\n            this.ts(basis[0] - dev, id + '2', src.__tf__)\n        ]\n    }\n\n    /** Bollinger Bands Width\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @param {number} mult - Multiplier\n     * @return {TS} - New time-series\n     */\n    bbw(src, len, mult, _id) {\n        let id = this._tsid(_id, `bbw(${len},${mult})`)\n        let basis = this.sma(src, len, id)[0]\n        let dev = this.stdev(src, len, id)[0] * mult\n        return this.ts(2 * dev / basis, id, src.__tf__)\n    }\n\n    /** Converts the variable to Boolean\n     * @param {number} x The variable\n     * @return {number}\n     */\n    bool(x) {\n        return !!x\n    }\n\n    /** Commodity Channel Index\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    cci(src, len, _id) {\n        // TODO: Not exactly precise, but pretty damn close\n        let id = this._tsid(_id, `cci(${len})`)\n        let ma = this.sma(src, len, id)\n        let dev = this.dev(src, len, id)\n        let cci = (src[0] - ma[0]) / (0.015 * dev[0])\n        return this.ts(cci, id, src.__tf__)\n    }\n\n    /** Shortcut for Math.ceil()\n     * @param {number} x The variable\n     * @return {number}\n     */\n    ceil(x) {\n        return Math.ceil(x)\n    }\n\n    /** Change: x[0] - x[len]\n     * @param {TS} src - Input\n     * @param {number} [len] - Length\n     * @return {TS} - New time-series\n     */\n    change(src, len = 1, _id) {\n        let id = this._tsid(_id, `change(${len})`)\n        return this.ts(src[0] - src[len], id, src.__tf__)\n    }\n\n    /** Chande Momentum Oscillator\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    cmo(src, len, _id) {\n        let id = this._tsid(_id, `cmo(${len})`)\n        let mom = this.change(src, 1, id)\n\n        let g = this.ts(mom[0] >= 0 ? mom[0] : 0.0, id+\"g\", src.__tf__)\n        let l = this.ts(mom[0] >= 0 ? 0.0 : -mom[0], id+\"l\", src.__tf__)\n\n        let sm1 = this.sum(g, len, id+'1')[0]\n        let sm2 = this.sum(l, len, id+'2')[0]\n\n        return this.ts(100 * (sm1 - sm2) / (sm1 + sm2), id, src.__tf__)\n    }\n\n    /** Center of Gravity\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    cog(src, len, _id) {\n        let id = this._tsid(_id, `cmo(${len})`)\n        let sum = this.sum(src, len, id)[0]\n        let num = 0\n        for (var i = 0; i < len; i++) {\n            num += src[i] * (i + 1)\n        }\n        return this.ts(-num / sum, id, src.__tf__)\n    }\n\n    // Correlation\n    corr() {\n        // TODO: this\n    }\n\n    /** Cosine function\n     * @param {number} x - Input\n     * @return {number} - Cosine of x\n     */\n    cos(x) {\n        return Math.cos(x)\n    }\n\n    /** When one time-series crosses another\n     * @param {TS} src1 - TS1\n     * @param {TS} src2 - TS2\n     * @return {TS} - New time-series\n     */\n    cross(src1, src2, _id) {\n        let id = this._tsid(_id, `cross`)\n        let x = (src1[0] > src2[0]) !== (src1[1] > src2[1])\n        return this.ts(x, id, src1.__tf__)\n    }\n\n    /** When one time-series goes over another one\n     * @param {TS} src1 - TS1\n     * @param {TS} src2 - TS2\n     * @return {TS} - New time-series\n     */\n    crossover(src1, src2, _id) {\n        let id = this._tsid(_id, `crossover`)\n        let x = (src1[0] > src2[0]) && (src1[1] <= src2[1])\n        return this.ts(x, id, src1.__tf__)\n    }\n\n    /** When one time-series goes under another one\n     * @param {TS} src1 - TS1\n     * @param {TS} src2 - TS2\n     * @return {TS} - New time-series\n     */\n    crossunder(src1, src2, _id) {\n        let id = this._tsid(_id, `crossunder`)\n        let x = (src1[0] < src2[0]) && (src1[1] >= src2[1])\n        return this.ts(x, id, src1.__tf__)\n    }\n\n    /** Sum of all elements of src\n     * @param {TS} src1 - Input\n     * @return {TS} - New time-series\n     */\n    cum(src, _id) {\n        let id = this._tsid(_id, `cum`)\n        let res = this.ts(0, id, src.__tf__)\n        res[0] = this.nz(src[0]) + this.nz(res[1])\n        return res\n    }\n\n    /** Day of month, literally\n     * @param {number} [time] - Time in ms (current t, if not defined)\n     * @return {number} - Day\n     */\n    dayofmonth(time) {\n        return new Date(time || se.t).getUTCDate()\n    }\n\n    /** Day of week, literally\n     * @param {number} [time] - Time in ms (current t, if not defined)\n     * @return {number} - Day\n     */\n    dayofweek(time) {\n        return new Date(time || se.t).getUTCDay() + 1\n    }\n\n    /** Deviation from SMA\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    dev(src, len, _id) {\n        let id = this._tsid(_id, `dev(${len})`)\n        let mean = this.sma(src, len, id)[0]\n        let sum = 0\n        for (var i = 0; i < len; i++) {\n            sum += Math.abs(src[i] - mean)\n        }\n        return this.ts(sum / len, id, src.__tf__)\n    }\n\n    /** Directional Movement Index ADX, +DI, -DI\n     * @param {number} len - Length\n     * @param {number} smooth - Smoothness\n     * @return {TS} - New time-series\n     */\n    dmi(len, smooth, _id, _tf) {\n        let id = this._tsid(_id, `dmi(${len},${smooth})`)\n        let tfs = _tf || ''\n        let high = this.env.shared[`high${tfs}`]\n        let low = this.env.shared[`low${tfs}`]\n        let up = this.change(high, 1, id+'1')[0]\n        let down = this.neg(this.change(low, 1, id+'2'), id)[0]\n\n        let plusDM = this.ts(100 * (\n            this.na(up) ? NaN :\n            (up > down && up > 0 ? up : 0)), id+'3', _tf\n        )\n        let minusDM = this.ts(100 * (\n            this.na(down) ? NaN :\n            (down > up && down > 0 ? down : 0)), id+'4', _tf\n        )\n\n        let trur = this.rma(this.tr(false, id, _tf), len, id+'5')\n        let plus = this.div(\n            this.rma(plusDM, len, id+'6'), trur, id+'8')\n        let minus = this.div(\n            this.rma(minusDM, len, id+'7'), trur, id+'9')\n        let sum = this.add(plus, minus, id+'10')[0]\n        let adx = this.rma(\n            this.ts(100 * Math.abs(plus[0] - minus[0]) /\n            (sum === 0 ? 1 : sum), id+'11', _tf),\n            smooth, id+'12'\n        )\n        return [adx, plus, minus]\n    }\n\n    /** Exponential Moving Average with alpha = 2 / (y + 1)\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    ema(src, len, _id) {\n        let id = this._tsid(_id, `ema(${len})`)\n        let a = 2 / (len + 1)\n        let ema = this.ts(0, id, src.__tf__)\n        ema[0] = this.na(ema[1]) ?\n            this.sma(src, len, id)[0] :\n            a * src[0] + (1 - a) * this.nz(ema[1])\n        return ema\n    }\n\n    /** Shortcut for Math.exp()\n     * @param {number} x The variable\n     * @return {number}\n     */\n    exp(x) {\n        return Math.exp(x)\n    }\n\n    /** Test if \"src\" TS is falling for \"len\" candles\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    falling(src, len, _id) {\n        let id = this._tsid(_id, `falling(${len})`)\n        let bot = src[0]\n        for (var i = 1; i < len + 1; i++) {\n            if (bot >= src[i]) {\n                return this.ts(false, id, src.__tf__)\n            }\n        }\n        return this.ts(true, id, src.__tf__)\n    }\n\n    /** For a given series replaces NaN values with\n     * previous nearest non-NaN value\n     * @param {TS} src - Input time-series\n     * @return {TS}\n     */\n    fixnan(src) {\n        if (this.na(src[0])) {\n            for (var i = 1; i < src.length; i++) {\n                if (!this.na(src[i])) {\n                    src[0] = src[i]\n                    break\n                }\n            }\n        }\n        return src\n    }\n\n    /* TODO: think\n    skipnan(x, _id) {\n        let id = this._tsid(_id, `skipnan()`)\n        return this.ts(true, id, src.__tf__)\n    }*/\n\n    /** Shortcut for Math.floor()\n     * @param {number} x The variable\n     * @return {number}\n     */\n    floor(x) {\n        Math.floor(x)\n    }\n\n    /** Highest value for a given number of candles back\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    highest(src, len, _id) {\n        let id = this._tsid(_id, `highest(${len})`)\n        let high = -Infinity\n        for (var i = 0; i < len; i++) {\n            if (src[i] > high) high = src[i]\n        }\n        return this.ts(high, id, src.__tf__)\n    }\n\n    /** Highest value offset for a given number of bars back\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     */\n    highestbars(src, len, _id) {\n        let id = this._tsid(_id, `highestbars(${len})`)\n        let high = -Infinity\n        let hi = 0\n        for (var i = 0; i < len; i++) {\n            if (src[i] > high) { high = src[i], hi = i }\n        }\n        return this.ts(-hi, id, src.__tf__)\n    }\n\n    /** Hull Moving Average\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    hma(src, len, _id) {\n        let id = this._tsid(_id, `hma(${len})`)\n        let len2 = Math.floor(len/2)\n        let len3 = Math.round(Math.sqrt(len))\n\n        let a = this.mult(this.wma(src, len2, id+'1'), 2, id)\n        let b = this.wma(src, len, id+'2')\n        let delt = this.sub(a, b, id+'3')\n\n        return this.wma(delt, len3, id+'4')\n    }\n\n    /** Returns hours of a given timestamp\n     * @param {number} [time] - Time in ms (current t, if not defined)\n     * @return {number} - Hour\n     */\n    hour(time) {\n        return new Date(time || se.t).getUTCHours()\n    }\n\n    /** Returns x or y depending on the condition\n     * @param {(boolean|TS)} cond - Condition\n     * @param {*} x - Frist value\n     * @param {*} y - Second value\n     * @return {*}\n     */\n    iff(cond, x, y) {\n        if (cond && cond.__id__) cond = cond[0]\n        return cond ? x : y\n    }\n\n    /** Keltner Channels\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @param {number} mult - Multiplier\n     * @param {boolean} [use_tr] - Use true range\n     * @return {TS[]} - Array of new time-series (3 bands)\n     */\n    kc(src, len, mult, use_tr = true, _id, _tf) {\n\n        let id = this._tsid(_id, `kc(${len},${mult},${use_tr})`)\n        let tfs = _tf || ''\n        let high = this.env.shared[`high${tfs}`]\n        let low = this.env.shared[`low${tfs}`]\n        let basis = this.ema(src, len, id+'1')\n\n        let range = use_tr ?\n            this.tr(false, id+'2', _tf) :\n            this.ts(high[0] - low[0], id+'3', src.__tf__)\n        let ema = this.ema(range, len, id+'4')\n\n        return [\n            basis,\n            this.ts(basis[0] + ema[0] * mult, id+'5', src.__tf__),\n            this.ts(basis[0] - ema[0] * mult, id+'6', src.__tf__)\n        ]\n    }\n\n    /** Keltner Channels Width\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @param {number} mult - Multiplier\n     * @param {boolean} [use_tr] - Use true range\n     * @return {TS} - New time-series\n     */\n    kcw(src, len, mult, use_tr = true, _id, _tf) {\n        let id = this._tsid(_id, `kcw(${len},${mult},${use_tr})`)\n        let kc = this.kc(src, len, mult, use_tr, `kcw`, _tf)\n        return this.ts((kc[1][0] - kc[2][0]) / kc[0][0], id, src.__tf__)\n    }\n\n    /** Linear Regression\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @param {number} offset - Offset\n     * @return {TS} - New time-series\n     */\n    linreg(src, len, offset = 0, _id) {\n        let id = this._tsid(_id, `linreg(${len})`)\n\n        src.__len__ = Math.max(src.__len__ || 0, len)\n        let lr = linreg(src, len, offset)\n\n        return this.ts(lr, id, src.__tf__)\n    }\n\n    /** Shortcut for Math.log()\n     * @param {number} x The variable\n     * @return {number}\n     */\n    log(x) {\n        return Math.log(x)\n    }\n\n    /** Shortcut for Math.log10()\n     * @param {number} x The variable\n     * @return {number}\n     */\n    log10(x) {\n        return Math.log10(x)\n    }\n\n    /** Lowest value for a given number of candles back\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    lowest(src, len, _id) {\n        let id = this._tsid(_id, `lowest(${len})`)\n        let low = Infinity\n        for (var i = 0; i < len; i++) {\n            if (src[i] < low) low = src[i]\n        }\n        return this.ts(low, id, src.__tf__)\n    }\n\n    /** Lowest value offset for a given number of bars back\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     */\n    lowestbars(src, len, _id) {\n        let id = this._tsid(_id, `lowestbars(${len})`)\n        let low = Infinity\n        let li = 0\n        for (var i = 0; i < len; i++) {\n            if (src[i] < low) { low = src[i], li = i }\n        }\n        return this.ts(-li, id, src.__tf__)\n    }\n\n    /** Moving Average Convergence/Divergence\n     * @param {TS} src - Input\n     * @param {number} fast - Fast EMA\n     * @param {number} slow - Slow EMA\n     * @param {number} sig - Signal\n     * @return {TS[]} - [macd, signal, hist]\n     */\n    macd(src, fast, slow, sig, _id) {\n        let id = this._tsid(_id, `macd(${fast}${slow}${sig})`)\n        let fast_ma = this.ema(src, fast, id+'1')\n        let slow_ma = this.ema(src, slow, id+'2')\n        let macd = this.sub(fast_ma, slow_ma, id+'3')\n        let signal = this.ema(macd, sig, id+'4')\n        let hist = this.sub(macd, signal, id+'5')\n        return [macd, signal, hist]\n    }\n\n    /** Max of arguments\n     * @param {...number} args - Numeric values\n     * @return {number}\n     */\n    max(...args) {\n        args.pop() // Remove _id\n        return Math.max(...args)\n    }\n\n    /** Sends update to some overlay / main chart\n     * @param {string} id - Overlay id\n     * @param {Object} fields - Fields to be overwritten\n     */\n    modify(id, fields) {\n        se.send('modify-overlay', { uuid:id, fields })\n    }\n\n    /** Sets the reverse buffer size for a given\n     * time-series (default = 5, grows on demand)\n     * @param {TS} src - Input\n     * @param {number} len - New length\n     */\n    buffsize(src, len) {\n        src.__len__ = len\n    }\n\n    /** Money Flow Index\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    mfi(src, len, _id) {\n        let id = this._tsid(_id, `mfi(${len})`)\n        let vol = this.env.shared.vol\n        let ch = this.change(src, 1, id+'1')[0]\n\n        let ts1 = this.mult(vol, ch <= 0.0 ? 0.0 : src[0], id+'2')\n        let ts2 = this.mult(vol, ch  >= 0.0 ? 0.0 : src[0], id+'3')\n\n        let upper = this.sum(ts1, len, id+'4')\n        let lower = this.sum(ts2, len, id+'5')\n\n        let res = undefined\n        if (!this.na(lower)) {\n            res = this.rsi(upper, lower, id+'6')[0]\n        }\n        return this.ts(res, id, src.__tf__)\n    }\n\n    /** Min of arguments\n     * @param {...number} args - Numeric values\n     * @return {number}\n     */\n    min(...args) {\n        args.pop() // Remove _id\n        return Math.min(...args)\n    }\n\n    /** Returns minutes of a given timestamp\n     * @param {number} [time] - Time in ms (current t, if not defined)\n     * @return {number} - Hour\n     */\n    minute(time) {\n        return new Date(time || se.t).getUTCMinutes()\n    }\n\n    /** Momentum\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    mom(src, len, _id) {\n        let id = this._tsid(_id, `mom(${len})`)\n        return this.ts(src[0] - src[len], id, src.__tf__)\n    }\n\n    /** Month\n     * @param {number} [time] - Time in ms (current t, if not defined)\n     * @return {number} - Day\n     */\n    month(time) {\n        return new Date(time || se.t).getUTCMonth()\n    }\n\n    // Display data point as the main chart\n    chart() {\n        // TODO: this\n    }\n\n    // TODO: optionally enable scripts for $synth ovs\n    // TODO: add indexBased option\n    /** Display data point onchart\n     * (create a new overlay in DataCube)\n     * @param {(TS|TS[]|*)} x - Data point / TS / array of TS\n     * @param {string} [name] - Overlay name\n     * @param {Object} [sett] - Object with settings & OV type\n     */\n    onchart(x, name, sett = {}, _id) {\n        let off = 0\n        name = name || u.get_fn_id('Onchart', _id)\n        if (x && x.__id__) {\n            off = x.__offset__ || 0\n            x = x[0]\n        }\n        if (Array.isArray(x) && x[0] && x[0].__id__) {\n            off = x[0].__offset__ || 0\n            x = x.map(x => x[0])\n        }\n        if (!this.env.onchart[name]) {\n            let type = sett.type\n            delete sett.type\n            sett.$synth = true\n            sett.skipNaN = true\n            let post = Array.isArray(x) ? 's': ''\n            this.env.onchart[name] = {\n                name: name,\n                type: type || 'Spline' + post,\n                data: [],\n                settings: sett,\n                scripts: false,\n                grid: sett.grid || {}\n            }\n        }\n        off *= se.tf\n        let v = Array.isArray(x) ?\n            [se.t + off, ...x] : [se.t + off, x]\n        u.update(this.env.onchart[name].data, v)\n    }\n\n    /** Display data point offchart\n     * (create a new overlay in DataCube)\n     * @param {(TS|TS[]|*)} x - Data point / TS / array of TS\n     * @param {string} [name] - Overlay name\n     * @param {Object} [sett] - Object with settings & OV type\n     */\n    offchart(x, name, sett = {}, _id) {\n        name = name || u.get_fn_id('Offchart', _id)\n        let off = 0\n        if (x && x.__id__) {\n            off = x.__offset__ || 0\n            x = x[0]\n        }\n        if (Array.isArray(x) && x[0] && x[0].__id__) {\n            off = x[0].__offset__ || 0\n            x = x.map(x => x[0])\n        }\n        if (!this.env.offchart[name]) {\n            let type = sett.type\n            delete sett.type\n            sett.$synth = true\n            sett.skipNaN = true\n            let post = Array.isArray(x) ? 's': ''\n            this.env.offchart[name] = {\n                name: name,\n                type: type || 'Spline' + post,\n                data: [],\n                settings: sett,\n                scripts: false,\n                grid: sett.grid || {}\n            }\n        }\n        off *= se.tf\n        let v = Array.isArray(x) ?\n            [se.t + off, ...x] : [se.t + off, x]\n        u.update(this.env.offchart[name].data, v)\n    }\n\n\n    /** Returns true when the candle(<tf>) is being closed\n     * (create a new overlay in DataCube)\n     * @param {(number|string)} tf - Timeframe in ms or as a string\n     * @return {boolean}\n     */\n    onclose(tf) {\n        if (!this.env.shared.onclose) return false\n        if (!tf) tf = se.tf\n        return (se.t + se.tf) % u.tf_from_str(tf) === 0\n    }\n\n    /** Sends settings update\n     * (can be called from init(), update() or post())\n     * @param {Object} upd - Settings update (object to merge)\n     */\n    settings(upd) {\n        this.env.send_modify({ settings: upd })\n        Object.assign(this.env.src.sett, upd)\n    }\n\n    /** Shifts TS left or right by \"num\" candles\n     * @param {number} num - Offset measured in candles\n     * @return {TS} - New / existing time-series\n     */\n    offset(src, num, _id) {\n        if (src.__id__) {\n            src.__offset__ = num\n            return src\n        }\n        let id = this._tsid(_id, `offset(${num})`)\n        let out = ts(src, id)\n        out.__offset__ = num\n        return out\n    }\n\n    // percentile_linear_interpolation\n    linearint() {\n        // TODO: this\n    }\n\n    // percentile_nearest_rank\n    nearestrank() {\n        // TODO: this\n    }\n\n    /** The current time\n     * @return {number} - timestamp\n     */\n    now() {\n        return new Date().getTime()\n    }\n\n    percentrank() {\n        // TODO: this\n    }\n\n    /** Returns price of the pivot high point\n     * Tip: works best with `offset` function\n     * @param {TS} src - Input\n     * @param {number} left - left threshold, candles\n     * @param {number} right - right threshold, candles\n     * @return {TS} - New time-series\n     */\n    pivothigh(src, left, right, _id) {\n        let id = this._tsid(_id, `pivothigh(${left},${right})`)\n\n        let len = left + right + 1\n        let top = src[right]\n        for (var i = 0; i < len; i++) {\n            if (top <= src[i] && i !== right) {\n                return this.ts(NaN, id, src.__tf__)\n            }\n        }\n        return this.ts(top, id, src.__tf__)\n    }\n\n    /** Returns price of the pivot low point\n     * Tip: works best with `offset` function\n     * @param {TS} src - Input\n     * @param {number} left - left threshold, candles\n     * @param {number} right - right threshold, candles\n     * @return {TS} - New time-series\n     */\n    pivotlow(src, left, right, _id) {\n        let id = this._tsid(_id, `pivotlow(${left},${right})`)\n\n        let len = left + right + 1\n        let bot = src[right]\n        for (var i = 0; i < len; i++) {\n            if (bot >= src[i] && i !== right) {\n                return this.ts(NaN, id, src.__tf__)\n            }\n        }\n        return this.ts(bot, id, src.__tf__)\n    }\n\n    /** Shortcut for Math.pow()\n     * @param {number} x The variable\n     * @return {number}\n     */\n    pow(x) {\n        return Math.pow(x)\n    }\n\n    /** Test if \"src\" TS is rising for \"len\" candles\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    rising(src, len, _id) {\n        let id = this._tsid(_id, `rising(${len})`)\n        let top = src[0]\n        for (var i = 1; i < len + 1; i++) {\n            if (top <= src[i]) {\n                return this.ts(false, id, src.__tf__)\n            }\n        }\n        return this.ts(true, id, src.__tf__)\n    }\n\n    /** Exponentially MA with alpha = 1 / length\n     * Used in RSI\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    rma(src, len, _id) {\n        let id = this._tsid(_id, `rma(${len})`)\n        let a = len\n        let sum = this.ts(0, id, src.__tf__)\n        sum[0] = this.na(sum[1]) ?\n            this.sma(src, len, id)[0] :\n            (src[0] + (a - 1) * this.nz(sum[1])) / a\n        return sum\n    }\n\n    /** Rate of Change\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    roc(src, len, _id) {\n        let id = this._tsid(_id, `roc(${len})`)\n        return this.ts(\n            100 * (src[0] - src[len]) / src[len], id, src.__tf__\n        )\n    }\n\n    /** Shortcut for Math.round()\n     * @param {number} x The variable\n     * @return {number}\n     */\n    round(x) {\n        return Math.round(x)\n    }\n\n    /** Relative Strength Index\n     * @param {TS} x - First Input\n     * @param {number|TS} y - Second Input\n     * @return {TS} - New time-series\n     */\n    rsi(x, y, _id) {\n        // Check if y is a timeseries\n        if (!this.na(y) && y.__id__) {\n            var id = this._tsid(_id, `rsi(x,y)`)\n            var rsi = 100 - 100 / (1 + this.div(x, y, id)[0])\n        } else {\n            var id = this._tsid(_id, `rsi(${y})`)\n            let ch = this.change(x, 1, _id)[0]\n            let pc = this.ts(Math.max(ch, 0), id+'1', x.__tf__)\n            let nc = this.ts(-Math.min(ch, 0), id+'2', x.__tf__)\n            let up = this.rma(pc, y, id+'3')[0]\n            let down = this.rma(nc, y, id+'4')[0]\n            var rsi = down === 0 ? 100 : (\n                up === 0 ? 0 : (100 - (100 / (1 + up / down)))\n            )\n        }\n        return this.ts(rsi, id+'5', x.__tf__)\n    }\n\n    /** Parabolic SAR\n     * @param {number} start - Start\n     * @param {number} inc - Increment\n     * @param {number} max - Maximum\n     * @return {TS} - New time-series\n     */\n    sar(start, inc, max, _id, _tf) {\n        // Source: Parabolic SAR by imuradyan\n        // TODO: simplify the code\n        // TODO: fix the custom TF mode\n        let id = this._tsid(_id, `sar(${start},${inc},${max})`)\n        let tfs = _tf || ''\n        let high = this.env.shared[`high${tfs}`]\n        let low = this.env.shared[`low${tfs}`]\n        let close = this.env.shared[`close${tfs}`]\n\n        let minTick = 0 //1e-7\n        let out = this.ts(undefined, id+'1', _tf)\n        let pos = this.ts(undefined, id+'2', _tf)\n        let maxMin = this.ts(undefined, id+'3', _tf)\n        let acc = this.ts(undefined, id+'4', _tf)\n        let n = _tf ? out.__len__ - 1 : se.iter\n        let prev\n        let outSet = false\n\n        if (n >= 1) {\n            prev = out[1]\n            if (n === 1) {\n                if (close[0] > close[1]) {\n                    pos[0] = 1\n                    maxMin[0] = Math.max(high[0], high[1])\n                    prev = Math.min(low[0], low[1])\n                } else {\n                    pos[0] = -1\n                    maxMin[0] = Math.min(low[0], low[1])\n                    prev = Math.max(high[0], high[1])\n                }\n                acc[0] = start\n            } else {\n                pos[0] = pos[1]\n                acc[0] = acc[1]\n                maxMin[0] = maxMin[1]\n            }\n            if (pos[0] === 1) {\n                if (high[0] > maxMin[0]) {\n                    maxMin[0] = high[0]\n                    acc[0] = Math.min(acc[0] + inc, max)\n                }\n                if (low[0] <= prev) {\n                    pos[0] = -1\n                    out[0] = maxMin[0]\n                    maxMin[0] = low[0]\n                    acc[0] = start\n                    outSet = true\n                }\n            } else {\n                if (low[0] < maxMin[0]) {\n                    maxMin[0] = low[0]\n                    acc[0] = Math.min(acc[0] + inc, max)\n                }\n\n                if (high[0] >= prev) {\n                    pos[0] = 1\n                    out[0] = maxMin[0]\n                    maxMin[0] = high[0]\n                    acc[0] = start\n                    outSet = true\n                }\n            }\n\n            if (!outSet) {\n                out[0] = prev + acc[0] * (maxMin[0] - prev)\n\n                if (pos[0] === 1)\n                    if (out[0] >= low[0])\n                        out[0] = low[0] - minTick\n\n\n                if (pos[0] === -1)\n                    if (out[0] <= high[0])\n                        out[0] = high[0] + minTick\n            }\n        }\n        return out\n    }\n\n    /** Returns seconds of a given timestamp\n     * @param {number} [time] - Time in ms (current t, if not defined)\n     * @return {number} - Hour\n     */\n    second(time) {\n        return new Date(time || se.t).getUTCSeconds()\n    }\n\n    /** Shortcut for Math.sing()\n     * @param {number} x The variable\n     * @return {number}\n     */\n    sign(x) {\n        return Math.sign(x)\n    }\n\n    /** Sine function\n     * @param {number} x The variable\n     * @return {number}\n     */\n    sin(x) {\n        return Math.sin(x)\n    }\n\n    /** Simple Moving Average\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    sma(src, len, _id) {\n        let id = this._tsid(_id, `sma(${len})`)\n        let sum = 0\n        for (var i = 0; i < len; i++) {\n            sum = sum + src[i]\n        }\n        return this.ts(sum / len, id, src.__tf__)\n    }\n\n    /** Shortcut for Math.sqrt()\n     * @param {number} x The variable\n     * @return {number}\n     */\n    sqrt(x) {\n        return Math.sqrt(x)\n    }\n\n    /** Standard deviation\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    stdev(src, len, _id) {\n\n        let sumf = (x, y) => {\n            let res = x + y\n            return res\n        }\n\n        let id = this._tsid(_id, `stdev(${len})`)\n        let avg = this.sma(src, len, id)\n        let sqd = 0\n        for (var i = 0; i < len; i++) {\n            let sum = sumf(src[i], -avg[0])\n            sqd += sum * sum\n        }\n        return this.ts(Math.sqrt(sqd / len), id, src.__tf__)\n    }\n\n    /** Stochastic\n     * @param {TS} src - Input\n     * @param {TS} high - TS of high\n     * @param {TS} low - TS of low\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    stoch(src, high, low, len, _id) {\n        let id = this._tsid(_id, `sum(${len})`)\n        let x = 100 * (src[0] - this.lowest(low, len)[0])\n        let y = this.highest(high, len)[0] - this.lowest(low, len)[0]\n        return this.ts(x / y, id, src.__tf__)\n    }\n\n    /** Returns the sliding sum of last \"len\" values of the source\n     * @param {TS} src - Input\n     * @param {number} len - Length\n     * @return {TS} - New time-series\n     */\n    sum(src, len, _id) {\n        let id = this._tsid(_id, `sum(${len})`)\n        let sum = 0\n        for (var i = 0; i < len; i++) {\n            sum = sum + src[i]\n        }\n        return this.ts(sum, id, src.__tf__)\n    }\n\n    /** Supertrend Indicator\n     * @param {number} factor - ATR multiplier\n     * @param {number} atrlen - Length of ATR\n     * @return {TS[]} - Supertrend line and direction of trend\n     */\n    supertrend(factor, atrlen, _id, _tf) {\n        let id = this._tsid(_id, `supertrend(${factor},${atrlen})`)\n        let tfs = _tf || ''\n        let high = this.env.shared[`high${tfs}`]\n        let low = this.env.shared[`low${tfs}`]\n        let close = this.env.shared[`close${tfs}`]\n        let hl2 = (high[0] + low[0]) * 0.5\n\n        let atr = factor * this.atr(atrlen, id+'1', _tf)[0]\n\n        let ls = this.ts(hl2 - atr, id+'2', _tf)\n        let ls1 = this.nz(ls[1], ls[0])\n        ls[0] = close[1] > ls1 ? Math.max(ls[0], ls1) : ls[0]\n\n        let ss = this.ts(hl2 + atr, id+'3', _tf)\n        let ss1 = this.nz(ss[1], ss)\n        ss[0] = close[1] < ss1 ? Math.min(ss[0], ss1) : ss[0]\n\n        let dir = this.ts(1, id+'4', _tf)\n        dir[0] = this.nz(dir[1], dir[0])\n        dir[0] = dir[0] === -1 && close[0] > ss1 ? 1 :\n            (dir[0] === 1 && close[0] < ls1 ? -1 : dir[0])\n\n        let plot = this.ts(dir[0] === 1 ? ls[0] : ss[0], id+'5', _tf)\n        return [plot, this.neg(dir, id+'6')]\n    }\n\n    /** Symmetrically Weighted Moving Average\n     * @param {TS} src - Input\n     * @return {TS} - New time-series\n     */\n    swma(src, _id) {\n        let id = this._tsid(_id, `swma`)\n        let sum = src[3] * this.SWMA[0] + src[2] * this.SWMA[1] +\n                  src[1] * this.SWMA[2] + src[0] * this.SWMA[3]\n        return this.ts(sum, id, src.__tf__)\n    }\n\n    /** Creates a new Symbol.\n     * @param {*} x - Something, depends on arg variation\n     * @param {*} y - Something, depends on arg variation\n     * @return {Sym}\n     * Argument variations:\n     * <data>(Array), [<params>(Object)]\n     * <ts>(TS), [<params>(Object)]\n     * <point>(Number), [<params>(Object)]\n     * <tf>(String) 1m, 5m, 1H, etc. (uses main OHLCV)\n     * Params object: {\n     *  id: <String>,\n     *  tf: <String|Number>,\n     *  aggtype: <String> (TODO: Type of aggregation)\n     *  format: <String> (Data format, e.g. \"time:price:vol\")\n     *  window: <String|Number> (Aggregation window)\n     *  main <true|false> (Use as the main chart)\n     * }\n     */\n    sym(x, y = {}, _id) {\n        let id = y.id || this._tsid(_id, `sym`)\n        y.id = id\n        if (this.env.syms[id]) {\n            this.env.syms[id].update(x)\n            return this.env.syms[id]\n        }\n\n        switch(typeof x) {\n            case 'object':\n                var sym = new Sym(x, y)\n                this.env.syms[id] = sym\n                if (x.__id__) {\n                    sym.data_type = TSS\n                } else {\n                    sym.data_type = ARR\n                }\n\n                break\n            case 'number':\n                sym = new Sym(null, y)\n                sym.data_type = NUM\n                break\n            case 'string':\n                y.tf = x\n                sym = new Sym(se.data.ohlcv.data, y)\n                sym.data_type = ARR\n                break\n        }\n\n        this.env.syms[id] = sym\n        return sym\n    }\n\n    /** Tangent function\n     * @param {number} x The variable\n     * @return {number}\n     */\n    tan(x) {\n        return Math.tan(x)\n    }\n\n    time(res, sesh) {\n        // TODO: this\n    }\n\n    timestamp() {\n        // TODO: this\n    }\n\n    /** True Range\n     * @param {TS} fixnan - Fix NaN values\n     * @return {TS} - New time-series\n     */\n    tr(fixnan = false, _id, _tf) {\n        let id = this._tsid(_id, `tr(${fixnan})`)\n        let tfs = _tf || ''\n        let high = this.env.shared[`high${tfs}`]\n        let low = this.env.shared[`low${tfs}`]\n        let close = this.env.shared[`close${tfs}`]\n        let res = 0\n        if (this.na(close[1]) && fixnan) {\n            res = high[0] - low[0]\n        } else {\n            res = Math.max(\n                high[0] - low[0],\n                Math.abs(high[0] - close[1]),\n                Math.abs(low[0] - close[1])\n            )\n        }\n\n        return this.ts(res, id, _tf)\n\n    }\n\n    /** True strength index\n     * @param {TS} src - Input\n     * @param {number} short - Short length\n     * @param {number} long - Long length\n     * @return {TS} - New time-series\n     */\n    tsi(src, short, long, _id) {\n        let id = this._tsid(_id, `tsi(${short},${long})`)\n        let m = this.change(src, 1, id+'0')\n        let m_abs = this.ts(Math.abs(m[0]), id+'1', src.__tf__)\n        let tsi = (\n            this.ema(this.ema(m, long, id+'1'), short, id+'2')[0] /\n            this.ema(this.ema(m_abs, long, id+'3'), short, id+'4')[0]\n        )\n        return this.ts(tsi, id, src.__tf__)\n    }\n\n    variance(src, len) {\n        // TODO: this\n    }\n\n    vwap(src) {\n        // TODO: this\n    }\n\n    /** Volume Weighted Moving Average\n     * @param {TS} src - Input\n     * @param {number} len - length\n     * @return {TS} - New time-series\n     */\n    vwma(src, len, _id) {\n        let id = this._tsid(_id, `vwma(${len})`)\n        let vol = this.env.shared.vol\n        let sxv = this.ts(src[0] * vol[0], id+'1', src.__tf__)\n        let res =\n            this.sma(sxv, len, id+'2')[0] /\n            this.sma(vol, len, id+'3')[0]\n        return this.ts(res, id+'4', src.__tf__)\n    }\n\n    /** Week of year, literally\n     * @param {number} [time] - Time in ms (current t, if not defined)\n     * @return {number} - Week\n     */\n    weekofyear(time) {\n        let date = new Date(time || se.t)\n        date.setUTCHours(0, 0, 0, 0)\n        date.setDate(date.getUTCDate() + 3 - (date.getUTCDay() + 6) % 7)\n        let week1 = new Date(date.getUTCFullYear(), 0, 4)\n        return 1 + Math.round(\n            ((date - week1) / 86400000 - 3 +\n            (week1.getUTCDay() + 6) % 7) / 7\n        )\n    }\n\n    /** Weighted moving average\n     * @param {TS} src - Input\n     * @param {number} len - length\n     * @return {TS} - New time-series\n     */\n    wma(src, len, _id) {\n        let id = this._tsid(_id, `wma(${len})`)\n        let norm = 0\n        let sum = 0\n        for (var i = 0; i < len; i++) {\n            let w = (len - i) * len\n            norm += w\n            sum += src[i] * w\n        }\n        return this.ts(sum / norm, id, src.__tf__)\n    }\n\n    /** Williams %R\n     * @param {number} len - length\n     * @return {TS} - New time-series\n     */\n    wpr(len, _id, _tf) {\n        let id = this._tsid(_id, `wpr(${len})`)\n        let tfs = _tf || ''\n        let high = this.env.shared[`high${tfs}`]\n        let low = this.env.shared[`low${tfs}`]\n        let close = this.env.shared[`close${tfs}`]\n\n        let hh = this.highest(high, len, id)\n        let ll = this.lowest(low, len, id)\n\n        let res = (hh[0] - close[0]) / (hh[0] - ll[0])\n        return this.ts(-res * 100 , id, _tf)\n    }\n\n    /** Year\n     * @param {number} [time] - Time in ms (current t, if not defined)\n     * @return {number} - Year\n     */\n    year(time) {\n        return new Date(time || se.t).getUTCFullYear()\n    }\n\n}\n","\n// Script environment. Packs everything that\n// needed for a script execution together:\n// script src, standart functions, input data,\n// other overlays & dependencies\n\nimport ScriptStd from './script_std.js'\nimport se from './script_engine.js'\nimport * as u from './script_utils.js'\nimport TS from './script_ts.js'\n\nconst FDEFS1 = /(function |)([$A-Z_][0-9A-Z_$\\.]*)[\\s]*?\\((.*?\\s*)\\)/mi\nconst FDEFS2 = /(function |)([$A-Z_][0-9A-Z_$\\.]*)[\\s]*?\\((.*\\s*)\\)/gmis\nconst DEF_LIMIT = 5\n\nexport default class ScriptEnv {\n\n    constructor(s, data) {\n\n        this.std = se.std_inject(new ScriptStd(this))\n        this.id = s.uuid\n        this.src = s\n        this.output = TS('output', [])\n        this.data = []\n        this.tss = {}\n        this.syms = {}\n        this.shared = data\n        this.output.box_maker = this.make_box(s.src)\n        this.onchart = {}\n        this.offchart = {}\n    }\n\n    build() {\n        this.output.box_maker(this, this.shared, se)\n        delete this.output.box_maker\n    }\n\n    init() {\n        this.output.init()\n    }\n\n    step(unshift = true) {\n        if (unshift) this.unshift()\n        let v = this.output.update()\n        this.copy(v, unshift)\n        this.limit()\n    }\n\n    unshift() {\n        this.output.unshift(undefined)\n        // Update all temp symbols\n        for (var id in this.tss) {\n            if (this.tss[id].__tf__) continue\n            this.tss[id].unshift(undefined)\n        }\n    }\n\n    // Limit env.output length\n    limit() {\n        let out = this.output\n        out.length = out.__len__ || DEF_LIMIT\n        for (var id in this.tss) {\n            let ts = this.tss[id]\n            //console.log(ts.__id__, ts.__len__)\n            ts.length = ts.__len__ || DEF_LIMIT\n        }\n    }\n\n    // Copy the recent value to the direct buff\n    copy(v, unshift = true) {\n        let off = this.output.__offset__\n        if (v != undefined) {\n            this.output[0] = v.__id__ ? v[0] : v\n            off = off || v.__offset__\n        }\n        let val = this.output[0]\n        let t = se.t\n        if (off) t += off * se.tf\n        if (val == null || !val.length) {\n            // Number / object\n            var point = [t, val]\n        } else {\n            // Array\n            point = [t, ...val]\n        }\n        if (unshift) {\n            this.data.push(point)\n        } else {\n            this.data[this.data.length - 1] = point\n        }\n    }\n\n    // A small sandbox for a particular script\n    // TODO: add support of 'Source' prop type (open, high, hl2 ...)\n    make_box(src) {\n\n        let proto = Object.getPrototypeOf(this.std)\n        let std = ``\n        for (var k of Object.getOwnPropertyNames(proto)) {\n            if (k === 'constructor') continue\n            std += `const std_${k} = self.std.${k}.bind(self.std)\\n`\n        }\n\n        let props = ``\n        for (var k in src.props || {}) {\n            if (src.props[k].val !== undefined) {\n                var val = src.props[k].val\n            } else if (this.src.sett[k] !== undefined) {\n                val = this.src.sett[k]\n            } else {\n                val = src.props[k].def\n            }\n            props += `var ${k} = ${JSON.stringify(val)}\\n`\n        }\n        // TODO: add argument values to _id\n\n        let tss = ``\n        for (var k in this.shared) {\n            if (this.shared[k] && this.shared[k].__id__) {\n                tss += `const ${k} = shared.${k}\\n`\n            }\n        }\n\n        // Datasets\n        let dss = ``\n        for (var k in src.data || {}) {\n            let id = se.match_ds(this.id, src.data[k].type)\n            if (!this.shared.dss[id]) {\n                let T = src.data[k].type\n                console.warn(`Dataset '${T}' is undefined`)\n                continue\n            }\n            dss += `const ${k} = shared.dss['${id}'].data\\n`\n        }\n\n        try {\n            return Function('self,shared,se', `\n                'use strict';\n\n                // Built-in functions (aliases)\n                ${std}\n\n                // Modules (API / interfaces)\n                ${this.make_modules()}\n\n                // Timeseries\n                ${tss}\n\n                // Direct data ts\n                const data = self.data\n                const ohlcv = shared.dss.ohlcv.data\n                ${dss}\n\n                // Script's properties (init)\n                ${props}\n\n                // Globals\n                const settings = self.src.sett\n                const tf = shared.tf\n                const range = shared.range\n\n                this.init = (_id = 'root') => {\n                    ${this.prep(src.init_src)}\n                }\n\n                this.update = (_id = 'root') => {\n                    const t = shared.t()\n                    const iter = shared.iter()\n                    ${this.prep(src.upd_src)}\n                }\n\n                this.post = (_id = 'root') => {\n                    ${this.prep(src.post_src)}\n                }\n            `)\n        } catch(e) {\n            return Function('self,shared', `\n                'use strict';\n                this.init = () => {}\n                this.update = () => {}\n                this.post = () => {}\n            `)\n        }\n    }\n\n    // Make definitions for modules\n    make_modules() {\n        let s = ``\n        for (var id in se.mods) {\n            if (!se.mods[id].api) continue\n            s += `const ${id} = se.mods['${id}'].api[self.id]`\n            s += '\\n'\n        }\n        return s\n    }\n\n    // Preprocess the update function.\n    // Replace functions with the full arguments list +\n    // generate & add tsid\n    // TODO: implement recursive prepping (with js syntax parser)\n    prep(src) {\n\n        // console.log('Before -----> \\n', src)\n\n        let h = this.src.use_for[0] // TODO: add props here\n        src = '\\t\\t  let _pref = `${_id}<-'+h+'<-`\\n' + src\n\n        FDEFS2.lastIndex = 0\n        let call_id = 0 // Function call id (to make each call unique)\n\n        do {\n            var m = FDEFS2.exec(src)\n            if (m) {\n                let fkeyword = m[1].trim()\n                let fname = m[2]\n                let fargs = m[3]\n\n                if (fkeyword === 'function') {\n                    // TODO: add _ids to inline functions\n                } else {\n                    let off = m.index + m[0].indexOf('(')\n                    if (this.std[fname]) {\n                        src = this.postfix(src, m, ++call_id)\n                        //console.log(src)\n                        off+=4 // 'std_'\n                    }\n                    // Quick fix\n                    FDEFS2.lastIndex = off\n                }\n            }\n        } while (m)\n\n        // console.log('After ----->\\n', u.wrap_idxs(src))\n\n        return u.wrap_idxs(src, 'std_')\n    }\n\n    // Postfix function calls with ts _ids\n    postfix(src, m, call_id) {\n\n        let target = this.get_args(this.fdef(m[2])).length\n        let m0 = this.parentheses(m[0]) // First closed pair\n        let args = this.get_args_2(m0)\n        for (var i = args.length; i < target; i++) {\n            args.push('void 0')\n        }\n\n        // Add an unique time-series id\n        args.push(`_pref+\"f${call_id}\"`)\n\n        return src.replace(m0, `std_${m[2]}(${args.join(', ')})`)\n\n    }\n\n    parentheses(str) {\n        var count = 0, first = false\n        for (var i = 0; i < str.length; i++) {\n            if (str[i] === '(') {\n                count++\n                first = true\n            } else if (str[i] === ')') {\n                count--\n            }\n            if (first && count === 0) {\n                return str.substr(0, i+1)\n            }\n        }\n        return str\n    }\n\n    // Get the function definition\n    // TODO: add support of modules\n    fdef(fname) {\n        return this.std[fname].toString()\n    }\n\n    // Get args in the function's definition\n    get_args(src) {\n        let reg = this.regex_clone(FDEFS1)\n        reg.lastIndex = 0\n\n        let m = reg.exec(src)\n        if (!m[3].trim().length) return []\n        let arr = m[3].split(',')\n            .map(x => x.trim())\n            .filter(x => x !== '_id' && x !== '_tf')\n        return arr\n    }\n\n    get_args_2(str) {\n        let parts = []\n        let c = 0\n        let s = 0\n        var q1 = false, q2 = false, q3 = false\n        let part\n        for (var i = 0; i < str.length; i++) {\n            if (str[i] === '(') {\n                c++\n                if (!part) part = [i+1]\n            }\n            if (str[i] === ')') c--\n            if (str[i] === '[') s++\n            if (str[i] === ']') s--\n            if (str[i] === \"'\") q1 = !q1\n            if (str[i] === '\"') q2 = !q2\n            if (str[i] === '`') q3 = !q3\n            if (str[i] === ',' && c === 1 && !s && !q1 && !q2 && !q3) {\n                if (part) {\n                    part[1] = i\n                    parts.push(part)\n                    part = [i+1]\n                }\n            }\n            if (c === 0 && part) {\n                part[1] = i\n                parts.push(part)\n                part = null\n            }\n        }\n        return parts.map(x => str.slice(...x))\n            .filter(x => /[^\\s]+/.exec(x))\n    }\n\n    regex_clone(rex) {\n        return new RegExp(rex.source, rex.flags)\n    }\n\n    send_modify(upd) {\n        se.send('modify-overlay', {\n            uuid: this.id,\n            fields: upd\n        })\n    }\n}\n","\n// Parse non-default symbols, e.g. close1D, hlc3\n// & inject the corresponding TSs or samplers\n\nimport TS from './script_ts.js'\nimport Sampler from './sampler.js'\nimport se from './script_engine.js'\nimport * as u from './script_utils.js'\nimport ScriptStd from './script_std.js'\n\nconst SYMTF = /(open|high|low|close|vol)(\\d+)(\\w*)/gm\nconst FNSTD = /(a?tr|kcw?|dmi|sar|supertrend|wpr)(\\d+?\\w*)\\s*\\(/gm\nconst SYMSTD = /(?:hl2|hlc3|ohlc4)/gm\n\nexport default {\n\n    parse(s) {\n        let ss = s.src\n        let all = `${ss.init_src}\\n${ss.upd_src}\\n${ss.post_src}`\n\n        SYMTF.lastIndex = 0\n        FNSTD.lastIndex = 0\n        SYMSTD.lastIndex = 0\n\n        do {\n            var m = SYMTF.exec(all)\n            if (m) {\n                if (m[0] in se.tss) continue\n                let ts = se.tss[m[0]] = TS(m[0], [])\n                ts.__tf__ = u.tf_from_pair(m[2], m[3])\n                ts.__fn__ = Sampler(m[1], true).bind(ts)\n            }\n        } while (m)\n\n        do {\n            var m = SYMSTD.exec(all)\n            if (m) {\n                if (m[0] in se.tss) continue\n                this.parse_ts_sym(m[0])\n            }\n        } while (m)\n\n        do {\n            var m = FNSTD.exec(all)\n            if (m) {\n                let fn = m[1] + m[2]\n                let tf = m[2]\n                if (fn in se.std_plus) continue\n                switch(m[1]){\n                    case 'tr':\n                        this.deps(['high', 'low', 'close'], m[2])\n                        se.std_plus[fn] = function(fixnan = false, _id) {\n                            return this.tr(fixnan, _id, tf)\n                        }\n                        break\n                    case 'atr':\n                        this.deps(['high', 'low', 'close'], m[2])\n                        se.std_plus[fn] = function(len, _id) {\n                            return this.atr(len, _id, tf)\n                        }\n                        break\n                    case 'kc':\n                        this.deps(['high', 'low', 'close'], m[2])\n                        se.std_plus[fn] = function(src, len, mult,\n                            use_tr = true, _id) {\n                            return this.kc(src, len, mult, use_tr, _id, tf)\n                        }\n                        break\n                    case 'kcw':\n                        this.deps(['high', 'low', 'close'], m[2])\n                        se.std_plus[fn] = function(src, len, mult,\n                            use_tr = true, _id) {\n                            return this.kcw(src, len, mult, use_tr, _id, tf)\n                        }\n                        break\n                    case 'dmi':\n                        this.deps(['high', 'low', 'close'], m[2])\n                        se.std_plus[fn] = function(len, smooth, _id) {\n                            return this.dmi(len, smooth, _id, tf)\n                        }\n                        break\n                    case 'sar':\n                        this.deps(['high', 'low', 'close'], m[2])\n                        se.std_plus[fn] = function(start, inc, max, _id) {\n                            return this.sar(start, inc, max, _id, tf)\n                        }\n                        break\n                    case 'supertrend':\n                        this.deps(['high', 'low', 'close'], m[2])\n                        se.std_plus[fn] = function(factor, atrlen, _id) {\n                            return this.supertrend(factor, atrlen, _id, tf)\n                        }\n                        break\n                    case 'wpr':\n                        this.deps(['high', 'low', 'close'], m[2])\n                        se.std_plus[fn] = function(len, _id) {\n                            return this.wpr(len, _id, tf)\n                        }\n                        break\n                }\n            }\n        } while (m)\n    },\n\n    parse_ts_sym(sym, tf) {\n        switch(sym) {\n            // Timeseries\n            case 'hl2':\n                se.tss['hl2'] = TS('hl2', [])\n                se.tss['hl2'].__fn__ = () => {\n                    return (\n                        se.high[0] +\n                        se.low[0]) * 0.5\n                }\n                break\n            case 'hlc3':\n                se.tss['hlc3'] = TS('hlc3', [])\n                se.tss['hlc3'].__fn__ = () => {\n                    return (\n                        se.high[0] +\n                        se.low[0] +\n                        se.close[0]) / 3\n                }\n                break\n            case 'ohlc4':\n                se.tss['ohlc4'] = TS('ohlc4', [])\n                se.tss['ohlc4'].__fn__ = () => {\n                    return (\n                        se.open[0] +\n                        se.high[0] +\n                        se.low[0] +\n                        se.close[0]) * 0.25\n                }\n                break\n        }\n    },\n    deps(types, tf) {\n        for (var type of types) {\n            let sym = type + tf\n            if (sym in se.tss) continue\n            let ts = se.tss[sym] = TS(sym, [])\n            ts.__tf__ = u.tf_from_str(tf)\n            ts.__fn__ = Sampler(type, true).bind(ts)\n        }\n    }\n}\n","\n// Script engine, Fuck yeah\n\nimport ScriptEnv from './script_env.js'\nimport Utils from '../stuff/utils.js'\nimport * as u from './script_utils.js'\nimport symstd from './symstd.js'\nimport TS from './script_ts.js'\n\nconst DEF_LIMIT = 5   // default buff length\nconst WAIT_EXEC = 10  // merge script execs, ms\n\nclass ScriptEngine {\n\n    constructor() {\n        this.map = {}\n        this.data = {}\n        this.exec_id = null\n        this.queue = []         // Script exec queue\n        this.delta_queue = []   // Settings queue\n        this.update_queue = []  // Live update queue\n        this.sett = {}\n        this.state = {}\n        this.mods = {}          // Modules (extensions)\n        this.std_plus = {}      // Functions to inject\n        this.tf = undefined     // Main chart TF\n    }\n\n    exec_all() {\n\n        clearTimeout(this.exec_id)\n\n        // Wait for the data\n        if (!this.data.ohlcv) return\n\n        // Execute queue after all scripts & data are loaded\n        this.exec_id = setTimeout(async () => {\n\n            if (!this.init_state(Object.keys(this.map))) {\n                return\n            }\n            this.re_init_map()\n\n            while (this.queue.length) {\n                this.exec(this.queue.shift())\n            }\n\n            if (Object.keys(this.map).length) {\n                await this.run()\n                this.drain_queues()\n            }\n\n            this.send_state()\n\n        }, WAIT_EXEC)\n    }\n\n    // Exec selected\n    async exec_sel(delta) {\n\n        // Wait for the data\n        // TODO: Check data requirements\n        if (!this.data.ohlcv) return\n\n        let sel = Object.keys(delta).filter(x => x in this.map)\n\n        if (!this.init_state(sel)) {\n            this.delta_queue.push(delta)\n            return\n        }\n\n        for (var id in delta) {\n            if (!this.map[id]) continue\n\n            let props = this.map[id].src.props || {}\n            for (var k in props) {\n                if (k in delta[id]) {\n                    props[k].val = delta[id][k]\n                }\n            }\n\n            this.exec(this.map[id])\n\n        }\n\n        await this.run(sel)\n        this.drain_queues()\n        this.send_state()\n\n    }\n\n    // Exec script (create a new ScriptEnv, add to the map)\n    exec(s) {\n\n        if (!s.src.conf) s.src.conf = {}\n\n        if (s.src.init) {\n            s.src.init_src = u.get_raw_src(s.src.init)\n        }\n        if (s.src.update) {\n            s.src.upd_src = u.get_raw_src(s.src.update)\n        }\n        if (s.src.post) {\n            s.src.post_src = u.get_raw_src(s.src.post)\n        }\n\n        // Parse non-default symbols\n        symstd.parse(s)\n\n        for (var id in this.mods) {\n            if (this.mods[id].pre_env) {\n                this.mods[id].pre_env(s.uuid, s)\n            }\n        }\n\n        s.env = new ScriptEnv(s, Object.assign(this.shared, {\n            open: this.open,\n            high: this.high,\n            low: this.low,\n            close: this.close,\n            vol: this.vol,\n            dss: this.data,\n            t: () => this.t,\n            iter: () => this.iter,\n            tf: this.tf,\n            range: this.range,\n            onclose: true\n        }, this.tss))\n\n        this.map[s.uuid] = s\n\n        for (var id in this.mods) {\n            if (this.mods[id].new_env) {\n                this.mods[id].new_env(s.uuid, s)\n            }\n        }\n\n        // Build te box after mod's interfaces injected\n        s.env.build()\n    }\n\n    // Live update\n    update(candles) {\n\n        if (!this.data.ohlcv || !this.data.ohlcv.data.length) {\n            return\n        }\n\n        if (this.running) {\n            this.update_queue.push(candles)\n            return\n        }\n\n        let mfs1 = this.make_mods_hooks('pre_step')\n        let mfs2 = this.make_mods_hooks('post_step')\n\n        let step = (sel, unshift) => {\n            for (var m = 0; m < mfs1.length; m++) {\n                mfs1[m](sel) // pre_step\n            }\n\n            for (var id of sel) {\n                this.map[id].env.step(unshift)\n            }\n\n            for (var m = 0; m < mfs2.length; m++) {\n                mfs2[m](sel) // post_step\n            }\n        }\n\n        try {\n            let ohlcv = this.data.ohlcv.data\n            let i = ohlcv.length - 1\n            let last = ohlcv[i]\n            let sel = Object.keys(this.map)\n            let unshift = false\n            this.shared.event = 'update'\n\n            for (var candle of candles) {\n                if (candle[0] > last[0]) {\n                    this.shared.onclose = true\n                    step(sel, false) // On candle close\n                    ohlcv.push(candle)\n                    unshift = true\n                    i++\n                } else if (candle[0] < last[0]) {\n                    continue\n                } else {\n                    ohlcv[i] = candle\n                }\n            }\n\n            this.iter = i\n            this.t = ohlcv[i][0]\n            this.step(ohlcv[i], unshift)\n\n            this.shared.onclose = false\n            step(sel, unshift)\n\n            this.limit()\n            this.send_update()\n            this.send_state()\n\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    init_state(sel) {\n\n        let task = sel.join(',')\n\n        // Stop previous run only if the task is the same\n        if (this.running) {\n            this._restart = (task === this.task)\n            return false\n        }\n\n        // Inverted arrays\n        this.open = TS('open', [])\n        this.high = TS('high', [])\n        this.low = TS('low', [])\n        this.close = TS('close', [])\n        this.vol = TS('vol', [])\n\n        // Shared TSs & user vars\n        this.tss = {}\n        this.std_plus = {}\n        this.shared = {}\n\n        // Engine state\n        this.iter = 0\n        this.t = 0\n        this.skip = false // skip the step\n        this.running = true\n        this.task = task\n\n        return true\n    }\n\n    // Inject/override functions in the std lib object\n    std_inject(std) {\n        let proto = Object.getPrototypeOf(std)\n        Object.assign(proto, this.std_plus)\n        return std\n    }\n\n    send_state() {\n        this.send('engine-state', {\n            scripts: Object.keys(this.map).length,\n            last_perf: this.perf,\n            iter: this.iter,\n            last_t: this.t,\n            data_size: this.data_size,\n            running: false\n        })\n    }\n\n    send_update() {\n        this.send(\n            'overlay-update', this.format_update()\n        )\n    }\n\n    re_init_map() {\n        for (var id in this.map) {\n            this.exec(this.map[id])\n        }\n    }\n\n    async run(sel) {\n\n        this.send('engine-state', { running: true })\n\n        var t1 = Utils.now()\n        sel = sel || Object.keys(this.map)\n\n        this.pre_run_mods(sel)\n        let mfs1 = this.make_mods_hooks('pre_step')\n        let mfs2 = this.make_mods_hooks('post_step')\n\n        try {\n\n            for (var id of sel) {\n                this.map[id].env.init()\n            }\n\n            let ohlcv = this.data.ohlcv.data\n            let start = this.start(ohlcv)\n            this.shared.event = 'step'\n\n            for (var i = start; i < ohlcv.length; i++) {\n\n                // Make a pause to read new WW msg\n                // TODO: speedup pause()\n                // TODO: emit progress %\n                if (i % 5000 === 0) await Utils.pause(0)\n                if (this.restarted()) return\n\n                this.iter = i - start\n                this.t = ohlcv[i][0]\n                this.step(ohlcv[i])\n                this.shared.onclose = i !== ohlcv.length - 1\n\n                // SLOW DOWN TEST:\n                //for (var k = 1; k < 1000000; k++) {}\n                for (var m = 0; m < mfs1.length; m++) {\n                    mfs1[m](sel) // pre_step\n                }\n\n                for (var id of sel) this.map[id].env.step()\n\n                for (var m = 0; m < mfs2.length; m++) {\n                    mfs2[m](sel) // post_step\n                }\n\n                if (this.custom_main) this.make_ohlcv()\n                this.limit()\n            }\n\n            for (var id of sel) {\n                this.map[id].env.output.post()\n            }\n\n        } catch(e) {\n            console.log(e)\n        }\n\n        this.post_run_mods(sel)\n\n        this.perf = Utils.now() - t1\n        this.running = false\n\n        this.send('overlay-data', this.format_map(sel))\n    }\n\n    step(data, unshift = true) {\n        if (unshift) {\n            this.open.unshift(data[1])\n            this.high.unshift(data[2])\n            this.low.unshift(data[3])\n            this.close.unshift(data[4])\n            this.vol.unshift(data[5])\n            for (var id in this.tss) {\n                if (this.tss[id].__tf__) this.tss[id].__fn__()\n                else this.tss[id].unshift(this.tss[id].__fn__())\n            }\n        } else {\n            this.open[0] = data[1]\n            this.high[0] = data[2]\n            this.low[0] = data[3]\n            this.close[0] = data[4]\n            this.vol[0] = data[5]\n            for (var id in this.tss) {\n                if (this.tss[id].__tf__) this.tss[id].__fn__()\n                else this.tss[id][0] = this.tss[id].__fn__()\n            }\n        }\n    }\n\n\n    limit() {\n        this.open.length = this.open.__len__ || DEF_LIMIT\n        this.high.length = this.high.__len__ || DEF_LIMIT\n        this.low.length = this.low.__len__ || DEF_LIMIT\n        this.close.length = this.close.__len__ || DEF_LIMIT\n        this.vol.length = this.vol.__len__ || DEF_LIMIT\n    }\n\n    start(ohlcv) {\n        let depth = this.sett.script_depth\n        return depth ?\n            Math.max(ohlcv.length - depth, 0) : 0\n    }\n\n    drain_queues() {\n\n        // Check if there are any new scripts (recieved during\n        // the current run)\n        if (this.queue.length) {\n            this.exec_all()\n        }\n        // Check if there are any new settings deltas (...)\n        else if (this.delta_queue.length) {\n            this.exec_sel(this.delta_queue.pop())\n            this.delta_queue = []\n        }\n        else {\n            while (this.update_queue.length) {\n                let c = this.update_queue.shift()\n                this.update(c)\n            }\n        }\n    }\n\n    format_map(sel, range, output) {\n        sel = sel || Object.keys(this.map)\n        let res = []\n        for (var id of sel) {\n            let x = this.map[id]\n            let f = x => x\n            if ((x.output === false || x.output === 'none') &&\n                !output) {\n                res.push({id: id, data: null})\n                continue\n            }\n            if (x.output === 'range' || range) {\n                var [t1, t2] = range || this.range\n                f = x => x.filter(\n                    y => y[0] >= t1 && y[0] <= t2\n                )\n            }\n            res.push({\n                id: id, data: f(x.env.data), new_ovs: {\n                    onchart: u.ovf(x.env.onchart, f),\n                    offchart: u.ovf(x.env.offchart, f)\n                }\n            })\n        }\n        if (this.custom_main) {\n            res.push({\n                id: 'chart',\n                data: this.data.ohlcv.data\n            })\n        }\n        return res\n    }\n\n    format_update() {\n        let res = []\n        for (var id in this.map) {\n            let x = this.map[id]\n            if (x.output === false) {\n                res.push({id: id, data: null})\n                continue\n            }\n            res.push({\n                id: id,\n                data: x.env.data[x.env.data.length - 1]\n            })\n            for (var side of ['onchart', 'offchart']) {\n                for (var id in x.env[side]) {\n                    let y = x.env[side][id]\n                    res.push({\n                        id: `${side}.${id}`,\n                        data: y.data[y.data.length - 1]\n                    })\n                }\n            }\n        }\n        return res\n    }\n\n    restarted() {\n        if (this._restart) {\n            this._restart = false\n            this.running = false\n            this.perf = 0\n            //console.log('Restarted')\n            return true\n        }\n        return false\n    }\n\n    remove_scripts(ids) {\n        for (var id of ids) delete this.map[id]\n        this.send_state()\n    }\n\n    pre_run_mods(sel) {\n        for (var id in this.mods) {\n            if (this.mods[id].pre_run) {\n                this.mods[id].pre_run(sel)\n            }\n        }\n    }\n\n    post_run_mods(sel) {\n        for (var id in this.mods) {\n            if (this.mods[id].post_run) {\n                this.mods[id].post_run(sel)\n            }\n        }\n    }\n\n    make_mods_hooks(name) {\n        let arr = []\n        for (var id in this.mods) {\n            if (this.mods[id][name]) {\n                arr.push(this.mods[id][name]\n                    .bind(this.mods[id]))\n            }\n        }\n        return arr\n    }\n\n    data_required(s) {\n\n        let all = Object.values(this.map)\n        if (s) all.push(s)\n\n        let types = [{ type: 'OHLCV' }]\n        for (var s of all) {\n            if (s.src.data) {\n                let reqs = Object.values(s.src.data)\n                types.push(...reqs.map(x => ({\n                    id: s.uuid,\n                    type: x.type\n                })))\n            }\n        }\n        let unf = types.filter(x =>\n            !Object.values(this.data)\n            .find(y => y.type === x.type)\n        )\n        return unf.length ? unf : null\n    }\n\n    // Match dataset id using script id & required type\n    match_ds(id, type) {\n        // TODO: develop further\n        for (var id in this.data) {\n            if (this.data[id].type === type) {\n                return id\n            }\n        }\n    }\n\n    // Make a ohlcv data point if there is a symbol\n    // with { main: true } props (overwrites ohlcv).\n    make_ohlcv() {\n        let sym = this.custom_main\n        let tNext = this.t + this.tf\n        if (sym.update(null, tNext)) {\n            this.data.ohlcv.data.push([\n                tNext,\n                sym.open[0],\n                sym.high[0],\n                sym.low[0],\n                sym.close[0],\n                sym.vol[0]\n            ])\n        }\n    }\n\n    // Calculate data size\n    recalc_size() {\n        while(true) {\n            var sz = u.size_of_dss(this.data) / (1024 * 1024)\n            let lim = this.sett.ww_ram_limit\n            if (lim && sz > lim) {\n                this.limit_size()\n            } else break\n        }\n        this.data_size = +sz.toFixed(2)\n        this.send_state()\n    }\n\n    // Limit data size by throwing out the least\n    // active datasets (measured by 'last_upd')\n    limit_size() {\n        let dss = Object.values(this.data).map(x => ({\n            id: x.id,\n            t: x.last_upd\n        }))\n        dss.sort((a, b) => a.t - b.t)\n        if (dss.length) {\n            delete this.data[dss[0].id]\n        }\n    }\n}\n\nexport default new ScriptEngine()\n","\n// Dataset proxy between vuejs & WebWorker\n\nimport { now } from './script_utils.js'\n\nexport default class Dataset {\n\n    constructor(dc, desc) {\n\n        // TODO: dataset url arrow fn tells WW\n        // to load the ds directly from web\n\n        this.type = desc.type\n        this.id = desc.id\n        this.dc = dc\n\n        // Send the data to WW\n        if (desc.data) {\n            this.dc.ww.just('upload-data', {\n                [this.id]: desc\n            })\n            // Remove the data from the descriptor\n            delete desc.data\n        }\n\n        let proto = Object.getPrototypeOf(this)\n        Object.setPrototypeOf(desc, proto)\n        Object.defineProperty(desc, 'dc', {\n            get() { return dc }\n        })\n\n    }\n\n    // Watch for the changes of descriptors\n    static watcher(n, p) {\n        let nids = n.map(x => x.id)\n        let pids = p.map(x => x.id)\n\n        for (var id of nids) {\n            if (!pids.includes(id)) {\n                let ds = n.filter(x => x.id === id)[0]\n                this.dss[id] = new Dataset(this, ds)\n            }\n        }\n\n        for (var id of pids) {\n            if (!nids.includes(id) && this.dss[id]) {\n                this.dss[id].remove()\n            }\n        }\n    }\n\n    // Make an object for data transfer\n    static make_tx(dc, types) {\n\n        let main = dc.data.chart.data\n        let base = {}\n        if (types.find(x => x.type === 'OHLCV')) {\n            base = { ohlcv: main }\n        }\n\n        // TODO: add more sophisticated search\n        // (using 'script.datasets' paramerter)\n        /*for (var req of types) {\n            let ds = Object.values(dc.dss || {})\n                .find(x => x.type === req.type)\n            if (ds && ds.data) {\n                base[ds.id] = {\n                    id: ds.id,\n                    type: ds.type,\n                    data: ds.data\n                }\n            }\n        }*/\n        // TODO: Data request callback ?\n\n        return base\n    }\n\n    // Set data (overwrite the whole dataset)\n    set(data, exec = true) {\n        this.dc.ww.just('dataset-op', {\n            id: this.id,\n            type: 'set',\n            data: data,\n            exec: exec\n        })\n    }\n\n    // Update with new data (array of data points)\n    update(arr) {\n        this.dc.ww.just('update-data', {\n            [this.id]: arr\n        })\n    }\n\n    // Send WW a chunk to merge. The merge algo\n    // here is simpler than in DC. It just adds\n    // data at the beginning or/and the end of ds\n    merge(data, exec = true) {\n        this.dc.ww.just('dataset-op', {\n            id: this.id,\n            type: 'mrg',\n            data: data,\n            exec: exec\n        })\n    }\n\n    // Remove the ds from WW\n    remove(exec = true) {\n        this.dc.del(`datasets.${this.id}`)\n        this.dc.ww.just('dataset-op', {\n            id: this.id,\n            type: 'del',\n            exec: exec\n        })\n        delete this.dc.dss[this.id]\n    }\n\n    // Fetch data from WW\n    async data() {\n        let ds = await this.dc.ww.exec(\n            'get-dataset',\n            this.id\n        )\n        if (!ds) return\n        return ds.data\n    }\n\n}\n\n// Dataset reciever (created on WW)\n\nexport class DatasetWW {\n\n    constructor(id, data) {\n        this.last_upd = now()\n        this.id = id\n        if (Array.isArray(data)) {\n            // Regular array\n            this.data = data\n            if (id === 'ohlcv') this.type = 'OHLCV'\n        } else {\n            // Dataset descriptor\n            this.data = data.data\n            this.type = data.type\n        }\n    }\n\n    // Update from 'update-data' event\n    // TODO: ds size limit (in MB / data points)\n    static update_all(se, data) {\n        for (var k in data) {\n            if (k === 'ohlcv') continue\n            let id = k.split('.')[1] || k\n            if (!se.data[id]) continue\n            let arr = se.data[id].data\n            let iN = arr.length - 1\n            let last = arr[iN]\n\n            for (var dp of data[k]) {\n                if (!last || dp[0] > last[0]) {\n                    arr.push(dp)\n                }\n            }\n            se.data[id].last_upd = now()\n        }\n    }\n\n    merge(data) {\n        let len = this.data.length\n        if (!len) {\n            this.data = data\n            return\n        }\n        let t0 = this.data[0][0]\n        let tN = this.data[len - 1][0]\n        let l = data.filter(x => x[0] < t0)\n        let r = data.filter(x => x[0] > tN)\n        this.data = l.concat(this.data, r)\n    }\n\n    // On dataset operation\n    op(se, op) {\n        this.last_upd = now()\n        switch(op.type) {\n            case 'set':\n                this.data = op.data\n                se.recalc_size()\n                break\n            case 'del':\n                delete se.data[this.id]\n                se.recalc_size()\n                break\n            case 'mrg':\n                this.merge(op.data)\n                se.recalc_size()\n                break\n        }\n    }\n}\n","\n// Web-worker\n\nimport se from './script_engine.js'\nimport Utils from '../stuff/utils.js'\nimport * as u from './script_utils.js'\nimport { DatasetWW } from './dataset.js'\n\nvar data_requested = false\n\n// DC => WW\n\nself.onmessage = async e => {\n    //console.log('Worker got:', e.data.type)\n    switch(e.data.type) {\n\n        case 'update-dc-settings':\n\n            se.sett = e.data.data\n\n            break\n\n        case 'exec-script':\n\n            var req = se.data_required(e.data.data.s)\n            if (req && !data_requested) {\n                data_requested = true\n                self.postMessage({\n                    type: 'request-data', data: req\n                })\n            }\n            se.tf = u.tf_from_str(e.data.data.tf)\n            se.range = e.data.data.range\n            se.queue.push(e.data.data.s)\n            se.exec_all()\n\n            break\n\n        case 'exec-all-scripts':\n\n            var req = se.data_required(e.data.data.s)\n            if (req && !data_requested) {\n                data_requested = true\n                self.postMessage({\n                    type: 'request-data', data: req\n                })\n            }\n\n            se.tf = u.tf_from_str(e.data.data.tf)\n            se.range = e.data.data.range\n            se.exec_all()\n\n            break\n\n        case 'upload-data':\n            self.postMessage({ type: 'data-uploaded' })\n\n            await Utils.pause(1)\n\n            for (var id in e.data.data) {\n                let data = e.data.data[id]\n                se.data[id] = new DatasetWW(id, data)\n            }\n\n            se.recalc_size()\n            data_requested = false\n            se.exec_all()\n\n            break\n\n        case 'upload-module':\n\n            let lib = u.make_module_lib(e.data.data)\n            se.mods[e.data.data.id] = new (\n                new Function(\n                    'mod', 'se', 'lib',\n                    u.f_body(e.data.data.main)\n                )\n            )(e.data.data.id, se, lib)\n\n            break\n\n        case 'module-event':\n            // TODO: this\n            break\n\n        case 'update-data':\n\n            DatasetWW.update_all(se, e.data.data)\n\n            if (e.data.data.ohlcv) {\n                se.update(e.data.data.ohlcv)\n            }\n\n            break\n\n        case 'get-dataset':\n\n            self.postMessage({\n                id: e.data.id,\n                data: se.data[e.data.data]\n            })\n\n            break\n\n        case 'dataset-op':\n\n            await Utils.pause(1)\n\n            if (e.data.data.id in se.data) {\n                se.data[e.data.data.id].op(se, e.data.data)\n            }\n\n            if (e.data.data.exec) se.exec_all()\n\n            break\n\n        case 'update-ov-settings':\n\n            se.tf = u.tf_from_str(e.data.data.tf)\n            se.range = e.data.data.range\n            se.exec_sel(e.data.data.delta)\n\n            break\n\n        case 'send-meta-info':\n\n            se.tf = u.tf_from_str(e.data.data.tf)\n            se.range = e.data.data.range\n\n            break\n\n        case 'remove-scripts':\n\n            se.remove_scripts(e.data.data)\n\n            break\n    }\n\n}\n\n// WW => DC\n\nse.send = (type, data) => {\n\n    switch(type) {\n\n        case 'overlay-data':\n        case 'overlay-update':\n        case 'engine-state':\n        case 'modify-overlay':\n        case 'module-data':\n        case 'script-signal':\n\n            self.postMessage({type, data})\n\n            break\n\n    }\n\n}\n","\n// Webworker interface\n\n// Compiled webworker (see webpack/ww_plugin.js)\nimport worker_data from './tmp/ww$$$.json'\nimport Utils from '../stuff/utils.js'\nimport lz from 'lz-string'\nimport {} from './script_ww.js' // For webworker-loader to find the ww\n\nclass WebWork {\n\n    constructor(dc) {\n        this.dc = dc\n        this.tasks = {}\n        this.onevent = () => {}\n        this.start()\n    }\n\n    start() {\n        if (this.worker) this.worker.terminate()\n        // URL.createObjectURL\n        window.URL = window.URL || window.webkitURL\n        let data = lz.decompressFromBase64(worker_data[0])\n        var blob\n        try {\n            blob = new Blob([data], {type: 'application/javascript'})\n        } catch (e) {\n            // Backwards-compatibility\n            window.BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder\n            blob = new BlobBuilder()\n            blob.append(data)\n            blob = blob.getBlob()\n        }\n        this.worker = new Worker(URL.createObjectURL(blob))\n        this.worker.onmessage = e => this.onmessage(e)\n    }\n\n    start_socket() {\n        if (!this.dc.sett.node_url) return\n        this.socket = new WebSocket(this.dc.sett.node_url)\n        this.socket.addEventListener('message', e => {\n            this.onmessage({data: JSON.parse(e.data)})\n        })\n        this.msg_queue = []\n    }\n\n    send(msg, tx_keys) {\n        if (this.dc.sett.node_url) {\n            return this.send_node(msg, tx_keys)\n        }\n        if (tx_keys) {\n            let tx_objs = tx_keys.map(k => msg.data[k])\n            this.worker.postMessage(msg, tx_objs)\n        } else {\n            this.worker.postMessage(msg)\n        }\n    }\n\n    // Send to node.js via websocket\n    send_node(msg, tx_keys) {\n        if (!this.socket) this.start_socket()\n        if (this.socket && this.socket.readyState) {\n            // Send the old messages first\n            while(this.msg_queue.length) {\n                let m = this.msg_queue.shift()\n                this.socket.send(JSON.stringify(m))\n            }\n            this.socket.send(JSON.stringify(msg))\n        } else {\n            this.msg_queue.push(msg)\n        }\n    }\n\n    onmessage(e) {\n        if (e.data.id in this.tasks) {\n            this.tasks[e.data.id](e.data.data)\n            delete this.tasks[e.data.id]\n        } else {\n            this.onevent(e)\n        }\n    }\n\n    // Execute a task\n    async exec(type, data, tx_keys) {\n        return new Promise((rs, rj) => {\n            let id = Utils.uuid()\n            this.send({ type, id, data }, tx_keys)\n            this.tasks[id] = res => {\n                rs(res)\n            }\n        })\n    }\n\n    // Execute a task, but just fucking do it,\n    // do not wait for the result\n    just(type, data, tx_keys) {\n        let id = Utils.uuid()\n        this.send({ type, id, data }, tx_keys)\n    }\n\n    // Relay an event from iframe postMessage\n    // (for the future)\n    async relay(event, just = false) {\n        return new Promise((rs, rj) => {\n            this.send(event, event.tx_keys)\n            if (!just) {\n                this.tasks[event.id] = res => {\n                    rs(res)\n                }\n            }\n        })\n    }\n\n    destroy() {\n        if (this.worker) this.worker.terminate()\n    }\n}\n\nexport default WebWork\n","\n// DataCube event handlers\n\nimport Utils from '../stuff/utils.js'\nimport Icons from '../stuff/icons.json'\nimport WebWork from './script_ww_api.js'\nimport Dataset from './dataset.js'\n\n\nexport default class DCEvents {\n\n    constructor() {\n\n        this.ww = new WebWork(this)\n\n        // Listen to the web-worker events\n        this.ww.onevent = e => {\n            for (var ctrl of this.tv.controllers) {\n                if (ctrl.ww) ctrl.ww(e.data)\n            }\n            switch(e.data.type) {\n                case 'request-data':\n                    // TODO: DataTunnel class for smarter data transfer\n                    if (this.ww._data_uploading) break\n                    let data = Dataset.make_tx(this, e.data.data)\n                    this.send_meta_2_ww()\n                    this.ww.just('upload-data', data)\n                    this.ww._data_uploading = true\n                    break\n                case 'overlay-data':\n                    this.on_overlay_data(e.data.data)\n                    break\n                case 'overlay-update':\n                    this.on_overlay_update(e.data.data)\n                    break\n                case 'data-uploaded':\n                    this.ww._data_uploading = false\n                    break\n                case 'engine-state':\n                    this.se_state = Object.assign(\n                        this.se_state || {}, e.data.data)\n                    break\n                case 'modify-overlay':\n                    this.modify_overlay(e.data.data)\n                    break\n                case 'script-signal':\n                    this.tv.$emit('signal', e.data.data)\n                    break\n            }\n            for (var ctrl of this.tv.controllers) {\n                if (ctrl.post_ww) ctrl.post_ww(e.data)\n            }\n        }\n    }\n\n    // Called when overalay/tv emits 'custom-event'\n    on_custom_event(event, args) {\n        switch(event) {\n            case 'register-tools': this.register_tools(args)\n                break\n            case 'exec-script': this.exec_script(args)\n                break\n            case 'exec-all-scripts': this.exec_all_scripts()\n                break\n            case 'data-len-changed': this.data_changed(args)\n                break\n            case 'tool-selected':\n                if (!args[0]) break // TODO: Quick fix, investigate\n                if (args[0].split(':')[0] === 'System') {\n                    this.system_tool(args[0].split(':')[1])\n                    break\n                }\n            this.data['tool'] = args[0]\n                if (args[0] === 'Cursor') {\n                    this.drawing_mode_off()\n                }\n                break\n            case 'grid-mousedown': this.grid_mousedown(args)\n                break\n            case 'drawing-mode-off': this.drawing_mode_off()\n                break\n            case 'change-settings': this.change_settings(args)\n                break\n            case 'range-changed': this.scripts_onrange(...args)\n                break\n            case 'scroll-lock': this.on_scroll_lock(args[0])\n                break\n            case 'object-selected': this.object_selected(args)\n                break\n            case 'remove-tool': this.system_tool('Remove')\n                break\n            case 'before-destroy': this.before_destroy()\n                break\n\n        }\n\n    }\n\n    // Triggered when one or multiple settings are changed\n    // We select only the changed ones & re-exec them on the\n    // web worker\n    on_settings(values, prev) {\n\n        if (!this.sett.scripts) return\n\n        let delta = {}\n        let changed = false\n\n        for (var i = 0; i < values.length; i++) {\n            let n = values[i]\n            let arr = prev.filter(x => x.v === n.v)\n            if (!arr.length && n.p.settings.$props) {\n                let id = n.p.settings.$uuid\n                if (Utils.is_scr_props_upd(n, prev) &&\n                    Utils.delayed_exec(n.p)) {\n                    delta[id] = n.v\n                    changed = true\n                    n.p['loading'] = true\n                }\n            }\n        }\n\n        if (changed && Object.keys(delta).length) {\n            let tf = this.tv.$refs.chart.interval_ms ||\n                     this.data.chart.tf\n            let range = this.tv.getRange()\n            this.ww.just('update-ov-settings', {\n                delta, tf, range\n            })\n        }\n\n    }\n\n    // When the set of $uuids is changed\n    on_ids_changed(values, prev) {\n\n        let rem = prev.filter(\n            x => x !== undefined && !values.includes(x))\n\n        if (rem.length) {\n            this.ww.just('remove-scripts', rem)\n        }\n    }\n\n    // Combine all tools and their mods\n    register_tools(tools) {\n        let preset = {}\n        for (var tool of this.data.tools || []) {\n             preset[tool.type] = tool\n             delete tool.type\n        }\n        this.data['tools'] = []\n        let list = [{\n            type: 'Cursor', icon: Icons['cursor.png']\n        }]\n        for (var tool of tools) {\n            var proto = Object.assign({}, tool.info)\n            let type = tool.info.type || 'Default'\n            proto.type = `${tool.use_for}:${type}`\n            this.merge_presets(proto, preset[tool.use_for])\n            this.merge_presets(proto, preset[proto.type])\n            delete proto.mods\n            list.push(proto)\n            for (var mod in tool.info.mods) {\n                var mp = Object.assign({}, proto)\n                mp = Object.assign(mp, tool.info.mods[mod])\n                mp.type = `${tool.use_for}:${mod}`\n                this.merge_presets(mp, preset[tool.use_for])\n                this.merge_presets(mp, preset[mp.type])\n                list.push(mp)\n            }\n        }\n        this.data['tools'] = list\n        this.data['tool'] = 'Cursor'\n    }\n\n    exec_script(args) {\n        if (args.length && this.sett.scripts) {\n            let obj = this.get_overlay(args[0])\n            if (!obj || obj.scripts === false) return\n            if (obj.script && obj.script.src) {\n                args[0].src = obj.script.src // opt, override the src\n            }\n            // Parse script props & get the values from the ov\n            // TODO: remove unnecessary script initializations\n            let s = obj.settings\n            let props = args[0].src.props || {}\n            if (!s.$uuid) s.$uuid = `${obj.type}-${Utils.uuid2()}`\n            args[0].uuid = s.$uuid\n            args[0].sett = s\n            for (var k in props || {}) {\n                let proto = props[k]\n                if (s[k] !== undefined) {\n                    proto.val = s[k] // use the existing val\n                    continue\n                }\n                if (proto.def === undefined) {\n                    // TODO: add support of info / errors to the legend\n                    console.error(\n                        `Overlay ${obj.id}: script prop '${k}' ` +\n                        `doesn't have a default value`)\n                    return\n                }\n                s[k] = proto.val = proto.def // set the default\n            }\n            // Remove old props (dropped by the current exec)\n            if (s.$props) {\n                for (var k in s) {\n                    if (s.$props.includes(k) && !(k in props)) {\n                        delete s[k]\n                    }\n                }\n            }\n            s.$props = Object.keys(args[0].src.props || {})\n            obj['loading'] = true\n            let tf = this.tv.$refs.chart.interval_ms ||\n                     this.data.chart.tf\n            let range = this.tv.getRange()\n            if (obj.script && obj.script.output != null) {\n                args[0].output = obj.script.output\n            }\n            this.ww.just('exec-script', {\n                s: args[0], tf, range\n            })\n        }\n    }\n\n    exec_all_scripts() {\n        if (!this.sett.scripts) return\n        this.set_loading(true)\n        let tf = this.tv.$refs.chart.interval_ms ||\n                 this.data.chart.tf\n        let range = this.tv.getRange()\n        this.ww.just('exec-all-scripts', { tf, range })\n    }\n\n    scripts_onrange(r) {\n        if (!this.sett.scripts) return\n        let delta = {}\n\n        this.get('.').forEach(v => {\n            if (v.script && v.script.execOnRange &&\n                v.settings.$uuid) {\n                // TODO: execInterrupt flag?\n                if (Utils.delayed_exec(v)) {\n                    delta[v.settings.$uuid] = v.settings\n                }\n            }\n        })\n\n        if (Object.keys(delta).length) {\n            let tf = this.tv.$refs.chart.interval_ms ||\n                     this.data.chart.tf\n            let range = this.tv.getRange()\n            this.ww.just('update-ov-settings', {\n                delta, tf, range\n            })\n        }\n    }\n\n    // Overlay modification from WW\n    modify_overlay(upd) {\n        let obj = this.get_overlay(upd)\n        if (obj) {\n            for (var k in upd.fields || {}) {\n                if (typeof obj[k] === 'object') {\n                    this.merge(`${upd.uuid}.${k}`, upd.fields[k])\n                } else {\n                    obj[k] = upd.fields[k]\n                }\n            }\n        }\n    }\n\n    data_changed(args) {\n        if (!this.sett.scripts) return\n        if (this.sett.data_change_exec === false) return\n        let main = this.data.chart.data\n        if (this.ww._data_uploading) return\n        if (!this.se_state.scripts) return\n        this.send_meta_2_ww()\n        this.ww.just('upload-data', { ohlcv: main })\n        this.ww._data_uploading = true\n        this.set_loading(true)\n    }\n\n    set_loading(flag) {\n        let skrr = this.get('.').filter(x => x.settings.$props)\n        for (var s of skrr) {\n            this.merge(`${s.id}`, { loading: flag })\n        }\n    }\n\n    send_meta_2_ww() {\n        let tf = this.tv.$refs.chart.interval_ms ||\n                 this.data.chart.tf\n        let range = this.tv.getRange()\n        this.ww.just('send-meta-info', { tf, range })\n    }\n\n    merge_presets(proto, preset) {\n        if (!preset) return\n        for (var k in preset) {\n            if (k === 'settings') {\n                Object.assign(proto[k], preset[k])\n            } else {\n                proto[k] = preset[k]\n            }\n        }\n    }\n\n    grid_mousedown(args) {\n        // TODO: tool state finished?\n        this.object_selected([])\n        // Remove the previous RangeTool\n        let rem = () => this.get('RangeTool')\n            .filter(x => x.settings.shiftMode)\n            .forEach(x => this.del(x.id))\n        if (this.data.tool && this.data.tool !== 'Cursor' &&\n           !this.data.drawingMode) {\n            // Prevent from \"null\" tools (tool created with HODL)\n            if (args[1].type !== 'tap') {\n                this.data['drawingMode'] = true\n                this.build_tool(args[0])\n            } else {\n                this.tv.showTheTip(\n                    `<b>Hodl</b>+<b>Drug</b> to create, ` +\n                    `<b>Tap</b> to finish a tool`\n                )\n            }\n        } else if (this.sett.shift_measure && args[1].shiftKey) {\n            rem()\n            this.tv.$nextTick(() =>\n                this.build_tool(args[0], 'RangeTool:ShiftMode'))\n        } else {\n            rem()\n        }\n    }\n\n    drawing_mode_off() {\n        this.data['drawingMode'] = false\n        this.data['tool'] = 'Cursor'\n    }\n\n    // Place a new tool\n    build_tool(grid_id, type) {\n\n        let list = this.data.tools\n        type = type || this.data.tool\n        let proto = list.find(x => x.type === type)\n        if (!proto) return\n        let sett = Object.assign({}, proto.settings || {})\n        let data = (proto.data || []).slice()\n\n        if(!('legend' in sett)) sett.legend = false\n        if(!('z-index' in sett)) sett['z-index'] = 100\n        sett.$selected = true\n        sett.$state = 'wip'\n\n        let side = grid_id ? 'offchart' : 'onchart'\n        let id = this.add(side, {\n            name: proto.name,\n            type: type.split(':')[0],\n            settings: sett,\n            data: data,\n            grid: { id: grid_id }\n        })\n\n        sett.$uuid = `${id}-${Utils.now()}`\n\n        this.data['selected'] = sett.$uuid\n        this.add_trash_icon()\n    }\n\n    // Remove selected / Remove all, etc\n    system_tool(type) {\n        switch (type) {\n            case 'Remove':\n                if (this.data.selected) {\n                    this.del(this.data.selected)\n                    this.remove_trash_icon()\n                    this.drawing_mode_off()\n                    this.on_scroll_lock(false)\n                }\n                break\n        }\n    }\n\n    // Apply new overlay settings\n    change_settings(args) {\n        let settings = args[0]\n        delete settings.id\n        let grid_id = args[1]\n        this.merge(`${args[3]}.settings`, settings)\n    }\n\n    // Lock the scrolling mechanism\n    on_scroll_lock(flag) {\n        this.data['scrollLock'] = flag\n    }\n\n    // When new object is selected / unselected\n    object_selected(args) {\n        var q = this.data.selected\n        if (q) {\n            // Check if current drawing is finished\n            //let res = this.get_one(`${q}.settings`)\n            //if (res && res.$state !== 'finished') return\n            this.merge(`${q}.settings`, {\n                $selected: false\n            })\n            this.remove_trash_icon()\n        }\n        this.data['selected'] = null\n\n        if (!args.length) return\n\n        this.data['selected'] = args[2]\n        this.merge(`${args[2]}.settings`, {\n            $selected: true\n        })\n\n        this.add_trash_icon()\n    }\n\n    add_trash_icon() {\n        const type = 'System:Remove'\n        if (this.data.tools.find(x => x.type === type)) {\n            return\n        }\n        this.data.tools.push({\n            type, icon: Icons['trash.png']\n        })\n    }\n\n    remove_trash_icon() {\n        // TODO: Does not call Toolbar render (distr version)\n        const type = 'System:Remove'\n        Utils.overwrite(this.data.tools,\n            this.data.tools.filter(x => x.type !== type)\n        )\n    }\n\n    // Set overlay data from the web-worker\n    on_overlay_data(data) {\n        this.get('.').forEach(x => {\n            if (x.settings.$synth) this.del(`${x.id}`)\n        })\n        for (var ov of data) {\n            let obj = this.get_one(`${ov.id}`)\n            if (obj) {\n                obj['loading'] = false\n                if (!ov.data) continue\n                obj.data = ov.data\n            }\n            if (!ov.new_ovs) continue\n            for (var id in ov.new_ovs.onchart) {\n                if (!this.get_one(`onchart.${id}`)) {\n                    this.add('onchart', ov.new_ovs.onchart[id])\n                }\n            }\n            for (var id in ov.new_ovs.offchart) {\n                if (!this.get_one(`offchart.${id}`)) {\n                    this.add('offchart', ov.new_ovs.offchart[id])\n                }\n            }\n        }\n    }\n\n    // Push overlay updates from the web-worker\n    on_overlay_update(data) {\n        for (var ov of data) {\n            if (!ov.data) continue\n            let obj = this.get_one(`${ov.id}`)\n            if (obj) {\n                this.fast_merge(obj.data, ov.data, false)\n            }\n        }\n    }\n\n    // Clean-up unfinished business (tools)\n    before_destroy() {\n        let f = x => !x.settings.$state ||\n            x.settings.$state === 'finished'\n        this.data.onchart = this.data.onchart\n            .filter(f)\n        this.data.offchart = this.data.offchart\n            .filter(f)\n        this.drawing_mode_off()\n        this.on_scroll_lock(false)\n        this.object_selected([])\n        this.ww.destroy()\n    }\n\n    // Get overlay by grid-layer id\n    get_overlay(obj) {\n        let id = obj.id || `g${obj.grid_id}_${obj.layer_id}`\n        let dcid = obj.uuid || this.gldc[id]\n        return this.get_one(`${dcid}`)\n    }\n\n\n}\n","\n// DataCube \"private\" methods\n\nimport Utils from '../stuff/utils.js'\nimport DCEvents from './dc_events.js'\nimport Dataset from './dataset.js'\n\nexport default class DCCore extends DCEvents {\n\n    // Set TV instance (once). Called by TradingVue itself\n    init_tvjs($root) {\n        if (!this.tv) {\n            this.tv = $root\n            this.init_data()\n            this.update_ids()\n\n            // Listen to all setting changes\n            // TODO: works only with merge()\n            this.tv.$watch(() => this.get_by_query('.settings'),\n                (n, p) => this.on_settings(n, p))\n\n            // Listen to all indices changes\n            this.tv.$watch(() => this.get('.')\n                .map(x => x.settings.$uuid),\n                (n, p) => this.on_ids_changed(n, p))\n\n            // Watch for all 'datasets' changes\n            this.tv.$watch(() => this.get('datasets'),\n                Dataset.watcher.bind(this))\n        }\n    }\n\n    // Init Data Structure v1.1\n    init_data($root) {\n\n        if (!('chart' in this.data)) {\n            this.data['chart'] = {\n                type: 'Candles',\n                data: this.data.ohlcv || []\n            }\n        }\n\n        if (!('onchart' in this.data)) {\n            this.data['onchart'] = []\n        }\n\n        if (!('offchart' in this.data)) {\n            this.data['offchart'] = []\n        }\n\n        if (!this.data.chart.settings) {\n            this.data.chart['settings'] = {}\n        }\n\n        // Remove ohlcv cuz we have Data v1.1^\n        delete this.data.ohlcv\n\n        if (!('datasets' in this.data)) {\n            this.data['datasets'] = []\n        }\n\n        // Init dataset proxies\n        for (var ds of this.data.datasets) {\n            if (!this.dss) this.dss = {}\n            this.dss[ds.id] = new Dataset(this, ds)\n        }\n\n    }\n\n    // Range change callback (called by TradingVue)\n    // TODO: improve (reliablity + chunk with limited size)\n    async range_changed(range, tf, check=false) {\n\n        if (!this.loader) return\n        if (!this.loading) {\n            let first = this.data.chart.data[0][0]\n            if (range[0] < first) {\n                this.loading = true\n                await Utils.pause(250) // Load bigger chunks\n                range = range.slice()  // copy\n                range[0] = Math.floor(range[0])\n                range[1] = Math.floor(first)\n                let prom = this.loader(range, tf, d => {\n                    // Callback way\n                    this.chunk_loaded(d)\n                })\n                if (prom && prom.then) {\n                    // Promise way\n                    this.chunk_loaded(await prom)\n                }\n            }\n        }\n        if (!check) this.last_chunk = [range, tf]\n    }\n\n    // A new chunk of data is loaded\n    // TODO: bulletproof fetch\n    chunk_loaded(data) {\n\n        // Updates only candlestick data, or\n        if (Array.isArray(data)) {\n            this.merge('chart.data', data)\n        } else {\n            // Bunch of overlays, including chart.data\n            for (var k in data) {\n                this.merge(k, data[k])\n            }\n        }\n\n        this.loading = false\n        if (this.last_chunk) {\n            this.range_changed(...this.last_chunk, true)\n            this.last_chunk = null\n        }\n\n    }\n\n    // Update ids for all overlays\n    update_ids() {\n        this.data.chart.id = `chart.${this.data.chart.type}`\n        var count = {}\n        // grid_id,layer_id => DC id mapping\n        this.gldc = {}, this.dcgl = {}\n        for (var ov of this.data.onchart) {\n            if (count[ov.type] === undefined) {\n                count[ov.type] = 0\n            }\n            let i = count[ov.type]++\n            ov.id = `onchart.${ov.type}${i}`\n            if (!ov.name) ov.name = ov.type + ` ${i}`\n            if (!ov.settings) ov['settings'] = {}\n\n            // grid_id,layer_id => DC id mapping\n            this.gldc[`g0_${ov.type}_${i}`] = ov.id\n            this.dcgl[ov.id] = `g0_${ov.type}_${i}`\n        }\n        count = {}\n        let grids = [{}]\n        let gid = 0\n        for (var ov of this.data.offchart) {\n            if (count[ov.type] === undefined) {\n                count[ov.type] = 0\n            }\n            let i = count[ov.type]++\n            ov.id = `offchart.${ov.type}${i}`\n            if (!ov.name) ov.name = ov.type + ` ${i}`\n            if (!ov.settings) ov['settings'] = {}\n\n            // grid_id,layer_id => DC id mapping\n            gid++\n            let rgid = (ov.grid || {}).id || gid // real grid_id\n            // When we merge grid, skip ++\n            if ((ov.grid || {}).id) gid--\n            if (!grids[rgid]) grids[rgid] = {}\n            if (grids[rgid][ov.type] === undefined) {\n                grids[rgid][ov.type] = 0\n            }\n            let ri = grids[rgid][ov.type]++\n            this.gldc[`g${rgid}_${ov.type}_${ri}`] = ov.id\n            this.dcgl[ov.id] = `g${rgid}_${ov.type}_${ri}`\n        }\n    }\n\n    // TODO: chart refine (from the exchange chart)\n    update_candle(data) {\n        let ohlcv = this.data.chart.data\n        let last = ohlcv[ohlcv.length - 1]\n        let candle = data['candle']\n        let tf = this.tv.$refs.chart.interval_ms\n        let t_next = last[0] + tf\n        let now = data.t || Utils.now()\n        let t = now >= t_next ? (now - now % tf) : last[0]\n\n        // Update the entire candle\n        if (candle.length >= 6) {\n            t = candle[0]\n        } else {\n            candle = [t, ...candle]\n        }\n\n        this.agg.push('ohlcv', candle)\n        this.update_overlays(data, t, tf)\n        return t >= t_next\n\n    }\n\n    update_tick(data) {\n        let ohlcv = this.data.chart.data\n        let last = ohlcv[ohlcv.length - 1]\n        let tick = data['price']\n        let volume = data['volume'] || 0\n        let tf = this.tv.$refs.chart.interval_ms\n        if (!tf) {\n            return console.warn('Define the main timeframe')\n        }\n        let now = data.t || Utils.now()\n        if (!last) last = [now - now % tf]\n        let t_next = last[0] + tf\n\n        let t = now >= t_next ? (now - now % tf) : last[0]\n\n        if ((t >= t_next || !ohlcv.length) && tick !== undefined) {\n            // And new zero-height candle\n            let nc = [t, tick, tick, tick, tick, volume]\n            this.agg.push('ohlcv', nc, tf)\n            ohlcv.push(nc)\n            this.scroll_to(t)\n\n        } else if (tick !== undefined) {\n            // Update an existing one\n            // TODO: make a separate class Sampler\n            last[2] = Math.max(tick, last[2])\n            last[3] = Math.min(tick, last[3])\n            last[4] = tick\n            last[5] += volume\n            this.agg.push('ohlcv', last, tf)\n        }\n        this.update_overlays(data, t, tf)\n        return t >= t_next\n    }\n\n    // Updates all overlays with given values.\n    update_overlays(data, t, tf) {\n        for (var k in data) {\n            if (k === 'price' || k === 'volume' ||\n                k === 'candle' || k === 't') {\n                continue\n            }\n            if (k.includes('datasets.')) {\n                this.agg.push(k, data[k], tf)\n                continue\n            }\n            if (!Array.isArray(data[k])) {\n                var val = [data[k]]\n            } else {\n                val = data[k]\n            }\n            if (!k.includes('.data')) k += '.data'\n            this.agg.push(k, [t, ...val], tf)\n        }\n    }\n\n    // Returns array of objects matching query.\n    // Object contains { parent, index, value }\n    // TODO: query caching\n    get_by_query(query, chuck) {\n\n        let tuple = query.split('.')\n\n        switch (tuple[0]) {\n            case 'chart':\n                var result = this.chart_as_piv(tuple)\n                break\n            case 'onchart':\n            case 'offchart':\n                result = this.query_search(query, tuple)\n                break\n            case 'datasets':\n                result = this.query_search(query, tuple)\n                for (var r of result) {\n                    if (r.i === 'data') {\n                        r.v = this.dss[r.p.id].data()\n                    }\n                }\n                break\n            default:\n                /* Should get('.') return also the chart? */\n                /*let ch = this.chart_as_query([\n                    'chart',\n                    tuple[1]\n                ])*/\n                let on = this.query_search(query, [\n                    'onchart',\n                    tuple[0],\n                    tuple[1]\n                ])\n                let off = this.query_search(query, [\n                    'offchart',\n                    tuple[0],\n                    tuple[1]\n                ])\n                result = [/*ch[0],*/ ...on, ...off]\n                break\n        }\n        return result.filter(\n            x => !(x.v || {}).locked || chuck)\n    }\n\n    chart_as_piv(tuple) {\n        let field = tuple[1]\n        if (field) return [{\n            p: this.data.chart,\n            i: field,\n            v: this.data.chart[field]\n        }]\n        else return [{\n            p: this.data,\n            i: 'chart',\n            v: this.data.chart\n        }]\n    }\n\n    query_search(query, tuple) {\n\n        let side = tuple[0]\n        let path = tuple[1] || ''\n        let field = tuple[2]\n\n        let arr = this.data[side].filter(x => (\n            x.id === query ||\n            (x.id && x.id.includes(path)) ||\n            x.name === query ||\n            (x.name && x.name.includes(path)) ||\n            query.includes((x.settings || {}).$uuid)\n        ))\n\n        if (field) {\n            return arr.map(x => ({\n                p: x,\n                i: field,\n                v: x[field]\n            }))\n        }\n\n        return arr.map((x, i) => ({\n            p: this.data[side],\n            i: this.data[side].indexOf(x),\n            v: x\n        }))\n    }\n\n    merge_objects(obj, data, new_obj = {}) {\n\n        // The only way to get Vue to update all stuff\n        // reactively is to create a brand new object.\n        // TODO: Is there a simpler approach?\n        Object.assign(new_obj, obj.v)\n        Object.assign(new_obj, data)\n        obj.p[obj.i] = new_obj\n\n    }\n\n    // Merge overlapping time series\n    merge_ts(obj, data) {\n\n        // Assume that both arrays are pre-sorted\n\n        if (!data.length) return obj.v\n\n        let r1 = [obj.v[0][0], obj.v[obj.v.length - 1][0]]\n        let r2 = [data[0][0],  data[data.length - 1][0]]\n\n        // Overlap\n        let o = [Math.max(r1[0],r2[0]), Math.min(r1[1],r2[1])]\n\n        if (o[1] >= o[0]) {\n\n            let { od, d1, d2 } = this.ts_overlap(obj.v, data, o)\n\n            obj.v.splice(...d1)\n            data.splice(...d2)\n\n            // Dst === Overlap === Src\n            if (!obj.v.length && !data.length) {\n                obj.p[obj.i] = od\n                return obj.v\n            }\n\n            // If src is totally contained in dst\n            if (!data.length) { data = obj.v.splice(d1[0]) }\n\n            // If dst is totally contained in src\n            if (!obj.v.length) { obj.v = data.splice(d2[0]) }\n\n            obj.p[obj.i] = this.combine(obj.v, od, data)\n\n        } else {\n\n            obj.p[obj.i] = this.combine(obj.v, [], data)\n\n        }\n\n        return obj.v\n\n    }\n\n    // TODO: review performance, move to worker\n    ts_overlap(arr1, arr2, range) {\n\n        const t1 = range[0]\n        const t2 = range[1]\n\n        let ts = {} // timestamp map\n\n        let a1 = arr1.filter(x => x[0] >= t1 && x[0] <= t2)\n        let a2 = arr2.filter(x => x[0] >= t1 && x[0] <= t2)\n\n        // Indices of segments\n        let id11 = arr1.indexOf(a1[0])\n        let id12 = arr1.indexOf(a1[a1.length - 1])\n        let id21 = arr2.indexOf(a2[0])\n        let id22 = arr2.indexOf(a2[a2.length - 1])\n\n        for (var i = 0; i < a1.length; i++) {\n            ts[a1[i][0]] = a1[i]\n        }\n\n        for (var i = 0; i < a2.length; i++) {\n            ts[a2[i][0]] = a2[i]\n        }\n\n        let ts_sorted = Object.keys(ts).sort()\n\n        return {\n            od: ts_sorted.map(x => ts[x]),\n            d1: [id11, id12 - id11 + 1],\n            d2: [id21, id22 - id21 + 1]\n        }\n\n    }\n\n    // Combine parts together:\n    // (destination, overlap, source)\n    combine(dst, o, src) {\n\n        function last(arr) { return arr[arr.length - 1][0] }\n\n        if (!dst.length) { dst = o; o = [] }\n        if (!src.length) { src = o; o = [] }\n\n        // The overlap right in the middle\n        if (src[0][0] >= dst[0][0] && last(src) <= last(dst)) {\n\n            return Object.assign(dst, o)\n\n        // The overlap is on the right\n        } else if (last(src) > last(dst)) {\n\n            // Psh(...) is faster but can overflow the stack\n            if (o.length < 100000 && src.length < 100000) {\n                dst.push(...o, ...src)\n                return dst\n            } else {\n                return dst.concat(o, src)\n            }\n\n        // The overlap is on the left\n        } else if (src[0][0] < dst[0][0]) {\n\n            // Push(...) is faster but can overflow the stack\n            if (o.length < 100000 && src.length < 100000) {\n                src.push(...o, ...dst)\n                return src\n            } else {\n                return src.concat(o, dst)\n            }\n\n        } else {  return []  }\n\n    }\n\n    // Simple data-point merge (faster)\n    fast_merge(data, point, main = true) {\n\n        if (!data) return\n\n        let last_t = (data[data.length - 1] || [])[0]\n        let upd_t = point[0]\n\n        if (!data.length || upd_t > last_t) {\n            data.push(point)\n            if (main && this.sett.auto_scroll) {\n                this.scroll_to(upd_t)\n            }\n        } else if (upd_t === last_t) {\n            if (main) {\n                data[data.length - 1] = point\n            } else {\n                data[data.length - 1] = point\n            }\n        }\n\n    }\n\n    scroll_to(t) {\n        if (this.tv.$refs.chart.cursor.locked) return\n        let last = this.tv.$refs.chart.last_candle\n        if (!last) return\n        let tl = last[0]\n        let d = this.tv.getRange()[1] - tl\n        if (d > 0) this.tv.goto(t + d)\n    }\n\n}\n","\n// Sends all dc.sett changes to the web-worker\n\nexport default function(sett, ww) {\n\n    const h = {\n        get: function(sett, k) {\n            return sett[k]\n        },\n        set: function(sett, k, v) {\n            sett[k] = v\n            ww.just('update-dc-settings', sett)\n            return true\n        }\n    }\n\n    ww.just('update-dc-settings', sett)\n\n    return new Proxy(sett, h)\n}\n","// Tick aggregation\n\nimport Utils from '../stuff/utils.js'\n\nexport default class AggTool {\n\n    constructor(dc, int = 100) {\n\n        this.symbols = {}\n        this.int = int // Itarval in ms\n        this.dc = dc\n        this.st_id = null\n        this.data_changed = false\n\n    }\n\n    push(sym, upd, tf) {\n\n        // Start auto updates\n        if (!this.st_id) {\n            this.st_id = setTimeout(() => this.update())\n        }\n\n        tf = parseInt(tf)\n        let old = this.symbols[sym]\n        let t = Utils.now()\n        let isds = sym.includes('datasets.')\n        this.data_changed = true\n\n        if (!old) {\n\n            this.symbols[sym] = { upd, t, data: [] }\n\n        } else if (upd[0] >= old.upd[0] + tf && !isds) {\n\n            // Refine the previous data point\n            this.refine(sym, old.upd.slice())\n\n            this.symbols[sym] = { upd, t, data: [] }\n\n        } else {\n\n            // Tick updates the current\n            this.symbols[sym].upd = upd\n            this.symbols[sym].t = t\n\n        }\n\n        if (isds) {\n            this.symbols[sym].data.push(upd)\n        }\n\n    }\n\n    update() {\n        let out = {}\n        for (var sym in this.symbols) {\n            let upd = this.symbols[sym].upd\n            switch (sym) {\n                case 'ohlcv':\n                    var data = this.dc.data.chart.data\n                    this.dc.fast_merge(data, upd)\n                    out.ohlcv = data.slice(-2)\n                    break\n                default:\n                    if (sym.includes('datasets.')) {\n                        this.update_ds(sym, out)\n                        continue\n                    }\n                    var data = this.dc.get_one(`${sym}`)\n                    if (!data) continue\n                    this.dc.fast_merge(data, upd, false)\n                    break\n            }\n        }\n        // TODO: fill gaps\n        if (this.data_changed) {\n            this.dc.ww.just('update-data', out)\n            this.data_changed = false\n        }\n        setTimeout(() => this.update(), this.int)\n    }\n\n    refine(sym, upd) {\n        if (sym === 'ohlcv') {\n            var data = this.dc.data.chart.data\n            this.dc.fast_merge(data, upd)\n        } else {\n            var data = this.dc.get_one(`${sym}`)\n            if (!data) return\n            this.dc.fast_merge(data, upd, false)\n        }\n    }\n\n    update_ds(sym, out) {\n        let data = this.symbols[sym].data\n        if (data.length) {\n            out[sym] = data\n            this.symbols[sym].data = []\n        }\n    }\n\n    clear() {\n        this.symbols = {}\n    }\n\n}\n","\n// Main DataHelper class. A container for data,\n// which works as a proxy and CRUD interface\n\nimport Utils from '../stuff/utils.js'\nimport DCCore from './dc_core.js'\nimport SettProxy from './sett_proxy.js'\nimport AggTool from './agg_tool.js'\n\n\n// Interface methods. Private methods in dc_core.js\nexport default class DataCube extends DCCore {\n\n    constructor(data = {}, sett = {}) {\n\n        let def_sett = {\n            aggregation: 100,       // Update aggregation interval\n            script_depth: 0,        // 0 === Exec on all data\n            auto_scroll: true,      // Auto scroll to a new candle\n            scripts: true,          // Enable overlays scripts,\n            ww_ram_limit: 0,        // WebWorker RAM limit (MB)\n            node_url: null,         // Use node.js instead of WW\n            shift_measure: true     // Draw measurment shift+click\n        }\n        sett = Object.assign(def_sett, sett)\n\n        super()\n        this.sett = sett\n        this.data = data\n        this.sett = SettProxy(sett, this.ww)\n        this.agg = new AggTool(this, sett.aggregation)\n        this.se_state = {}\n\n        //this.agg.update = this.agg_update.bind(this)\n    }\n\n    // Add new overlay\n    add(side, overlay) {\n\n        if (side !== 'onchart' && side !== 'offchart' &&\n            side !== 'datasets') {\n            return\n        }\n\n        this.data[side].push(overlay)\n        this.update_ids()\n\n        return overlay.id\n    }\n\n    // Get all objects matching the query\n    get(query) {\n        return this.get_by_query(query).map(x => x.v)\n    }\n\n    // Get first object matching the query\n    get_one(query) {\n        return this.get_by_query(query).map(x => x.v)[0]\n    }\n\n    // Set data (reactively)\n    set(query, data) {\n\n        let objects = this.get_by_query(query)\n\n        for (var obj of objects) {\n            let i = obj.i !== undefined ? obj.i : obj.p.indexOf(obj.v)\n            if (i !== -1) {\n                obj.p[i] = data\n            }\n        }\n\n        this.update_ids()\n\n    }\n\n    // Merge object or array (reactively)\n    merge(query, data) {\n\n        let objects = this.get_by_query(query)\n\n        for (var obj of objects) {\n            if (Array.isArray(obj.v)) {\n                if (!Array.isArray(data)) continue\n                // If array is a timeseries, merge it by timestamp\n                // else merge by item index\n                if (obj.v[0] && obj.v[0].length >= 2) {\n                    this.merge_ts(obj, data)\n                } else {\n                    this.merge_objects(obj, data, [])\n                }\n            } else if (typeof obj.v === 'object') {\n                this.merge_objects(obj, data)\n            }\n        }\n\n        this.update_ids()\n\n    }\n\n    // Remove an overlay by query (id/type/name/...)\n    del(query) {\n\n        let objects = this.get_by_query(query)\n\n        for (var obj of objects) {\n\n            // Find current index of the field (if not defined)\n            let i = typeof obj.i !== 'number' ?\n                obj.i : obj.p.indexOf(obj.v)\n\n            if (i !== -1) {\n                this.tv.$delete(obj.p, i)\n            }\n\n        }\n\n        this.update_ids()\n    }\n\n    // Update/append data point, depending on timestamp\n    update(data) {\n        if(data['candle']) {\n            return this.update_candle(data)\n        } else {\n            return this.update_tick(data)\n        }\n    }\n\n    // Lock overlays from being pulled by query_search\n    // TODO: subject to review\n    lock(query) {\n        let objects = this.get_by_query(query)\n        objects.forEach(x => {\n            if (x.v && x.v.id && x.v.type) {\n                x.v.locked = true\n            }\n        })\n    }\n\n    // Unlock overlays from being pulled by query_search\n    //\n    unlock(query) {\n        let objects = this.get_by_query(query, true)\n        objects.forEach(x => {\n            if (x.v && x.v.id && x.v.type) {\n                x.v.locked = false\n            }\n        })\n    }\n\n    // Show indicator\n    show(query) {\n        if (query === 'offchart' || query === 'onchart') {\n             query += '.'\n        } else if (query === '.') {\n            query = ''\n        }\n        this.merge(query + '.settings', { display: true })\n    }\n\n    // Hide indicator\n    hide(query) {\n        if (query === 'offchart' || query === 'onchart') {\n             query += '.'\n        } else if (query === '.') {\n             query = ''\n        }\n        this.merge(query + '.settings', { display: false })\n    }\n\n    // Set data loader callback\n    onrange(callback) {\n        this.loader = callback\n        setTimeout(() =>\n            this.tv.set_loader(callback ? this : null), 0\n        )\n    }\n\n}\n","import { render } from \"./App.vue?vue&type=template&id=a6ef4e30\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a6ef4e30&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\n// MOB_DEBUG=true npm run test - Enables mobile debugging\n// (sending console output to the webpack terminal)\nif (typeof MOB_DEBUG !== 'undefined' && MOB_DEBUG) {\n    console.log = debug\n    console.error = debug\n    console.warn = debug\n}\n\n\ncreateApp(App).mount('#app')\n\nfunction debug(...argv) {\n    fetch('/debug?argv=' + JSON.stringify(argv))\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktrading_vue_js\"] = self[\"webpackChunktrading_vue_js\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(3)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["data","chart","width","height","colors","colorBack","colorGrid","colorText","class","id","mousedown","mouseleave","style","ref","custom_event","chart_props","config","chart_config","controllers","map","ws","tv","this","dc","key","reset","tv_id","range_changed","legend_button","name","tip","SECOND","MINUTE","MINUTE3","MINUTE5","MINUTE15","MINUTE30","HOUR","HOUR4","HOUR12","DAY","WEEK","MONTH","YEAR","MONTHMAP","TIMESCALES","$SCALES","ChartConfig","SBMIN","SBMAX","Infinity","TOOLBAR","TB_ICON","TB_ITEM_M","TB_ICON_BRI","TB_ICON_HOLD","TB_BORDER","TB_B_STYLE","TOOL_COLL","EXPAND","CANDLEW","GRIDX","GRIDY","BOTBAR","PANHEIGHT","DEFAULT_LEN","MINIMUM_LEN","MIN_ZOOM","MAX_ZOOM","VOLSCALE","UX_OPACITY","ZOOM_MODE","L_BTN_SIZE","L_BTN_MARGIN","SCROLL_WHEEL","IB_TF_WARN","MAP_UNIT","map_unit","styles","_layout","grids","grid","i","common","section_props","grid_id","register_kb","remove_kb","cursor_changed","cursor_locked","set_ytransform","layer_meta_props","emit_custom_event","legend_button_click","shaders","timezone","Context","$p","el","document","createElement","ctx","getContext","font","clamp","num","min","max","add_zero","day_start","t","start","Date","setUTCHours","month_start","date","UTC","getFullYear","getMonth","year_start","get_year","getUTCFullYear","get_month","getUTCMonth","nearest_a","x","array","dist","val","index","length","xi","Math","abs","round","decimals","parseFloat","toFixed","strip","number","toPrecision","get_day","getDate","overwrite","arr","new_arr","splice","copy_layout","obj","new_obj","k","Array","isArray","m","Object","assign","detect_interval","ohlcv","len","slice","forEach","d","get_num_id","parseInt","split","pop","fast_filter","t1","t2","undefined","ia","res","getRange","i0","valpos","next","e","filter","fast_filter_i","i1","floor","i2","fast_nearest","fetch","nextlow","nexthigh","now","getTime","pause","delay","Promise","rs","rj","setTimeout","smart_wheel","delta","log","sign","get_deltaX","event","originalEvent","deltaX","get_deltaY","deltaY","apply_opacity","c","op","n","toString","parse_tf","smth","index_shift","sub","second","first","j","measureText","text","measureTextOrg","doc","getElementById","base","position","top","appendChild","innerText","replace","offsetWidth","uuid","temp","r","random","v","uuid2","warn","f","console","is_scr_props_upd","prev","p","find","$uuid","props","settings","$props","some","delayed_exec","script","execInterval","dt","$last_exec","format_name","ov","reg","RegExp","xmode","is_mobile","default_prevented","original","defaultPrevented","w","navigator","maxTouchPoints","msMaxTouchPoints","DocumentTouch","window","point2line","p1","p2","p3","area","tri","tri_h","point2seg","proj","dot_prod","l1","l2","h","point2ray","dx","dy","sqrt","v1","v2","exp","log_mid","log_hi","log_lo","px","gx","re_range","r1","hi2","mid","log_hi1","log_lo1","log_hi2","log_$","W","self","range","ib","ti_map","spacex","ls","logScale","t2screen","smth2i","$2screen","y","math","A","B","t_magnet","cn","candles","master_grid","raw","screen2$","screen2t","$_magnet","price","c_magnet","data_magnet","candle","px_step","o","l","expand","$_hi","$_lo","bot","MAX_INT","Number","MAX_SAFE_INTEGER","GridMaker","params","interval","layers_meta","y_t","lm","y_range_fn","keys","yrs","values","y_range","calc_$range","hi","lo","auto","log_scale","calc_sidebar","prec","sb","calc_precision","lens","push","str","repeat","max_r","max_l","even","calc_positions","capacity","startx","time_step","xrange","s","dollar_step","yrange","toExponential","pow","dollar_mult","mult_hi","dollar_mult_hi","mult_lo","dollar_mult_lo","yratio","grid_x","t_step","xs","prev_xs","insert_line","extend_left","extend_right","m0","prev_t","i2t","p_t","tf","isFinite","unshift","grid_y","$_step","ys","y1","y$","grid_y_log","$_mult","search_start_pos","y2","search_start_neg","yp","q","log_rounder","value","N","count","quality","div","nice","ro","apply_sizes","create","layout_fn","get_layout","set_sidebar","get_sidebar","Layout","offsub","y_transforms","y_ts","mgrid","grid_hs","weighted_hs","off_h","concat","fill","hs","sum","reduce","a","b","candles_n_vol","volume","maxv","vs","x1","x2","splitter","hf_px_step","green","specs","gms","entries","offset","botbar","CursorUpdater","constructor","comp","cursor","sync","once","cursor_data","locked","cursor_time","overlay_data","ids","ts","type","main_section","mouse","section_values","legend_props","meta_props","get_meta_props","button_click","emit_meta_props","sidebar_transform","rezoom_range","sidebar_props","rerender","FrameAnimation","cb","t0","setInterval","stop","clearInterval","Grid","canvas","layout","offset_x","offset_y","deltas","wmode","listeners","overlays","hm","wheel","mousezoom","mc","T","add","threshold","get","set","enable","on","scroll_lock","mode","emit_cursor_coord","tfrm","y_transform","drug","center","y_r","$emit","calc_offset","propagate","touch2mouse","mousedrag","pan_fade","sim_mousedown","fade","update","pinch","pinchzoom","scale","addEventListener","gesturestart","gesturechange","gestureend","preventDefault","mousemove","layerX","layerY","mouseout","mouseup","args","srcEvent","click","v0","change_range","rect","getBoundingClientRect","new_layer","layer","crosshair","del_layer","show_hide_layer","display","clearRect","apply_shaders","sort","z","save","renderer","pre_draw","draw","post_draw","restore","meta","strokeStyle","beginPath","ymax","moveTo","lineTo","stroke","upper_border","activated","trackpad","trackpad_scroll","diff","tl","ctrlKey","offsetX","diff1","diff2","offsetY","d$","nt","emit","destroy","rm","removeEventListener","unwheel","methods","setup","_id","dpr","devicePixelRatio","_attrs","$nextTick","redraw","create_canvas","attrs","left","onMousemove","onMouseout","onMouseup","onMousedown","watch","on_ux_event","target","vars","overlay_id","uxs","ux","modify","hidden","$set","remove_all_ux","overlay","Crosshair","_visible","visible","cross","setLineDash","hide","ch","handler","explore","deep","render","__exports__","created","_uid","keydown","keyup","keypress","beforeDestroy","Mouse","pressed","dir","off","indexOf","mounted","main","meta_info","Function","_$emit","$options","layer_id","legend","data_colors","exec_script","init_tool","init","use_for","last_ux_id","uxs_count","calc","src","watch_uuid","mixins","author","version","lineWidth","line_width","color","data_index","skip_nan","skip","computed","sett","COLORS","dataIndex","skipNaN","lines_num","_i","clrx","widths","draw_spline","lineWidths","upper","lower","band_color","fillStyle","back_color","fillRect","bandColor","backColor","buy_color","sell_color","arc","marker_size","PI","show_label","draw_label","label_color","new_font","textAlign","fillText","pos","default_font","buyColor","sellColor","labelColor","markerSize","showLabel","show_mid","mapp","y3","showMid","layout_cnv","interval2","ratio","new_interval","px_step2","layout_vol","dim","_i1","_i2","volscale","CandleExt","body_color","colorCandleUp","colorCandleDw","wick_color","colorWickUp","colorWickDw","hw","max_h","x05","VolbarExt","y0","colorVolUp","colorVolDw","Price","init_shader","last_bar","bar","lbl","textHL","shader","last","red","last_price","cnv","show_volume","cv","cc","price_line","showVolume","priceLine","candleUp","candleDw","wickUp","wickDw","colorWickSm","wickSm","volUp","volDw","flag","colorVolUpLegend","colorVolDwLegend","line_color","side","y_position","flag_color","closePath","flagColor","lineColor","yPosition","Keys","keymap","collisions","pins","show_pins","drag","drag_update","selected","start_drag","remove_tool","render_pins","set_state","$state","re_init","rec_position","update_from","y$1","$selected","state","Pin","RADIUS","PIN_RADIUS","RADIUS_SQ","COLOR_BACK","back","COLOR_BR","moved","draw_circle","lw","force","on_settled","hover","Seg","make","Line","ray","bind","Ray","super","tool","group","icon","hint","mods","extended","time","shiftMode","shift","xm","vertical","horizontal","draw_value","xdir","ym","smth2t","f2","dtstr","t2str","join","lines","value_back","value_color","tfs","txt","n2","valueBack","valueColor","precision","components","KeyboardListener","_list","Spline","Splines","Range","Trades","Channel","Segment","Candles","Volume","Splitters","LineTool","RangeTool","_registry","tools","info","indicator","$refs","overflow","backgroundColor","get_overlays","comp_list","inject_renderer","cls","layer_events","common_props","emit_ux_event","e_pass","conf","__renderer__","is_active","ovs","$children","tuple","__prevscript__","keyboard_events","Sidebar","direction","taps","posThreshold","zoom","calc_zoom","calc_range","drugging","points","offst","panel","panwidth","speed","zk","px_mid","new_hi","new_lo","calc_style","title","title_txt","show_values","indicators","ind","buttons","ov_id","base64","onclick","file_name","gr","data_type","button","LegendButton","ButtonGroup","Spinner","main_type","format","types","json_data","off_data","n_a","unk","loading","offchart","cs","init_shaders","skin","Shader","owner","on_shader_event","ChartLegend","ghash","grid_props","all","grid_shaders","sb_shaders","old_val","newhash","last_ghash","Botbar","grid_0","format_date","lbl_highlight","globalAlpha","bot_shaders","format_cursor_x","measure","panheight","ti","tZ","getUTCDate","getUTCHours","getUTCMinutes","yr","mo","dd","_listeners","register","listener","remove","data_changed","changed","_data_n0","_data_len","check_all_data","reindex_delta","save_data_t","_data_t","cndl","interval_ms","goto","t2i","MAX_ARR","TI","sub_start","it_map","sub_i","ss","map_sub","copy","parse","k1","tN","tk","tk2","di","sub1","sub2","i2t_mode","gt2i","E","GridSection","Keyboard","init_range","subset","updater","update_last_values","update_layout","setRange","_hook_xchanged","ce","_hook_xlocked","calc_interval","forced_tf","default_range","dl","ml","overlay_subset","source","indexSrc","settings_ov","last_values","sub_section","remove_meta_props","$delete","clac_tf","lay","_hook_update","keyboard","last_candle","onchart","hooks","list","settings_ohlcv","botbar_props","toolbar","_hook_resize","nw","scrollLock","_hook_data","tool_count","groups","subs","sub_map","is_selected","emit_selected","item_style","icon_style","exp_style","exp_click","expmousedown","expmouseover","expmouseleave","items","close_list","emit_selected_sub","list_style","thismousedown","item","item_class","item_click","onmousedown","brd","tbListBorder","bstl","background","borderTop","borderRight","borderBottom","sel","br","im","cancelBubble","stopPropagation","ItemList","sub_item","click_start","click_id","show_exp_list","exp_hover","clearTimeout","sz","ic","padding","transform","ToolbarItem","tbBack","tbBorder","st","g","initw","ctrl","ctrllist","skin_styles","ctrl_destroy","extensions","Main","__name__","xSettings","nc","pre_dc","post_dc","post_update","stbr","parent","parentNode","removeChild","skin_proto","sheet","setAttribute","innerHTML","$el","widgets","skins","sks","colorpack","resetChart","onsettings","Chart","Toolbar","Widgets","TheTip","titleTxt","String","default","colorTitle","colorTextHL","colorScale","colorCross","colorPanel","colorTbBack","colorTbBorder","FONT","Boolean","required","chartConfig","legendButtons","indexBased","mod_ovs","decubed","font_comp","index_based","parse_colors","init_tvjs","resetRange","getCursor","showTheTip","on_custom_event","onrange","set_loader","pf","k2","toLowerCase","regression","reverse","sum_x","sum_y","sum_xy","sum_xx","NaN","point","FDEFS","SBRACKETS","TFSTR","BUF_INC","tf_cache","f_args","lastIndex","exec","trim","fargs","f_body","lastIndexOf","wrap_idxs","pre","vname","vindex","wrap","make_module_lib","mod","lib","get_raw_src","tf_from_pair","mult","tf_from_str","get_fn_id","ovf","nextt","iN","size_of_dss","bytes","s0","size_of","object","stack","DEF_LIMIT","Ti","__tf__","__id__","__t0__","__len__","TS","OHLCV","ARR","TSS","NUM","Sym","aggtype","fillgaps","idx","data_idx","tmap","__fn__","close","custom_main","open","high","low","vol","update_ohlcv","update_copy","update_custom","noevent","dp","ts0","tsn","x0","ScriptStd","env","se","SWMA","STDEV_EPS","STDEV_Z","_index_tracking","proto","getPrototypeOf","getOwnPropertyNames","_add_i","src2","_tsid","_v","_tf","tstf","tss","sample","nz","na","nf","neg","acos","signal","shared","send","signalif","cond","alma","sigma","norm","asin","atan","atr","tr","rma","avg","since","bb","basis","sma","dev","stdev","bbw","bool","cci","ma","ceil","change","cmo","mom","sm1","sm2","cog","corr","cos","src1","crossover","crossunder","cum","dayofmonth","dayofweek","getUTCDay","mean","dmi","smooth","up","down","plusDM","minusDM","trur","plus","minus","adx","ema","falling","fixnan","highest","highestbars","hma","len2","len3","wma","delt","hour","iff","kc","use_tr","kcw","linreg","lr","log10","lowest","lowestbars","li","macd","fast","slow","sig","fast_ma","slow_ma","hist","fields","buffsize","mfi","ts1","ts2","rsi","minute","month","__offset__","$synth","post","scripts","onclose","upd","send_modify","out","linearint","nearestrank","percentrank","pivothigh","right","pivotlow","rising","roc","pc","sar","inc","minTick","maxMin","acc","iter","outSet","getUTCSeconds","sin","sumf","sqd","stoch","supertrend","factor","atrlen","hl2","ls1","ss1","plot","swma","sym","syms","tan","sesh","timestamp","tsi","short","long","m_abs","variance","vwap","vwma","sxv","weekofyear","setDate","week1","wpr","hh","ll","year","FDEFS1","FDEFS2","ScriptEnv","std","std_inject","output","box_maker","make_box","build","step","limit","def","JSON","stringify","dss","match_ds","make_modules","prep","init_src","upd_src","post_src","api","call_id","fkeyword","fname","postfix","get_args","fdef","parentheses","get_args_2","substr","regex_clone","parts","q1","q2","q3","part","rex","flags","SYMTF","FNSTD","SYMSTD","parse_ts_sym","fn","std_plus","deps","WAIT_EXEC","ScriptEngine","exec_id","queue","delta_queue","update_queue","exec_all","async","init_state","re_init_map","run","drain_queues","send_state","exec_sel","symstd","pre_env","new_env","running","mfs1","make_mods_hooks","mfs2","send_update","task","_restart","last_perf","perf","last_t","data_size","format_update","pre_run_mods","restarted","make_ohlcv","post_run_mods","format_map","depth","script_depth","new_ovs","remove_scripts","pre_run","post_run","data_required","reqs","unf","tNext","recalc_size","lim","ww_ram_limit","limit_size","last_upd","Dataset","desc","ww","just","setPrototypeOf","defineProperty","watcher","nids","pids","includes","ds","make_tx","merge","del","DatasetWW","update_all","data_requested","onmessage","req","postMessage","WebWork","tasks","onevent","worker","terminate","URL","webkitURL","blob","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","append","getBlob","Worker","createObjectURL","start_socket","node_url","socket","WebSocket","msg_queue","msg","tx_keys","send_node","tx_objs","readyState","relay","DCEvents","_data_uploading","send_meta_2_ww","on_overlay_data","on_overlay_update","se_state","modify_overlay","post_ww","register_tools","exec_all_scripts","system_tool","drawing_mode_off","grid_mousedown","change_settings","scripts_onrange","on_scroll_lock","object_selected","before_destroy","on_settings","on_ids_changed","rem","preset","merge_presets","mp","get_overlay","error","set_loading","execOnRange","data_change_exec","skrr","drawingMode","build_tool","shift_measure","shiftKey","add_trash_icon","remove_trash_icon","get_one","fast_merge","dcid","gldc","DCCore","$root","init_data","update_ids","$watch","get_by_query","datasets","check","loader","prom","chunk_loaded","then","last_chunk","dcgl","gid","rgid","ri","update_candle","t_next","agg","update_overlays","update_tick","tick","scroll_to","query","chuck","result","chart_as_piv","query_search","field","path","merge_objects","merge_ts","r2","od","d1","d2","ts_overlap","combine","arr1","arr2","a1","a2","id11","id12","id21","id22","ts_sorted","dst","upd_t","auto_scroll","Proxy","AggTool","int","symbols","st_id","old","isds","refine","update_ds","clear","DataCube","def_sett","aggregation","objects","lock","unlock","show","callback","TradingVue","onResize","innerWidth","innerHeight","debug","argv","MOB_DEBUG","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","priority","notFulfilled","fulfilled","every","getter","__esModule","definition","enumerable","globalThis","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}